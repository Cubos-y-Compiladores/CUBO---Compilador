Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOKED
    CALL
    CONST
    ELSE
    FOR
    IF
    IN
    LCORCH
    LENGHTERROR
    MAIN
    PROCEDURE
    RCORCH
    SHAPEA
    SHAPEC
    SHAPEF
    STEP
    VARERROR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> const_block
Rule 2     const_block -> const const const const const block
Rule 3     block -> assignment
Rule 4     block -> function
Rule 5     block -> consult
Rule 6     assignment -> identifier ASSIGN a_content SEMICOLON block
Rule 7     assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block
Rule 8     assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block
Rule 9     assignment -> empty
Rule 10    function -> type
Rule 11    function -> insert
Rule 12    function -> del
Rule 13    function -> len
Rule 14    function -> neg
Rule 15    function -> t
Rule 16    function -> f
Rule 17    function -> blink
Rule 18    function -> delay
Rule 19    type -> TYPE LPARENT ID RPARENT SEMICOLON block
Rule 20    a_content -> RANGE LPARENT INT COMMA value RPARENT
Rule 21    insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
Rule 22    del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
Rule 23    len -> LEN LPARENT ID RPARENT SEMICOLON block
Rule 24    neg -> complex_id DOT NEG SEMICOLON block
Rule 25    t -> complex_id DOT T SEMICOLON block
Rule 26    f -> complex_id DOT F SEMICOLON block
Rule 27    blink -> BLINK LPARENT b_content RPARENT SEMICOLON block
Rule 28    delay -> DELAY LPARENT d_content RPARENT SEMICOLON block
Rule 29    arithmetic -> term
Rule 30    arithmetic -> adding_operator term
Rule 31    arithmetic -> arithmetic adding_operator term
Rule 32    term -> factor
Rule 33    term -> term multiplying_operator factor
Rule 34    factor -> INT
Rule 35    factor -> ID
Rule 36    factor -> LPARENT arithmetic RPARENT
Rule 37    const -> TIMER ASSIGN INT SEMICOLON
Rule 38    const -> RANGOTIMER ASSIGN time_mes SEMICOLON
Rule 39    const -> dimension ASSIGN INT SEMICOLON
Rule 40    const -> CUBO ASSIGN INT SEMICOLON
Rule 41    a_content -> value
Rule 42    a_content -> arithmetic
Rule 43    a_content -> PARENTCL list_term PARENTCR
Rule 44    b_content -> complex_id COMMA INT COMMA time_mes COMMA value
Rule 45    b_content -> complex_id COMMA value
Rule 46    d_content -> empty
Rule 47    d_content -> INT COMMA time_mes
Rule 48    list_term -> value COMMA list_term
Rule 49    list_term -> value
Rule 50    list_term -> <empty>
Rule 51    consult -> ID PARENTCL INT PARENTCR SEMICOLON block
Rule 52    consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON block
Rule 53    dimension -> DIMFILAS
Rule 54    dimension -> DIMCOLUMNAS
Rule 55    time_mes -> QUOTES MIL QUOTES
Rule 56    time_mes -> QUOTES MIN QUOTES
Rule 57    time_mes -> QUOTES SEG QUOTES
Rule 58    adding_operator -> PLUS
Rule 59    adding_operator -> MINUS
Rule 60    multiplying_operator -> TIMES
Rule 61    multiplying_operator -> EXP
Rule 62    multiplying_operator -> DIVIDE
Rule 63    multiplying_operator -> DIVENT
Rule 64    multiplying_operator -> MOD
Rule 65    value -> FALSE
Rule 66    value -> TRUE
Rule 67    relation -> ASSIGN
Rule 68    relation -> NE
Rule 69    relation -> LT
Rule 70    relation -> GT
Rule 71    relation -> LTE
Rule 72    relation -> GTE
Rule 73    identifier -> ID
Rule 74    identifier -> complex_id
Rule 75    complex_id -> ID PARENTCL INT PARENTCR
Rule 76    complex_id -> ID PARENTCL INT TP INT PARENTCR
Rule 77    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 6 7 8 37 38 39 40 67
BLINK                : 27
BOOKED               : 
CALL                 : 
COMMA                : 8 8 20 21 44 44 44 45 47 48
CONST                : 
CUBO                 : 40
DELAY                : 28
DELETE               : 22
DIMCOLUMNAS          : 54
DIMFILAS             : 53
DIVENT               : 63
DIVIDE               : 62
DOT                  : 21 22 24 25 26
ELSE                 : 
EXP                  : 61
F                    : 26
FALSE                : 65
FOR                  : 
GLOBAL               : 7
GT                   : 70
GTE                  : 72
ID                   : 7 8 8 19 21 22 23 35 51 52 73 75 76
IF                   : 
IN                   : 
INSERT               : 21
INT                  : 20 21 22 34 37 39 40 44 47 51 52 52 75 76 76
LCORCH               : 
LEN                  : 23
LENGHTERROR          : 
LPARENT              : 19 20 21 22 23 27 28 36
LT                   : 69
LTE                  : 71
MAIN                 : 
MIL                  : 55
MIN                  : 56
MINUS                : 59
MOD                  : 64
NE                   : 68
NEG                  : 24
PARENTCL             : 43 51 52 75 76
PARENTCR             : 43 51 52 75 76
PLUS                 : 58
PROCEDURE            : 
QUOTES               : 55 55 56 56 57 57
RANGE                : 20
RANGOTIMER           : 38
RCORCH               : 
RPARENT              : 19 20 21 22 23 27 28 36
SEG                  : 57
SEMICOLON            : 6 7 8 19 21 22 23 24 25 26 27 28 37 38 39 40 51 52
SHAPEA               : 
SHAPEC               : 
SHAPEF               : 
STEP                 : 
T                    : 25
TIMER                : 37
TIMES                : 60
TP                   : 52 76
TRUE                 : 66
TYPE                 : 19
VARERROR             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

a_content            : 6 7
adding_operator      : 30 31
arithmetic           : 31 36 42
assignment           : 3
b_content            : 27
blink                : 17
block                : 2 6 7 8 19 21 22 23 24 25 26 27 28 51 52
complex_id           : 24 25 26 44 45 74
const                : 2 2 2 2 2
const_block          : 1
consult              : 5
d_content            : 28
del                  : 12
delay                : 18
dimension            : 39
empty                : 9 46
f                    : 16
factor               : 32 33
function             : 4
identifier           : 6
insert               : 11
len                  : 13
list_term            : 43 48
multiplying_operator : 33
neg                  : 14
program              : 0
relation             : 
t                    : 15
term                 : 29 30 31 33
time_mes             : 38 44 47
type                 : 10
value                : 8 8 20 21 41 44 45 48 49

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . const_block
    (2) const_block -> . const const const const const block
    (37) const -> . TIMER ASSIGN INT SEMICOLON
    (38) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (39) const -> . dimension ASSIGN INT SEMICOLON
    (40) const -> . CUBO ASSIGN INT SEMICOLON
    (53) dimension -> . DIMFILAS
    (54) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    program                        shift and go to state 1
    const_block                    shift and go to state 2
    const                          shift and go to state 3
    dimension                      shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> const_block .

    $end            reduce using rule 1 (program -> const_block .)


state 3

    (2) const_block -> const . const const const const block
    (37) const -> . TIMER ASSIGN INT SEMICOLON
    (38) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (39) const -> . dimension ASSIGN INT SEMICOLON
    (40) const -> . CUBO ASSIGN INT SEMICOLON
    (53) dimension -> . DIMFILAS
    (54) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 10
    dimension                      shift and go to state 6

state 4

    (37) const -> TIMER . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 11


state 5

    (38) const -> RANGOTIMER . ASSIGN time_mes SEMICOLON

    ASSIGN          shift and go to state 12


state 6

    (39) const -> dimension . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 13


state 7

    (40) const -> CUBO . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 14


state 8

    (53) dimension -> DIMFILAS .

    ASSIGN          reduce using rule 53 (dimension -> DIMFILAS .)


state 9

    (54) dimension -> DIMCOLUMNAS .

    ASSIGN          reduce using rule 54 (dimension -> DIMCOLUMNAS .)


state 10

    (2) const_block -> const const . const const const block
    (37) const -> . TIMER ASSIGN INT SEMICOLON
    (38) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (39) const -> . dimension ASSIGN INT SEMICOLON
    (40) const -> . CUBO ASSIGN INT SEMICOLON
    (53) dimension -> . DIMFILAS
    (54) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 15
    dimension                      shift and go to state 6

state 11

    (37) const -> TIMER ASSIGN . INT SEMICOLON

    INT             shift and go to state 16


state 12

    (38) const -> RANGOTIMER ASSIGN . time_mes SEMICOLON
    (55) time_mes -> . QUOTES MIL QUOTES
    (56) time_mes -> . QUOTES MIN QUOTES
    (57) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 17

state 13

    (39) const -> dimension ASSIGN . INT SEMICOLON

    INT             shift and go to state 19


state 14

    (40) const -> CUBO ASSIGN . INT SEMICOLON

    INT             shift and go to state 20


state 15

    (2) const_block -> const const const . const const block
    (37) const -> . TIMER ASSIGN INT SEMICOLON
    (38) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (39) const -> . dimension ASSIGN INT SEMICOLON
    (40) const -> . CUBO ASSIGN INT SEMICOLON
    (53) dimension -> . DIMFILAS
    (54) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 21
    dimension                      shift and go to state 6

state 16

    (37) const -> TIMER ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 22


state 17

    (38) const -> RANGOTIMER ASSIGN time_mes . SEMICOLON

    SEMICOLON       shift and go to state 23


state 18

    (55) time_mes -> QUOTES . MIL QUOTES
    (56) time_mes -> QUOTES . MIN QUOTES
    (57) time_mes -> QUOTES . SEG QUOTES

    MIL             shift and go to state 24
    MIN             shift and go to state 25
    SEG             shift and go to state 26


state 19

    (39) const -> dimension ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 27


state 20

    (40) const -> CUBO ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 28


state 21

    (2) const_block -> const const const const . const block
    (37) const -> . TIMER ASSIGN INT SEMICOLON
    (38) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (39) const -> . dimension ASSIGN INT SEMICOLON
    (40) const -> . CUBO ASSIGN INT SEMICOLON
    (53) dimension -> . DIMFILAS
    (54) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 29
    dimension                      shift and go to state 6

state 22

    (37) const -> TIMER ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    ID              reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)
    $end            reduce using rule 37 (const -> TIMER ASSIGN INT SEMICOLON .)


state 23

    (38) const -> RANGOTIMER ASSIGN time_mes SEMICOLON .

    TIMER           reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    RANGOTIMER      reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    CUBO            reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMFILAS        reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    GLOBAL          reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    ID              reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    TYPE            reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    LEN             reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    BLINK           reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DELAY           reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    $end            reduce using rule 38 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)


state 24

    (55) time_mes -> QUOTES MIL . QUOTES

    QUOTES          shift and go to state 30


state 25

    (56) time_mes -> QUOTES MIN . QUOTES

    QUOTES          shift and go to state 31


state 26

    (57) time_mes -> QUOTES SEG . QUOTES

    QUOTES          shift and go to state 32


state 27

    (39) const -> dimension ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    ID              reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)
    $end            reduce using rule 39 (const -> dimension ASSIGN INT SEMICOLON .)


state 28

    (40) const -> CUBO ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    ID              reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)
    $end            reduce using rule 40 (const -> CUBO ASSIGN INT SEMICOLON .)


state 29

    (2) const_block -> const const const const const . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 33
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 30

    (55) time_mes -> QUOTES MIL QUOTES .

    SEMICOLON       reduce using rule 55 (time_mes -> QUOTES MIL QUOTES .)
    RPARENT         reduce using rule 55 (time_mes -> QUOTES MIL QUOTES .)
    COMMA           reduce using rule 55 (time_mes -> QUOTES MIL QUOTES .)


state 31

    (56) time_mes -> QUOTES MIN QUOTES .

    SEMICOLON       reduce using rule 56 (time_mes -> QUOTES MIN QUOTES .)
    RPARENT         reduce using rule 56 (time_mes -> QUOTES MIN QUOTES .)
    COMMA           reduce using rule 56 (time_mes -> QUOTES MIN QUOTES .)


state 32

    (57) time_mes -> QUOTES SEG QUOTES .

    SEMICOLON       reduce using rule 57 (time_mes -> QUOTES SEG QUOTES .)
    RPARENT         reduce using rule 57 (time_mes -> QUOTES SEG QUOTES .)
    COMMA           reduce using rule 57 (time_mes -> QUOTES SEG QUOTES .)


state 33

    (2) const_block -> const const const const const block .

    $end            reduce using rule 2 (const_block -> const const const const const block .)


state 34

    (3) block -> assignment .

    $end            reduce using rule 3 (block -> assignment .)


state 35

    (4) block -> function .

    $end            reduce using rule 4 (block -> function .)


state 36

    (5) block -> consult .

    $end            reduce using rule 5 (block -> consult .)


state 37

    (6) assignment -> identifier . ASSIGN a_content SEMICOLON block

    ASSIGN          shift and go to state 55


state 38

    (7) assignment -> GLOBAL . ID ASSIGN a_content SEMICOLON block

    ID              shift and go to state 56


state 39

    (8) assignment -> ID . COMMA ID ASSIGN value COMMA value SEMICOLON block
    (51) consult -> ID . PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> ID . PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> ID .
    (21) insert -> ID . DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> ID . DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (75) complex_id -> ID . PARENTCL INT PARENTCR
    (76) complex_id -> ID . PARENTCL INT TP INT PARENTCR

    COMMA           shift and go to state 57
    PARENTCL        shift and go to state 58
    ASSIGN          reduce using rule 73 (identifier -> ID .)
    DOT             shift and go to state 59


state 40

    (9) assignment -> empty .

    $end            reduce using rule 9 (assignment -> empty .)


state 41

    (10) function -> type .

    $end            reduce using rule 10 (function -> type .)


state 42

    (11) function -> insert .

    $end            reduce using rule 11 (function -> insert .)


state 43

    (12) function -> del .

    $end            reduce using rule 12 (function -> del .)


state 44

    (13) function -> len .

    $end            reduce using rule 13 (function -> len .)


state 45

    (14) function -> neg .

    $end            reduce using rule 14 (function -> neg .)


state 46

    (15) function -> t .

    $end            reduce using rule 15 (function -> t .)


state 47

    (16) function -> f .

    $end            reduce using rule 16 (function -> f .)


state 48

    (17) function -> blink .

    $end            reduce using rule 17 (function -> blink .)


state 49

    (18) function -> delay .

    $end            reduce using rule 18 (function -> delay .)


state 50

    (74) identifier -> complex_id .
    (24) neg -> complex_id . DOT NEG SEMICOLON block
    (25) t -> complex_id . DOT T SEMICOLON block
    (26) f -> complex_id . DOT F SEMICOLON block

    ASSIGN          reduce using rule 74 (identifier -> complex_id .)
    DOT             shift and go to state 60


state 51

    (19) type -> TYPE . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 61


state 52

    (23) len -> LEN . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 62


state 53

    (27) blink -> BLINK . LPARENT b_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 63


state 54

    (28) delay -> DELAY . LPARENT d_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 64


state 55

    (6) assignment -> identifier ASSIGN . a_content SEMICOLON block
    (20) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (41) a_content -> . value
    (42) a_content -> . arithmetic
    (43) a_content -> . PARENTCL list_term PARENTCR
    (65) value -> . FALSE
    (66) value -> . TRUE
    (29) arithmetic -> . term
    (30) arithmetic -> . adding_operator term
    (31) arithmetic -> . arithmetic adding_operator term
    (32) term -> . factor
    (33) term -> . term multiplying_operator factor
    (58) adding_operator -> . PLUS
    (59) adding_operator -> . MINUS
    (34) factor -> . INT
    (35) factor -> . ID
    (36) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 66
    PARENTCL        shift and go to state 71
    FALSE           shift and go to state 72
    TRUE            shift and go to state 73
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    INT             shift and go to state 68
    ID              shift and go to state 79
    LPARENT         shift and go to state 67

    a_content                      shift and go to state 65
    value                          shift and go to state 69
    arithmetic                     shift and go to state 70
    term                           shift and go to state 74
    adding_operator                shift and go to state 75
    factor                         shift and go to state 76

state 56

    (7) assignment -> GLOBAL ID . ASSIGN a_content SEMICOLON block

    ASSIGN          shift and go to state 80


state 57

    (8) assignment -> ID COMMA . ID ASSIGN value COMMA value SEMICOLON block

    ID              shift and go to state 81


state 58

    (51) consult -> ID PARENTCL . INT PARENTCR SEMICOLON block
    (52) consult -> ID PARENTCL . INT TP INT PARENTCR SEMICOLON block
    (75) complex_id -> ID PARENTCL . INT PARENTCR
    (76) complex_id -> ID PARENTCL . INT TP INT PARENTCR

    INT             shift and go to state 82


state 59

    (21) insert -> ID DOT . INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> ID DOT . DELETE LPARENT INT RPARENT SEMICOLON block

    INSERT          shift and go to state 83
    DELETE          shift and go to state 84


state 60

    (24) neg -> complex_id DOT . NEG SEMICOLON block
    (25) t -> complex_id DOT . T SEMICOLON block
    (26) f -> complex_id DOT . F SEMICOLON block

    NEG             shift and go to state 85
    T               shift and go to state 86
    F               shift and go to state 87


state 61

    (19) type -> TYPE LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 88


state 62

    (23) len -> LEN LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 89


state 63

    (27) blink -> BLINK LPARENT . b_content RPARENT SEMICOLON block
    (44) b_content -> . complex_id COMMA INT COMMA time_mes COMMA value
    (45) b_content -> . complex_id COMMA value
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    ID              shift and go to state 92

    b_content                      shift and go to state 90
    complex_id                     shift and go to state 91

state 64

    (28) delay -> DELAY LPARENT . d_content RPARENT SEMICOLON block
    (46) d_content -> . empty
    (47) d_content -> . INT COMMA time_mes
    (77) empty -> .

    INT             shift and go to state 95
    RPARENT         reduce using rule 77 (empty -> .)

    d_content                      shift and go to state 93
    empty                          shift and go to state 94

state 65

    (6) assignment -> identifier ASSIGN a_content . SEMICOLON block

    SEMICOLON       shift and go to state 96


state 66

    (20) a_content -> RANGE . LPARENT INT COMMA value RPARENT

    LPARENT         shift and go to state 97


state 67

    (36) factor -> LPARENT . arithmetic RPARENT
    (29) arithmetic -> . term
    (30) arithmetic -> . adding_operator term
    (31) arithmetic -> . arithmetic adding_operator term
    (32) term -> . factor
    (33) term -> . term multiplying_operator factor
    (58) adding_operator -> . PLUS
    (59) adding_operator -> . MINUS
    (34) factor -> . INT
    (35) factor -> . ID
    (36) factor -> . LPARENT arithmetic RPARENT

    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    INT             shift and go to state 68
    ID              shift and go to state 79
    LPARENT         shift and go to state 67

    arithmetic                     shift and go to state 98
    term                           shift and go to state 74
    adding_operator                shift and go to state 75
    factor                         shift and go to state 76

state 68

    (34) factor -> INT .

    TIMES           reduce using rule 34 (factor -> INT .)
    EXP             reduce using rule 34 (factor -> INT .)
    DIVIDE          reduce using rule 34 (factor -> INT .)
    DIVENT          reduce using rule 34 (factor -> INT .)
    MOD             reduce using rule 34 (factor -> INT .)
    PLUS            reduce using rule 34 (factor -> INT .)
    MINUS           reduce using rule 34 (factor -> INT .)
    SEMICOLON       reduce using rule 34 (factor -> INT .)
    RPARENT         reduce using rule 34 (factor -> INT .)


state 69

    (41) a_content -> value .

    SEMICOLON       reduce using rule 41 (a_content -> value .)


state 70

    (42) a_content -> arithmetic .
    (31) arithmetic -> arithmetic . adding_operator term
    (58) adding_operator -> . PLUS
    (59) adding_operator -> . MINUS

    SEMICOLON       reduce using rule 42 (a_content -> arithmetic .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78

    adding_operator                shift and go to state 99

state 71

    (43) a_content -> PARENTCL . list_term PARENTCR
    (48) list_term -> . value COMMA list_term
    (49) list_term -> . value
    (50) list_term -> .
    (65) value -> . FALSE
    (66) value -> . TRUE

    PARENTCR        reduce using rule 50 (list_term -> .)
    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    list_term                      shift and go to state 100
    value                          shift and go to state 101

state 72

    (65) value -> FALSE .

    SEMICOLON       reduce using rule 65 (value -> FALSE .)
    COMMA           reduce using rule 65 (value -> FALSE .)
    PARENTCR        reduce using rule 65 (value -> FALSE .)
    RPARENT         reduce using rule 65 (value -> FALSE .)


state 73

    (66) value -> TRUE .

    SEMICOLON       reduce using rule 66 (value -> TRUE .)
    COMMA           reduce using rule 66 (value -> TRUE .)
    PARENTCR        reduce using rule 66 (value -> TRUE .)
    RPARENT         reduce using rule 66 (value -> TRUE .)


state 74

    (29) arithmetic -> term .
    (33) term -> term . multiplying_operator factor
    (60) multiplying_operator -> . TIMES
    (61) multiplying_operator -> . EXP
    (62) multiplying_operator -> . DIVIDE
    (63) multiplying_operator -> . DIVENT
    (64) multiplying_operator -> . MOD

    PLUS            reduce using rule 29 (arithmetic -> term .)
    MINUS           reduce using rule 29 (arithmetic -> term .)
    SEMICOLON       reduce using rule 29 (arithmetic -> term .)
    RPARENT         reduce using rule 29 (arithmetic -> term .)
    TIMES           shift and go to state 103
    EXP             shift and go to state 104
    DIVIDE          shift and go to state 105
    DIVENT          shift and go to state 106
    MOD             shift and go to state 107

    multiplying_operator           shift and go to state 102

state 75

    (30) arithmetic -> adding_operator . term
    (32) term -> . factor
    (33) term -> . term multiplying_operator factor
    (34) factor -> . INT
    (35) factor -> . ID
    (36) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 68
    ID              shift and go to state 79
    LPARENT         shift and go to state 67

    term                           shift and go to state 108
    factor                         shift and go to state 76

state 76

    (32) term -> factor .

    TIMES           reduce using rule 32 (term -> factor .)
    EXP             reduce using rule 32 (term -> factor .)
    DIVIDE          reduce using rule 32 (term -> factor .)
    DIVENT          reduce using rule 32 (term -> factor .)
    MOD             reduce using rule 32 (term -> factor .)
    PLUS            reduce using rule 32 (term -> factor .)
    MINUS           reduce using rule 32 (term -> factor .)
    SEMICOLON       reduce using rule 32 (term -> factor .)
    RPARENT         reduce using rule 32 (term -> factor .)


state 77

    (58) adding_operator -> PLUS .

    INT             reduce using rule 58 (adding_operator -> PLUS .)
    ID              reduce using rule 58 (adding_operator -> PLUS .)
    LPARENT         reduce using rule 58 (adding_operator -> PLUS .)


state 78

    (59) adding_operator -> MINUS .

    INT             reduce using rule 59 (adding_operator -> MINUS .)
    ID              reduce using rule 59 (adding_operator -> MINUS .)
    LPARENT         reduce using rule 59 (adding_operator -> MINUS .)


state 79

    (35) factor -> ID .

    TIMES           reduce using rule 35 (factor -> ID .)
    EXP             reduce using rule 35 (factor -> ID .)
    DIVIDE          reduce using rule 35 (factor -> ID .)
    DIVENT          reduce using rule 35 (factor -> ID .)
    MOD             reduce using rule 35 (factor -> ID .)
    PLUS            reduce using rule 35 (factor -> ID .)
    MINUS           reduce using rule 35 (factor -> ID .)
    SEMICOLON       reduce using rule 35 (factor -> ID .)
    RPARENT         reduce using rule 35 (factor -> ID .)


state 80

    (7) assignment -> GLOBAL ID ASSIGN . a_content SEMICOLON block
    (20) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (41) a_content -> . value
    (42) a_content -> . arithmetic
    (43) a_content -> . PARENTCL list_term PARENTCR
    (65) value -> . FALSE
    (66) value -> . TRUE
    (29) arithmetic -> . term
    (30) arithmetic -> . adding_operator term
    (31) arithmetic -> . arithmetic adding_operator term
    (32) term -> . factor
    (33) term -> . term multiplying_operator factor
    (58) adding_operator -> . PLUS
    (59) adding_operator -> . MINUS
    (34) factor -> . INT
    (35) factor -> . ID
    (36) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 66
    PARENTCL        shift and go to state 71
    FALSE           shift and go to state 72
    TRUE            shift and go to state 73
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    INT             shift and go to state 68
    ID              shift and go to state 79
    LPARENT         shift and go to state 67

    a_content                      shift and go to state 109
    value                          shift and go to state 69
    arithmetic                     shift and go to state 70
    term                           shift and go to state 74
    adding_operator                shift and go to state 75
    factor                         shift and go to state 76

state 81

    (8) assignment -> ID COMMA ID . ASSIGN value COMMA value SEMICOLON block

    ASSIGN          shift and go to state 110


state 82

    (51) consult -> ID PARENTCL INT . PARENTCR SEMICOLON block
    (52) consult -> ID PARENTCL INT . TP INT PARENTCR SEMICOLON block
    (75) complex_id -> ID PARENTCL INT . PARENTCR
    (76) complex_id -> ID PARENTCL INT . TP INT PARENTCR

    PARENTCR        shift and go to state 111
    TP              shift and go to state 112


state 83

    (21) insert -> ID DOT INSERT . LPARENT INT COMMA value RPARENT SEMICOLON block

    LPARENT         shift and go to state 113


state 84

    (22) del -> ID DOT DELETE . LPARENT INT RPARENT SEMICOLON block

    LPARENT         shift and go to state 114


state 85

    (24) neg -> complex_id DOT NEG . SEMICOLON block

    SEMICOLON       shift and go to state 115


state 86

    (25) t -> complex_id DOT T . SEMICOLON block

    SEMICOLON       shift and go to state 116


state 87

    (26) f -> complex_id DOT F . SEMICOLON block

    SEMICOLON       shift and go to state 117


state 88

    (19) type -> TYPE LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 118


state 89

    (23) len -> LEN LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 119


state 90

    (27) blink -> BLINK LPARENT b_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 120


state 91

    (44) b_content -> complex_id . COMMA INT COMMA time_mes COMMA value
    (45) b_content -> complex_id . COMMA value

    COMMA           shift and go to state 121


state 92

    (75) complex_id -> ID . PARENTCL INT PARENTCR
    (76) complex_id -> ID . PARENTCL INT TP INT PARENTCR

    PARENTCL        shift and go to state 122


state 93

    (28) delay -> DELAY LPARENT d_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 123


state 94

    (46) d_content -> empty .

    RPARENT         reduce using rule 46 (d_content -> empty .)


state 95

    (47) d_content -> INT . COMMA time_mes

    COMMA           shift and go to state 124


state 96

    (6) assignment -> identifier ASSIGN a_content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    identifier                     shift and go to state 37
    block                          shift and go to state 125
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 97

    (20) a_content -> RANGE LPARENT . INT COMMA value RPARENT

    INT             shift and go to state 126


state 98

    (36) factor -> LPARENT arithmetic . RPARENT
    (31) arithmetic -> arithmetic . adding_operator term
    (58) adding_operator -> . PLUS
    (59) adding_operator -> . MINUS

    RPARENT         shift and go to state 127
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78

    adding_operator                shift and go to state 99

state 99

    (31) arithmetic -> arithmetic adding_operator . term
    (32) term -> . factor
    (33) term -> . term multiplying_operator factor
    (34) factor -> . INT
    (35) factor -> . ID
    (36) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 68
    ID              shift and go to state 79
    LPARENT         shift and go to state 67

    term                           shift and go to state 128
    factor                         shift and go to state 76

state 100

    (43) a_content -> PARENTCL list_term . PARENTCR

    PARENTCR        shift and go to state 129


state 101

    (48) list_term -> value . COMMA list_term
    (49) list_term -> value .

    COMMA           shift and go to state 130
    PARENTCR        reduce using rule 49 (list_term -> value .)


state 102

    (33) term -> term multiplying_operator . factor
    (34) factor -> . INT
    (35) factor -> . ID
    (36) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 68
    ID              shift and go to state 79
    LPARENT         shift and go to state 67

    factor                         shift and go to state 131

state 103

    (60) multiplying_operator -> TIMES .

    INT             reduce using rule 60 (multiplying_operator -> TIMES .)
    ID              reduce using rule 60 (multiplying_operator -> TIMES .)
    LPARENT         reduce using rule 60 (multiplying_operator -> TIMES .)


state 104

    (61) multiplying_operator -> EXP .

    INT             reduce using rule 61 (multiplying_operator -> EXP .)
    ID              reduce using rule 61 (multiplying_operator -> EXP .)
    LPARENT         reduce using rule 61 (multiplying_operator -> EXP .)


state 105

    (62) multiplying_operator -> DIVIDE .

    INT             reduce using rule 62 (multiplying_operator -> DIVIDE .)
    ID              reduce using rule 62 (multiplying_operator -> DIVIDE .)
    LPARENT         reduce using rule 62 (multiplying_operator -> DIVIDE .)


state 106

    (63) multiplying_operator -> DIVENT .

    INT             reduce using rule 63 (multiplying_operator -> DIVENT .)
    ID              reduce using rule 63 (multiplying_operator -> DIVENT .)
    LPARENT         reduce using rule 63 (multiplying_operator -> DIVENT .)


state 107

    (64) multiplying_operator -> MOD .

    INT             reduce using rule 64 (multiplying_operator -> MOD .)
    ID              reduce using rule 64 (multiplying_operator -> MOD .)
    LPARENT         reduce using rule 64 (multiplying_operator -> MOD .)


state 108

    (30) arithmetic -> adding_operator term .
    (33) term -> term . multiplying_operator factor
    (60) multiplying_operator -> . TIMES
    (61) multiplying_operator -> . EXP
    (62) multiplying_operator -> . DIVIDE
    (63) multiplying_operator -> . DIVENT
    (64) multiplying_operator -> . MOD

    PLUS            reduce using rule 30 (arithmetic -> adding_operator term .)
    MINUS           reduce using rule 30 (arithmetic -> adding_operator term .)
    SEMICOLON       reduce using rule 30 (arithmetic -> adding_operator term .)
    RPARENT         reduce using rule 30 (arithmetic -> adding_operator term .)
    TIMES           shift and go to state 103
    EXP             shift and go to state 104
    DIVIDE          shift and go to state 105
    DIVENT          shift and go to state 106
    MOD             shift and go to state 107

    multiplying_operator           shift and go to state 102

state 109

    (7) assignment -> GLOBAL ID ASSIGN a_content . SEMICOLON block

    SEMICOLON       shift and go to state 132


state 110

    (8) assignment -> ID COMMA ID ASSIGN . value COMMA value SEMICOLON block
    (65) value -> . FALSE
    (66) value -> . TRUE

    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    value                          shift and go to state 133

state 111

    (51) consult -> ID PARENTCL INT PARENTCR . SEMICOLON block
    (75) complex_id -> ID PARENTCL INT PARENTCR .

    SEMICOLON       shift and go to state 134
    DOT             reduce using rule 75 (complex_id -> ID PARENTCL INT PARENTCR .)
    ASSIGN          reduce using rule 75 (complex_id -> ID PARENTCL INT PARENTCR .)


state 112

    (52) consult -> ID PARENTCL INT TP . INT PARENTCR SEMICOLON block
    (76) complex_id -> ID PARENTCL INT TP . INT PARENTCR

    INT             shift and go to state 135


state 113

    (21) insert -> ID DOT INSERT LPARENT . INT COMMA value RPARENT SEMICOLON block

    INT             shift and go to state 136


state 114

    (22) del -> ID DOT DELETE LPARENT . INT RPARENT SEMICOLON block

    INT             shift and go to state 137


state 115

    (24) neg -> complex_id DOT NEG SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    complex_id                     shift and go to state 50
    block                          shift and go to state 138
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49

state 116

    (25) t -> complex_id DOT T SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    complex_id                     shift and go to state 50
    block                          shift and go to state 139
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49

state 117

    (26) f -> complex_id DOT F SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    complex_id                     shift and go to state 50
    block                          shift and go to state 140
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49

state 118

    (19) type -> TYPE LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 141


state 119

    (23) len -> LEN LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 142


state 120

    (27) blink -> BLINK LPARENT b_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 143


state 121

    (44) b_content -> complex_id COMMA . INT COMMA time_mes COMMA value
    (45) b_content -> complex_id COMMA . value
    (65) value -> . FALSE
    (66) value -> . TRUE

    INT             shift and go to state 144
    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    value                          shift and go to state 145

state 122

    (75) complex_id -> ID PARENTCL . INT PARENTCR
    (76) complex_id -> ID PARENTCL . INT TP INT PARENTCR

    INT             shift and go to state 146


state 123

    (28) delay -> DELAY LPARENT d_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 147


state 124

    (47) d_content -> INT COMMA . time_mes
    (55) time_mes -> . QUOTES MIL QUOTES
    (56) time_mes -> . QUOTES MIN QUOTES
    (57) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 148

state 125

    (6) assignment -> identifier ASSIGN a_content SEMICOLON block .

    $end            reduce using rule 6 (assignment -> identifier ASSIGN a_content SEMICOLON block .)


state 126

    (20) a_content -> RANGE LPARENT INT . COMMA value RPARENT

    COMMA           shift and go to state 149


state 127

    (36) factor -> LPARENT arithmetic RPARENT .

    TIMES           reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    EXP             reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    DIVIDE          reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    DIVENT          reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    MOD             reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    PLUS            reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    MINUS           reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    SEMICOLON       reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)
    RPARENT         reduce using rule 36 (factor -> LPARENT arithmetic RPARENT .)


state 128

    (31) arithmetic -> arithmetic adding_operator term .
    (33) term -> term . multiplying_operator factor
    (60) multiplying_operator -> . TIMES
    (61) multiplying_operator -> . EXP
    (62) multiplying_operator -> . DIVIDE
    (63) multiplying_operator -> . DIVENT
    (64) multiplying_operator -> . MOD

    PLUS            reduce using rule 31 (arithmetic -> arithmetic adding_operator term .)
    MINUS           reduce using rule 31 (arithmetic -> arithmetic adding_operator term .)
    SEMICOLON       reduce using rule 31 (arithmetic -> arithmetic adding_operator term .)
    RPARENT         reduce using rule 31 (arithmetic -> arithmetic adding_operator term .)
    TIMES           shift and go to state 103
    EXP             shift and go to state 104
    DIVIDE          shift and go to state 105
    DIVENT          shift and go to state 106
    MOD             shift and go to state 107

    multiplying_operator           shift and go to state 102

state 129

    (43) a_content -> PARENTCL list_term PARENTCR .

    SEMICOLON       reduce using rule 43 (a_content -> PARENTCL list_term PARENTCR .)


state 130

    (48) list_term -> value COMMA . list_term
    (48) list_term -> . value COMMA list_term
    (49) list_term -> . value
    (50) list_term -> .
    (65) value -> . FALSE
    (66) value -> . TRUE

    PARENTCR        reduce using rule 50 (list_term -> .)
    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    value                          shift and go to state 101
    list_term                      shift and go to state 150

state 131

    (33) term -> term multiplying_operator factor .

    TIMES           reduce using rule 33 (term -> term multiplying_operator factor .)
    EXP             reduce using rule 33 (term -> term multiplying_operator factor .)
    DIVIDE          reduce using rule 33 (term -> term multiplying_operator factor .)
    DIVENT          reduce using rule 33 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 33 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 33 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 33 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 33 (term -> term multiplying_operator factor .)
    RPARENT         reduce using rule 33 (term -> term multiplying_operator factor .)


state 132

    (7) assignment -> GLOBAL ID ASSIGN a_content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 151
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 133

    (8) assignment -> ID COMMA ID ASSIGN value . COMMA value SEMICOLON block

    COMMA           shift and go to state 152


state 134

    (51) consult -> ID PARENTCL INT PARENTCR SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 153
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 135

    (52) consult -> ID PARENTCL INT TP INT . PARENTCR SEMICOLON block
    (76) complex_id -> ID PARENTCL INT TP INT . PARENTCR

    PARENTCR        shift and go to state 154


state 136

    (21) insert -> ID DOT INSERT LPARENT INT . COMMA value RPARENT SEMICOLON block

    COMMA           shift and go to state 155


state 137

    (22) del -> ID DOT DELETE LPARENT INT . RPARENT SEMICOLON block

    RPARENT         shift and go to state 156


state 138

    (24) neg -> complex_id DOT NEG SEMICOLON block .

    $end            reduce using rule 24 (neg -> complex_id DOT NEG SEMICOLON block .)


state 139

    (25) t -> complex_id DOT T SEMICOLON block .

    $end            reduce using rule 25 (t -> complex_id DOT T SEMICOLON block .)


state 140

    (26) f -> complex_id DOT F SEMICOLON block .

    $end            reduce using rule 26 (f -> complex_id DOT F SEMICOLON block .)


state 141

    (19) type -> TYPE LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 157
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 142

    (23) len -> LEN LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 158
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 143

    (27) blink -> BLINK LPARENT b_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 159
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 144

    (44) b_content -> complex_id COMMA INT . COMMA time_mes COMMA value

    COMMA           shift and go to state 160


state 145

    (45) b_content -> complex_id COMMA value .

    RPARENT         reduce using rule 45 (b_content -> complex_id COMMA value .)


state 146

    (75) complex_id -> ID PARENTCL INT . PARENTCR
    (76) complex_id -> ID PARENTCL INT . TP INT PARENTCR

    PARENTCR        shift and go to state 161
    TP              shift and go to state 162


state 147

    (28) delay -> DELAY LPARENT d_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 163
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 148

    (47) d_content -> INT COMMA time_mes .

    RPARENT         reduce using rule 47 (d_content -> INT COMMA time_mes .)


state 149

    (20) a_content -> RANGE LPARENT INT COMMA . value RPARENT
    (65) value -> . FALSE
    (66) value -> . TRUE

    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    value                          shift and go to state 164

state 150

    (48) list_term -> value COMMA list_term .

    PARENTCR        reduce using rule 48 (list_term -> value COMMA list_term .)


state 151

    (7) assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .

    $end            reduce using rule 7 (assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .)


state 152

    (8) assignment -> ID COMMA ID ASSIGN value COMMA . value SEMICOLON block
    (65) value -> . FALSE
    (66) value -> . TRUE

    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    value                          shift and go to state 165

state 153

    (51) consult -> ID PARENTCL INT PARENTCR SEMICOLON block .

    $end            reduce using rule 51 (consult -> ID PARENTCL INT PARENTCR SEMICOLON block .)


state 154

    (52) consult -> ID PARENTCL INT TP INT PARENTCR . SEMICOLON block
    (76) complex_id -> ID PARENTCL INT TP INT PARENTCR .

    SEMICOLON       shift and go to state 166
    DOT             reduce using rule 76 (complex_id -> ID PARENTCL INT TP INT PARENTCR .)
    ASSIGN          reduce using rule 76 (complex_id -> ID PARENTCL INT TP INT PARENTCR .)


state 155

    (21) insert -> ID DOT INSERT LPARENT INT COMMA . value RPARENT SEMICOLON block
    (65) value -> . FALSE
    (66) value -> . TRUE

    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    value                          shift and go to state 167

state 156

    (22) del -> ID DOT DELETE LPARENT INT RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 168


state 157

    (19) type -> TYPE LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 19 (type -> TYPE LPARENT ID RPARENT SEMICOLON block .)


state 158

    (23) len -> LEN LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 23 (len -> LEN LPARENT ID RPARENT SEMICOLON block .)


state 159

    (27) blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .

    $end            reduce using rule 27 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .)


state 160

    (44) b_content -> complex_id COMMA INT COMMA . time_mes COMMA value
    (55) time_mes -> . QUOTES MIL QUOTES
    (56) time_mes -> . QUOTES MIN QUOTES
    (57) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 169

state 161

    (75) complex_id -> ID PARENTCL INT PARENTCR .

    COMMA           reduce using rule 75 (complex_id -> ID PARENTCL INT PARENTCR .)


state 162

    (76) complex_id -> ID PARENTCL INT TP . INT PARENTCR

    INT             shift and go to state 170


state 163

    (28) delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .

    $end            reduce using rule 28 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .)


state 164

    (20) a_content -> RANGE LPARENT INT COMMA value . RPARENT

    RPARENT         shift and go to state 171


state 165

    (8) assignment -> ID COMMA ID ASSIGN value COMMA value . SEMICOLON block

    SEMICOLON       shift and go to state 172


state 166

    (52) consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 173
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 167

    (21) insert -> ID DOT INSERT LPARENT INT COMMA value . RPARENT SEMICOLON block

    RPARENT         shift and go to state 174


state 168

    (22) del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 175
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 169

    (44) b_content -> complex_id COMMA INT COMMA time_mes . COMMA value

    COMMA           shift and go to state 176


state 170

    (76) complex_id -> ID PARENTCL INT TP INT . PARENTCR

    PARENTCR        shift and go to state 177


state 171

    (20) a_content -> RANGE LPARENT INT COMMA value RPARENT .

    SEMICOLON       reduce using rule 20 (a_content -> RANGE LPARENT INT COMMA value RPARENT .)


state 172

    (8) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 178
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 173

    (52) consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON block .

    $end            reduce using rule 52 (consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON block .)


state 174

    (21) insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 179


state 175

    (22) del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON block .

    $end            reduce using rule 22 (del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON block .)


state 176

    (44) b_content -> complex_id COMMA INT COMMA time_mes COMMA . value
    (65) value -> . FALSE
    (66) value -> . TRUE

    FALSE           shift and go to state 72
    TRUE            shift and go to state 73

    value                          shift and go to state 180

state 177

    (76) complex_id -> ID PARENTCL INT TP INT PARENTCR .

    COMMA           reduce using rule 76 (complex_id -> ID PARENTCL INT TP INT PARENTCR .)


state 178

    (8) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .

    $end            reduce using rule 8 (assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .)


state 179

    (21) insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (17) function -> . blink
    (18) function -> . delay
    (51) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (52) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (73) identifier -> . ID
    (74) identifier -> . complex_id
    (77) empty -> .
    (19) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (21) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (22) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (23) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (24) neg -> . complex_id DOT NEG SEMICOLON block
    (25) t -> . complex_id DOT T SEMICOLON block
    (26) f -> . complex_id DOT F SEMICOLON block
    (27) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (28) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (75) complex_id -> . ID PARENTCL INT PARENTCR
    (76) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 38
    ID              shift and go to state 39
    $end            reduce using rule 77 (empty -> .)
    TYPE            shift and go to state 51
    LEN             shift and go to state 52
    BLINK           shift and go to state 53
    DELAY           shift and go to state 54

    block                          shift and go to state 181
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    identifier                     shift and go to state 37
    empty                          shift and go to state 40
    type                           shift and go to state 41
    insert                         shift and go to state 42
    del                            shift and go to state 43
    len                            shift and go to state 44
    neg                            shift and go to state 45
    t                              shift and go to state 46
    f                              shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    complex_id                     shift and go to state 50

state 180

    (44) b_content -> complex_id COMMA INT COMMA time_mes COMMA value .

    RPARENT         reduce using rule 44 (b_content -> complex_id COMMA INT COMMA time_mes COMMA value .)


state 181

    (21) insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block .

    $end            reduce using rule 21 (insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block .)

