Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOKED
    CALL
    CONST
    ELSE
    IF
    LENGHTERROR
    MAIN
    PROCEDURE
    SHAPEA
    VARERROR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> const_block
Rule 2     const_block -> const const const const const block
Rule 3     block -> assignment
Rule 4     block -> function
Rule 5     block -> consult SEMICOLON block
Rule 6     block -> cycle
Rule 7     assignment -> identifier ASSIGN a_content SEMICOLON block
Rule 8     assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block
Rule 9     assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block
Rule 10    assignment -> empty
Rule 11    function -> type
Rule 12    function -> insert
Rule 13    function -> del
Rule 14    function -> len
Rule 15    function -> neg
Rule 16    function -> t_f
Rule 17    function -> blink
Rule 18    function -> delay
Rule 19    function -> shape
Rule 20    function -> delete
Rule 21    type -> TYPE LPARENT ID RPARENT SEMICOLON block
Rule 22    a_content -> RANGE LPARENT INT COMMA value RPARENT
Rule 23    insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
Rule 24    del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block
Rule 25    len -> LEN LPARENT ID RPARENT SEMICOLON block
Rule 26    neg -> consult DOT NEG SEMICOLON block
Rule 27    t_f -> consult DOT tf SEMICOLON block
Rule 28    blink -> BLINK LPARENT b_content RPARENT SEMICOLON block
Rule 29    delay -> DELAY LPARENT d_content RPARENT SEMICOLON block
Rule 30    shape_arg -> SHAPEF
Rule 31    shape_arg -> SHAPEC
Rule 32    shape -> ID DOT shape_arg SEMICOLON block
Rule 33    delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
Rule 34    cycle -> for
Rule 35    for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
Rule 36    step -> STEP INT
Rule 37    step -> empty
Rule 38    arithmetic -> term
Rule 39    arithmetic -> adding_operator term
Rule 40    arithmetic -> arithmetic adding_operator term
Rule 41    term -> factor
Rule 42    term -> term multiplying_operator factor
Rule 43    factor -> INT
Rule 44    factor -> ID
Rule 45    factor -> LPARENT arithmetic RPARENT
Rule 46    const -> TIMER ASSIGN INT SEMICOLON
Rule 47    const -> RANGOTIMER ASSIGN time_mes SEMICOLON
Rule 48    const -> dimension ASSIGN INT SEMICOLON
Rule 49    const -> CUBO ASSIGN INT SEMICOLON
Rule 50    a_content -> value
Rule 51    a_content -> arithmetic
Rule 52    a_content -> list
Rule 53    b_content -> complex_id COMMA INT COMMA time_mes COMMA value
Rule 54    b_content -> complex_id COMMA value
Rule 55    d_content -> empty
Rule 56    d_content -> INT COMMA time_mes
Rule 57    tf -> T
Rule 58    tf -> F
Rule 59    i_content -> INT COMMA value
Rule 60    i_content -> list COMMA INT i_ind
Rule 61    list -> PARENTCL list_term PARENTCR
Rule 62    list -> PARENTCL empty PARENTCR
Rule 63    list_term -> list_value COMMA list_term
Rule 64    list_term -> list_value
Rule 65    list_value -> value
Rule 66    list_value -> list
Rule 67    consult -> list_consult
Rule 68    consult -> mat_consult
Rule 69    list_consult -> complex_id
Rule 70    mat_consult -> ID PARENTCL indice COMMA indice PARENTCR
Rule 71    mat_consult -> ID PARENTCL TP COMMA indice PARENTCR
Rule 72    indice -> INT
Rule 73    indice -> ID
Rule 74    i_ind -> COMMA INT
Rule 75    i_ind -> empty
Rule 76    dimension -> DIMFILAS
Rule 77    dimension -> DIMCOLUMNAS
Rule 78    time_mes -> QUOTES MIL QUOTES
Rule 79    time_mes -> QUOTES MIN QUOTES
Rule 80    time_mes -> QUOTES SEG QUOTES
Rule 81    adding_operator -> PLUS
Rule 82    adding_operator -> MINUS
Rule 83    multiplying_operator -> TIMES
Rule 84    multiplying_operator -> EXP
Rule 85    multiplying_operator -> DIVIDE
Rule 86    multiplying_operator -> DIVENT
Rule 87    multiplying_operator -> MOD
Rule 88    value -> FALSE
Rule 89    value -> TRUE
Rule 90    relation -> ASSIGN
Rule 91    relation -> NE
Rule 92    relation -> LT
Rule 93    relation -> GT
Rule 94    relation -> LTE
Rule 95    relation -> GTE
Rule 96    identifier -> ID
Rule 97    identifier -> complex_id
Rule 98    complex_id -> ID PARENTCL indice PARENTCR
Rule 99    complex_id -> ID PARENTCL indice TP indice PARENTCR
Rule 100   iterable -> identifier
Rule 101   iterable -> INT
Rule 102   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 7 8 9 46 47 48 49 90
BLINK                : 28
BOOKED               : 
CALL                 : 
COMMA                : 9 9 22 33 53 53 53 54 56 59 60 63 70 71 74
CONST                : 
CUBO                 : 49
DEL                  : 24
DELAY                : 29
DELETE               : 33
DIMCOLUMNAS          : 77
DIMFILAS             : 76
DIVENT               : 86
DIVIDE               : 85
DOT                  : 23 24 26 27 32 33
ELSE                 : 
EXP                  : 84
F                    : 58
FALSE                : 88
FOR                  : 35
GLOBAL               : 8
GT                   : 93
GTE                  : 95
ID                   : 8 9 9 21 23 24 25 32 33 35 44 70 71 73 96 98 99
IF                   : 
IN                   : 35
INSERT               : 23
INT                  : 22 24 33 36 43 46 48 49 53 56 59 60 72 74 101
LCORCH               : 35
LEN                  : 25
LENGHTERROR          : 
LPARENT              : 21 22 23 24 25 28 29 33 45
LT                   : 92
LTE                  : 94
MAIN                 : 
MIL                  : 78
MIN                  : 79
MINUS                : 82
MOD                  : 87
NE                   : 91
NEG                  : 26
PARENTCL             : 61 62 70 71 98 99
PARENTCR             : 61 62 70 71 98 99
PLUS                 : 81
PROCEDURE            : 
QUOTES               : 78 78 79 79 80 80
RANGE                : 22
RANGOTIMER           : 47
RCORCH               : 35
RPARENT              : 21 22 23 24 25 28 29 33 45
SEG                  : 80
SEMICOLON            : 5 7 8 9 21 23 24 25 26 27 28 29 32 33 35 46 47 48 49
SHAPEA               : 
SHAPEC               : 31
SHAPEF               : 30
STEP                 : 36
T                    : 57
TIMER                : 46
TIMES                : 83
TP                   : 71 99
TRUE                 : 89
TYPE                 : 21
VARERROR             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

a_content            : 7 8
adding_operator      : 39 40
arithmetic           : 40 45 51
assignment           : 3
b_content            : 28
blink                : 17
block                : 2 5 7 8 9 21 23 24 25 26 27 28 29 32 33 35 35
complex_id           : 53 54 69 97
const                : 2 2 2 2 2
const_block          : 1
consult              : 5 26 27
cycle                : 6
d_content            : 29
del                  : 13
delay                : 18
delete               : 20
dimension            : 48
empty                : 10 37 55 62 75
factor               : 41 42
for                  : 34
function             : 4
i_content            : 23
i_ind                : 60
identifier           : 7 100
indice               : 33 70 70 71 98 99 99
insert               : 12
iterable             : 35
len                  : 14
list                 : 52 60 66
list_consult         : 67
list_term            : 61 63
list_value           : 63 64
mat_consult          : 68
multiplying_operator : 42
neg                  : 15
program              : 0
relation             : 
shape                : 19
shape_arg            : 32
step                 : 35
t_f                  : 16
term                 : 38 39 40 42
tf                   : 27
time_mes             : 47 53 56
type                 : 11
value                : 9 9 22 50 53 54 59 65

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . const_block
    (2) const_block -> . const const const const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (76) dimension -> . DIMFILAS
    (77) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    program                        shift and go to state 1
    const_block                    shift and go to state 2
    const                          shift and go to state 3
    dimension                      shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> const_block .

    $end            reduce using rule 1 (program -> const_block .)


state 3

    (2) const_block -> const . const const const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (76) dimension -> . DIMFILAS
    (77) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 10
    dimension                      shift and go to state 6

state 4

    (46) const -> TIMER . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 11


state 5

    (47) const -> RANGOTIMER . ASSIGN time_mes SEMICOLON

    ASSIGN          shift and go to state 12


state 6

    (48) const -> dimension . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 13


state 7

    (49) const -> CUBO . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 14


state 8

    (76) dimension -> DIMFILAS .

    ASSIGN          reduce using rule 76 (dimension -> DIMFILAS .)


state 9

    (77) dimension -> DIMCOLUMNAS .

    ASSIGN          reduce using rule 77 (dimension -> DIMCOLUMNAS .)


state 10

    (2) const_block -> const const . const const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (76) dimension -> . DIMFILAS
    (77) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 15
    dimension                      shift and go to state 6

state 11

    (46) const -> TIMER ASSIGN . INT SEMICOLON

    INT             shift and go to state 16


state 12

    (47) const -> RANGOTIMER ASSIGN . time_mes SEMICOLON
    (78) time_mes -> . QUOTES MIL QUOTES
    (79) time_mes -> . QUOTES MIN QUOTES
    (80) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 17

state 13

    (48) const -> dimension ASSIGN . INT SEMICOLON

    INT             shift and go to state 19


state 14

    (49) const -> CUBO ASSIGN . INT SEMICOLON

    INT             shift and go to state 20


state 15

    (2) const_block -> const const const . const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (76) dimension -> . DIMFILAS
    (77) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 21
    dimension                      shift and go to state 6

state 16

    (46) const -> TIMER ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 22


state 17

    (47) const -> RANGOTIMER ASSIGN time_mes . SEMICOLON

    SEMICOLON       shift and go to state 23


state 18

    (78) time_mes -> QUOTES . MIL QUOTES
    (79) time_mes -> QUOTES . MIN QUOTES
    (80) time_mes -> QUOTES . SEG QUOTES

    MIL             shift and go to state 24
    MIN             shift and go to state 25
    SEG             shift and go to state 26


state 19

    (48) const -> dimension ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 27


state 20

    (49) const -> CUBO ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 28


state 21

    (2) const_block -> const const const const . const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (76) dimension -> . DIMFILAS
    (77) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 29
    dimension                      shift and go to state 6

state 22

    (46) const -> TIMER ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    ID              reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    $end            reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)


state 23

    (47) const -> RANGOTIMER ASSIGN time_mes SEMICOLON .

    TIMER           reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    RANGOTIMER      reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    CUBO            reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMFILAS        reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    GLOBAL          reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    ID              reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    TYPE            reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    LEN             reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    BLINK           reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DELAY           reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    FOR             reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    $end            reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)


state 24

    (78) time_mes -> QUOTES MIL . QUOTES

    QUOTES          shift and go to state 30


state 25

    (79) time_mes -> QUOTES MIN . QUOTES

    QUOTES          shift and go to state 31


state 26

    (80) time_mes -> QUOTES SEG . QUOTES

    QUOTES          shift and go to state 32


state 27

    (48) const -> dimension ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    ID              reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    $end            reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)


state 28

    (49) const -> CUBO ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    ID              reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    $end            reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)


state 29

    (2) const_block -> const const const const const . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 33
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 30

    (78) time_mes -> QUOTES MIL QUOTES .

    SEMICOLON       reduce using rule 78 (time_mes -> QUOTES MIL QUOTES .)
    RPARENT         reduce using rule 78 (time_mes -> QUOTES MIL QUOTES .)
    COMMA           reduce using rule 78 (time_mes -> QUOTES MIL QUOTES .)


state 31

    (79) time_mes -> QUOTES MIN QUOTES .

    SEMICOLON       reduce using rule 79 (time_mes -> QUOTES MIN QUOTES .)
    RPARENT         reduce using rule 79 (time_mes -> QUOTES MIN QUOTES .)
    COMMA           reduce using rule 79 (time_mes -> QUOTES MIN QUOTES .)


state 32

    (80) time_mes -> QUOTES SEG QUOTES .

    SEMICOLON       reduce using rule 80 (time_mes -> QUOTES SEG QUOTES .)
    RPARENT         reduce using rule 80 (time_mes -> QUOTES SEG QUOTES .)
    COMMA           reduce using rule 80 (time_mes -> QUOTES SEG QUOTES .)


state 33

    (2) const_block -> const const const const const block .

    $end            reduce using rule 2 (const_block -> const const const const const block .)


state 34

    (3) block -> assignment .

    $end            reduce using rule 3 (block -> assignment .)
    RCORCH          reduce using rule 3 (block -> assignment .)


state 35

    (4) block -> function .

    $end            reduce using rule 4 (block -> function .)
    RCORCH          reduce using rule 4 (block -> function .)


state 36

    (5) block -> consult . SEMICOLON block
    (26) neg -> consult . DOT NEG SEMICOLON block
    (27) t_f -> consult . DOT tf SEMICOLON block

    SEMICOLON       shift and go to state 61
    DOT             shift and go to state 62


state 37

    (6) block -> cycle .

    $end            reduce using rule 6 (block -> cycle .)
    RCORCH          reduce using rule 6 (block -> cycle .)


state 38

    (7) assignment -> identifier . ASSIGN a_content SEMICOLON block

    ASSIGN          shift and go to state 63


state 39

    (8) assignment -> GLOBAL . ID ASSIGN a_content SEMICOLON block

    ID              shift and go to state 64


state 40

    (9) assignment -> ID . COMMA ID ASSIGN value COMMA value SEMICOLON block
    (96) identifier -> ID .
    (23) insert -> ID . DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> ID . DOT DEL LPARENT INT RPARENT SEMICOLON block
    (32) shape -> ID . DOT shape_arg SEMICOLON block
    (33) delete -> ID . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (98) complex_id -> ID . PARENTCL indice PARENTCR
    (99) complex_id -> ID . PARENTCL indice TP indice PARENTCR

    COMMA           shift and go to state 65
    ASSIGN          reduce using rule 96 (identifier -> ID .)
    DOT             shift and go to state 66
    PARENTCL        shift and go to state 67


state 41

    (10) assignment -> empty .

    $end            reduce using rule 10 (assignment -> empty .)
    RCORCH          reduce using rule 10 (assignment -> empty .)


state 42

    (11) function -> type .

    $end            reduce using rule 11 (function -> type .)
    RCORCH          reduce using rule 11 (function -> type .)


state 43

    (12) function -> insert .

    $end            reduce using rule 12 (function -> insert .)
    RCORCH          reduce using rule 12 (function -> insert .)


state 44

    (13) function -> del .

    $end            reduce using rule 13 (function -> del .)
    RCORCH          reduce using rule 13 (function -> del .)


state 45

    (14) function -> len .

    $end            reduce using rule 14 (function -> len .)
    RCORCH          reduce using rule 14 (function -> len .)


state 46

    (15) function -> neg .

    $end            reduce using rule 15 (function -> neg .)
    RCORCH          reduce using rule 15 (function -> neg .)


state 47

    (16) function -> t_f .

    $end            reduce using rule 16 (function -> t_f .)
    RCORCH          reduce using rule 16 (function -> t_f .)


state 48

    (17) function -> blink .

    $end            reduce using rule 17 (function -> blink .)
    RCORCH          reduce using rule 17 (function -> blink .)


state 49

    (18) function -> delay .

    $end            reduce using rule 18 (function -> delay .)
    RCORCH          reduce using rule 18 (function -> delay .)


state 50

    (19) function -> shape .

    $end            reduce using rule 19 (function -> shape .)
    RCORCH          reduce using rule 19 (function -> shape .)


state 51

    (20) function -> delete .

    $end            reduce using rule 20 (function -> delete .)
    RCORCH          reduce using rule 20 (function -> delete .)


state 52

    (67) consult -> list_consult .

    SEMICOLON       reduce using rule 67 (consult -> list_consult .)
    DOT             reduce using rule 67 (consult -> list_consult .)


state 53

    (68) consult -> mat_consult .

    SEMICOLON       reduce using rule 68 (consult -> mat_consult .)
    DOT             reduce using rule 68 (consult -> mat_consult .)


state 54

    (34) cycle -> for .

    $end            reduce using rule 34 (cycle -> for .)
    RCORCH          reduce using rule 34 (cycle -> for .)


state 55

    (97) identifier -> complex_id .
    (69) list_consult -> complex_id .

    ASSIGN          reduce using rule 97 (identifier -> complex_id .)
    SEMICOLON       reduce using rule 69 (list_consult -> complex_id .)
    DOT             reduce using rule 69 (list_consult -> complex_id .)


state 56

    (21) type -> TYPE . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 68


state 57

    (25) len -> LEN . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 69


state 58

    (28) blink -> BLINK . LPARENT b_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 70


state 59

    (29) delay -> DELAY . LPARENT d_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 71


state 60

    (35) for -> FOR . ID IN iterable step LCORCH block RCORCH SEMICOLON block

    ID              shift and go to state 72


state 61

    (5) block -> consult SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    consult                        shift and go to state 36
    block                          shift and go to state 73
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 62

    (26) neg -> consult DOT . NEG SEMICOLON block
    (27) t_f -> consult DOT . tf SEMICOLON block
    (57) tf -> . T
    (58) tf -> . F

    NEG             shift and go to state 74
    T               shift and go to state 76
    F               shift and go to state 77

    tf                             shift and go to state 75

state 63

    (7) assignment -> identifier ASSIGN . a_content SEMICOLON block
    (22) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (50) a_content -> . value
    (51) a_content -> . arithmetic
    (52) a_content -> . list
    (88) value -> . FALSE
    (89) value -> . TRUE
    (38) arithmetic -> . term
    (39) arithmetic -> . adding_operator term
    (40) arithmetic -> . arithmetic adding_operator term
    (61) list -> . PARENTCL list_term PARENTCR
    (62) list -> . PARENTCL empty PARENTCR
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (81) adding_operator -> . PLUS
    (82) adding_operator -> . MINUS
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 79
    FALSE           shift and go to state 85
    TRUE            shift and go to state 86
    PARENTCL        shift and go to state 89
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    INT             shift and go to state 81
    ID              shift and go to state 93
    LPARENT         shift and go to state 80

    a_content                      shift and go to state 78
    value                          shift and go to state 82
    arithmetic                     shift and go to state 83
    list                           shift and go to state 84
    term                           shift and go to state 87
    adding_operator                shift and go to state 88
    factor                         shift and go to state 90

state 64

    (8) assignment -> GLOBAL ID . ASSIGN a_content SEMICOLON block

    ASSIGN          shift and go to state 94


state 65

    (9) assignment -> ID COMMA . ID ASSIGN value COMMA value SEMICOLON block

    ID              shift and go to state 95


state 66

    (23) insert -> ID DOT . INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> ID DOT . DEL LPARENT INT RPARENT SEMICOLON block
    (32) shape -> ID DOT . shape_arg SEMICOLON block
    (33) delete -> ID DOT . DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (30) shape_arg -> . SHAPEF
    (31) shape_arg -> . SHAPEC

    INSERT          shift and go to state 96
    DEL             shift and go to state 97
    DELETE          shift and go to state 99
    SHAPEF          shift and go to state 100
    SHAPEC          shift and go to state 101

    shape_arg                      shift and go to state 98

state 67

    (70) mat_consult -> ID PARENTCL . indice COMMA indice PARENTCR
    (71) mat_consult -> ID PARENTCL . TP COMMA indice PARENTCR
    (98) complex_id -> ID PARENTCL . indice PARENTCR
    (99) complex_id -> ID PARENTCL . indice TP indice PARENTCR
    (72) indice -> . INT
    (73) indice -> . ID

    TP              shift and go to state 104
    INT             shift and go to state 105
    ID              shift and go to state 102

    indice                         shift and go to state 103

state 68

    (21) type -> TYPE LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 106


state 69

    (25) len -> LEN LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 107


state 70

    (28) blink -> BLINK LPARENT . b_content RPARENT SEMICOLON block
    (53) b_content -> . complex_id COMMA INT COMMA time_mes COMMA value
    (54) b_content -> . complex_id COMMA value
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    ID              shift and go to state 110

    b_content                      shift and go to state 108
    complex_id                     shift and go to state 109

state 71

    (29) delay -> DELAY LPARENT . d_content RPARENT SEMICOLON block
    (55) d_content -> . empty
    (56) d_content -> . INT COMMA time_mes
    (102) empty -> .

    INT             shift and go to state 113
    RPARENT         reduce using rule 102 (empty -> .)

    d_content                      shift and go to state 111
    empty                          shift and go to state 112

state 72

    (35) for -> FOR ID . IN iterable step LCORCH block RCORCH SEMICOLON block

    IN              shift and go to state 114


state 73

    (5) block -> consult SEMICOLON block .

    $end            reduce using rule 5 (block -> consult SEMICOLON block .)
    RCORCH          reduce using rule 5 (block -> consult SEMICOLON block .)


state 74

    (26) neg -> consult DOT NEG . SEMICOLON block

    SEMICOLON       shift and go to state 115


state 75

    (27) t_f -> consult DOT tf . SEMICOLON block

    SEMICOLON       shift and go to state 116


state 76

    (57) tf -> T .

    SEMICOLON       reduce using rule 57 (tf -> T .)


state 77

    (58) tf -> F .

    SEMICOLON       reduce using rule 58 (tf -> F .)


state 78

    (7) assignment -> identifier ASSIGN a_content . SEMICOLON block

    SEMICOLON       shift and go to state 117


state 79

    (22) a_content -> RANGE . LPARENT INT COMMA value RPARENT

    LPARENT         shift and go to state 118


state 80

    (45) factor -> LPARENT . arithmetic RPARENT
    (38) arithmetic -> . term
    (39) arithmetic -> . adding_operator term
    (40) arithmetic -> . arithmetic adding_operator term
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (81) adding_operator -> . PLUS
    (82) adding_operator -> . MINUS
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    INT             shift and go to state 81
    ID              shift and go to state 93
    LPARENT         shift and go to state 80

    arithmetic                     shift and go to state 119
    term                           shift and go to state 87
    adding_operator                shift and go to state 88
    factor                         shift and go to state 90

state 81

    (43) factor -> INT .

    TIMES           reduce using rule 43 (factor -> INT .)
    EXP             reduce using rule 43 (factor -> INT .)
    DIVIDE          reduce using rule 43 (factor -> INT .)
    DIVENT          reduce using rule 43 (factor -> INT .)
    MOD             reduce using rule 43 (factor -> INT .)
    PLUS            reduce using rule 43 (factor -> INT .)
    MINUS           reduce using rule 43 (factor -> INT .)
    SEMICOLON       reduce using rule 43 (factor -> INT .)
    RPARENT         reduce using rule 43 (factor -> INT .)


state 82

    (50) a_content -> value .

    SEMICOLON       reduce using rule 50 (a_content -> value .)


state 83

    (51) a_content -> arithmetic .
    (40) arithmetic -> arithmetic . adding_operator term
    (81) adding_operator -> . PLUS
    (82) adding_operator -> . MINUS

    SEMICOLON       reduce using rule 51 (a_content -> arithmetic .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92

    adding_operator                shift and go to state 120

state 84

    (52) a_content -> list .

    SEMICOLON       reduce using rule 52 (a_content -> list .)


state 85

    (88) value -> FALSE .

    SEMICOLON       reduce using rule 88 (value -> FALSE .)
    COMMA           reduce using rule 88 (value -> FALSE .)
    PARENTCR        reduce using rule 88 (value -> FALSE .)
    RPARENT         reduce using rule 88 (value -> FALSE .)


state 86

    (89) value -> TRUE .

    SEMICOLON       reduce using rule 89 (value -> TRUE .)
    COMMA           reduce using rule 89 (value -> TRUE .)
    PARENTCR        reduce using rule 89 (value -> TRUE .)
    RPARENT         reduce using rule 89 (value -> TRUE .)


state 87

    (38) arithmetic -> term .
    (42) term -> term . multiplying_operator factor
    (83) multiplying_operator -> . TIMES
    (84) multiplying_operator -> . EXP
    (85) multiplying_operator -> . DIVIDE
    (86) multiplying_operator -> . DIVENT
    (87) multiplying_operator -> . MOD

    PLUS            reduce using rule 38 (arithmetic -> term .)
    MINUS           reduce using rule 38 (arithmetic -> term .)
    SEMICOLON       reduce using rule 38 (arithmetic -> term .)
    RPARENT         reduce using rule 38 (arithmetic -> term .)
    TIMES           shift and go to state 122
    EXP             shift and go to state 123
    DIVIDE          shift and go to state 124
    DIVENT          shift and go to state 125
    MOD             shift and go to state 126

    multiplying_operator           shift and go to state 121

state 88

    (39) arithmetic -> adding_operator . term
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 81
    ID              shift and go to state 93
    LPARENT         shift and go to state 80

    term                           shift and go to state 127
    factor                         shift and go to state 90

state 89

    (61) list -> PARENTCL . list_term PARENTCR
    (62) list -> PARENTCL . empty PARENTCR
    (63) list_term -> . list_value COMMA list_term
    (64) list_term -> . list_value
    (102) empty -> .
    (65) list_value -> . value
    (66) list_value -> . list
    (88) value -> . FALSE
    (89) value -> . TRUE
    (61) list -> . PARENTCL list_term PARENTCR
    (62) list -> . PARENTCL empty PARENTCR

    PARENTCR        reduce using rule 102 (empty -> .)
    FALSE           shift and go to state 85
    TRUE            shift and go to state 86
    PARENTCL        shift and go to state 89

    list_term                      shift and go to state 128
    empty                          shift and go to state 129
    list_value                     shift and go to state 130
    value                          shift and go to state 131
    list                           shift and go to state 132

state 90

    (41) term -> factor .

    TIMES           reduce using rule 41 (term -> factor .)
    EXP             reduce using rule 41 (term -> factor .)
    DIVIDE          reduce using rule 41 (term -> factor .)
    DIVENT          reduce using rule 41 (term -> factor .)
    MOD             reduce using rule 41 (term -> factor .)
    PLUS            reduce using rule 41 (term -> factor .)
    MINUS           reduce using rule 41 (term -> factor .)
    SEMICOLON       reduce using rule 41 (term -> factor .)
    RPARENT         reduce using rule 41 (term -> factor .)


state 91

    (81) adding_operator -> PLUS .

    INT             reduce using rule 81 (adding_operator -> PLUS .)
    ID              reduce using rule 81 (adding_operator -> PLUS .)
    LPARENT         reduce using rule 81 (adding_operator -> PLUS .)


state 92

    (82) adding_operator -> MINUS .

    INT             reduce using rule 82 (adding_operator -> MINUS .)
    ID              reduce using rule 82 (adding_operator -> MINUS .)
    LPARENT         reduce using rule 82 (adding_operator -> MINUS .)


state 93

    (44) factor -> ID .

    TIMES           reduce using rule 44 (factor -> ID .)
    EXP             reduce using rule 44 (factor -> ID .)
    DIVIDE          reduce using rule 44 (factor -> ID .)
    DIVENT          reduce using rule 44 (factor -> ID .)
    MOD             reduce using rule 44 (factor -> ID .)
    PLUS            reduce using rule 44 (factor -> ID .)
    MINUS           reduce using rule 44 (factor -> ID .)
    SEMICOLON       reduce using rule 44 (factor -> ID .)
    RPARENT         reduce using rule 44 (factor -> ID .)


state 94

    (8) assignment -> GLOBAL ID ASSIGN . a_content SEMICOLON block
    (22) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (50) a_content -> . value
    (51) a_content -> . arithmetic
    (52) a_content -> . list
    (88) value -> . FALSE
    (89) value -> . TRUE
    (38) arithmetic -> . term
    (39) arithmetic -> . adding_operator term
    (40) arithmetic -> . arithmetic adding_operator term
    (61) list -> . PARENTCL list_term PARENTCR
    (62) list -> . PARENTCL empty PARENTCR
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (81) adding_operator -> . PLUS
    (82) adding_operator -> . MINUS
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 79
    FALSE           shift and go to state 85
    TRUE            shift and go to state 86
    PARENTCL        shift and go to state 89
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    INT             shift and go to state 81
    ID              shift and go to state 93
    LPARENT         shift and go to state 80

    a_content                      shift and go to state 133
    value                          shift and go to state 82
    arithmetic                     shift and go to state 83
    list                           shift and go to state 84
    term                           shift and go to state 87
    adding_operator                shift and go to state 88
    factor                         shift and go to state 90

state 95

    (9) assignment -> ID COMMA ID . ASSIGN value COMMA value SEMICOLON block

    ASSIGN          shift and go to state 134


state 96

    (23) insert -> ID DOT INSERT . LPARENT i_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 135


state 97

    (24) del -> ID DOT DEL . LPARENT INT RPARENT SEMICOLON block

    LPARENT         shift and go to state 136


state 98

    (32) shape -> ID DOT shape_arg . SEMICOLON block

    SEMICOLON       shift and go to state 137


state 99

    (33) delete -> ID DOT DELETE . LPARENT indice COMMA INT RPARENT SEMICOLON block

    LPARENT         shift and go to state 138


state 100

    (30) shape_arg -> SHAPEF .

    SEMICOLON       reduce using rule 30 (shape_arg -> SHAPEF .)


state 101

    (31) shape_arg -> SHAPEC .

    SEMICOLON       reduce using rule 31 (shape_arg -> SHAPEC .)


state 102

    (73) indice -> ID .

    COMMA           reduce using rule 73 (indice -> ID .)
    PARENTCR        reduce using rule 73 (indice -> ID .)
    TP              reduce using rule 73 (indice -> ID .)


state 103

    (70) mat_consult -> ID PARENTCL indice . COMMA indice PARENTCR
    (98) complex_id -> ID PARENTCL indice . PARENTCR
    (99) complex_id -> ID PARENTCL indice . TP indice PARENTCR

    COMMA           shift and go to state 139
    PARENTCR        shift and go to state 140
    TP              shift and go to state 141


state 104

    (71) mat_consult -> ID PARENTCL TP . COMMA indice PARENTCR

    COMMA           shift and go to state 142


state 105

    (72) indice -> INT .

    COMMA           reduce using rule 72 (indice -> INT .)
    PARENTCR        reduce using rule 72 (indice -> INT .)
    TP              reduce using rule 72 (indice -> INT .)


state 106

    (21) type -> TYPE LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 143


state 107

    (25) len -> LEN LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 144


state 108

    (28) blink -> BLINK LPARENT b_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 145


state 109

    (53) b_content -> complex_id . COMMA INT COMMA time_mes COMMA value
    (54) b_content -> complex_id . COMMA value

    COMMA           shift and go to state 146


state 110

    (98) complex_id -> ID . PARENTCL indice PARENTCR
    (99) complex_id -> ID . PARENTCL indice TP indice PARENTCR

    PARENTCL        shift and go to state 147


state 111

    (29) delay -> DELAY LPARENT d_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 148


state 112

    (55) d_content -> empty .

    RPARENT         reduce using rule 55 (d_content -> empty .)


state 113

    (56) d_content -> INT . COMMA time_mes

    COMMA           shift and go to state 149


state 114

    (35) for -> FOR ID IN . iterable step LCORCH block RCORCH SEMICOLON block
    (100) iterable -> . identifier
    (101) iterable -> . INT
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    INT             shift and go to state 153
    ID              shift and go to state 150

    iterable                       shift and go to state 151
    identifier                     shift and go to state 152
    complex_id                     shift and go to state 154

state 115

    (26) neg -> consult DOT NEG SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    consult                        shift and go to state 36
    block                          shift and go to state 155
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 116

    (27) t_f -> consult DOT tf SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    consult                        shift and go to state 36
    block                          shift and go to state 156
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 117

    (7) assignment -> identifier ASSIGN a_content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    identifier                     shift and go to state 38
    block                          shift and go to state 157
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 118

    (22) a_content -> RANGE LPARENT . INT COMMA value RPARENT

    INT             shift and go to state 158


state 119

    (45) factor -> LPARENT arithmetic . RPARENT
    (40) arithmetic -> arithmetic . adding_operator term
    (81) adding_operator -> . PLUS
    (82) adding_operator -> . MINUS

    RPARENT         shift and go to state 159
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92

    adding_operator                shift and go to state 120

state 120

    (40) arithmetic -> arithmetic adding_operator . term
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 81
    ID              shift and go to state 93
    LPARENT         shift and go to state 80

    term                           shift and go to state 160
    factor                         shift and go to state 90

state 121

    (42) term -> term multiplying_operator . factor
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 81
    ID              shift and go to state 93
    LPARENT         shift and go to state 80

    factor                         shift and go to state 161

state 122

    (83) multiplying_operator -> TIMES .

    INT             reduce using rule 83 (multiplying_operator -> TIMES .)
    ID              reduce using rule 83 (multiplying_operator -> TIMES .)
    LPARENT         reduce using rule 83 (multiplying_operator -> TIMES .)


state 123

    (84) multiplying_operator -> EXP .

    INT             reduce using rule 84 (multiplying_operator -> EXP .)
    ID              reduce using rule 84 (multiplying_operator -> EXP .)
    LPARENT         reduce using rule 84 (multiplying_operator -> EXP .)


state 124

    (85) multiplying_operator -> DIVIDE .

    INT             reduce using rule 85 (multiplying_operator -> DIVIDE .)
    ID              reduce using rule 85 (multiplying_operator -> DIVIDE .)
    LPARENT         reduce using rule 85 (multiplying_operator -> DIVIDE .)


state 125

    (86) multiplying_operator -> DIVENT .

    INT             reduce using rule 86 (multiplying_operator -> DIVENT .)
    ID              reduce using rule 86 (multiplying_operator -> DIVENT .)
    LPARENT         reduce using rule 86 (multiplying_operator -> DIVENT .)


state 126

    (87) multiplying_operator -> MOD .

    INT             reduce using rule 87 (multiplying_operator -> MOD .)
    ID              reduce using rule 87 (multiplying_operator -> MOD .)
    LPARENT         reduce using rule 87 (multiplying_operator -> MOD .)


state 127

    (39) arithmetic -> adding_operator term .
    (42) term -> term . multiplying_operator factor
    (83) multiplying_operator -> . TIMES
    (84) multiplying_operator -> . EXP
    (85) multiplying_operator -> . DIVIDE
    (86) multiplying_operator -> . DIVENT
    (87) multiplying_operator -> . MOD

    PLUS            reduce using rule 39 (arithmetic -> adding_operator term .)
    MINUS           reduce using rule 39 (arithmetic -> adding_operator term .)
    SEMICOLON       reduce using rule 39 (arithmetic -> adding_operator term .)
    RPARENT         reduce using rule 39 (arithmetic -> adding_operator term .)
    TIMES           shift and go to state 122
    EXP             shift and go to state 123
    DIVIDE          shift and go to state 124
    DIVENT          shift and go to state 125
    MOD             shift and go to state 126

    multiplying_operator           shift and go to state 121

state 128

    (61) list -> PARENTCL list_term . PARENTCR

    PARENTCR        shift and go to state 162


state 129

    (62) list -> PARENTCL empty . PARENTCR

    PARENTCR        shift and go to state 163


state 130

    (63) list_term -> list_value . COMMA list_term
    (64) list_term -> list_value .

    COMMA           shift and go to state 164
    PARENTCR        reduce using rule 64 (list_term -> list_value .)


state 131

    (65) list_value -> value .

    COMMA           reduce using rule 65 (list_value -> value .)
    PARENTCR        reduce using rule 65 (list_value -> value .)


state 132

    (66) list_value -> list .

    COMMA           reduce using rule 66 (list_value -> list .)
    PARENTCR        reduce using rule 66 (list_value -> list .)


state 133

    (8) assignment -> GLOBAL ID ASSIGN a_content . SEMICOLON block

    SEMICOLON       shift and go to state 165


state 134

    (9) assignment -> ID COMMA ID ASSIGN . value COMMA value SEMICOLON block
    (88) value -> . FALSE
    (89) value -> . TRUE

    FALSE           shift and go to state 85
    TRUE            shift and go to state 86

    value                          shift and go to state 166

state 135

    (23) insert -> ID DOT INSERT LPARENT . i_content RPARENT SEMICOLON block
    (59) i_content -> . INT COMMA value
    (60) i_content -> . list COMMA INT i_ind
    (61) list -> . PARENTCL list_term PARENTCR
    (62) list -> . PARENTCL empty PARENTCR

    INT             shift and go to state 168
    PARENTCL        shift and go to state 89

    i_content                      shift and go to state 167
    list                           shift and go to state 169

state 136

    (24) del -> ID DOT DEL LPARENT . INT RPARENT SEMICOLON block

    INT             shift and go to state 170


state 137

    (32) shape -> ID DOT shape_arg SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 171
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 138

    (33) delete -> ID DOT DELETE LPARENT . indice COMMA INT RPARENT SEMICOLON block
    (72) indice -> . INT
    (73) indice -> . ID

    INT             shift and go to state 105
    ID              shift and go to state 102

    indice                         shift and go to state 172

state 139

    (70) mat_consult -> ID PARENTCL indice COMMA . indice PARENTCR
    (72) indice -> . INT
    (73) indice -> . ID

    INT             shift and go to state 105
    ID              shift and go to state 102

    indice                         shift and go to state 173

state 140

    (98) complex_id -> ID PARENTCL indice PARENTCR .

    ASSIGN          reduce using rule 98 (complex_id -> ID PARENTCL indice PARENTCR .)
    SEMICOLON       reduce using rule 98 (complex_id -> ID PARENTCL indice PARENTCR .)
    DOT             reduce using rule 98 (complex_id -> ID PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 98 (complex_id -> ID PARENTCL indice PARENTCR .)
    STEP            reduce using rule 98 (complex_id -> ID PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 98 (complex_id -> ID PARENTCL indice PARENTCR .)


state 141

    (99) complex_id -> ID PARENTCL indice TP . indice PARENTCR
    (72) indice -> . INT
    (73) indice -> . ID

    INT             shift and go to state 105
    ID              shift and go to state 102

    indice                         shift and go to state 174

state 142

    (71) mat_consult -> ID PARENTCL TP COMMA . indice PARENTCR
    (72) indice -> . INT
    (73) indice -> . ID

    INT             shift and go to state 105
    ID              shift and go to state 102

    indice                         shift and go to state 175

state 143

    (21) type -> TYPE LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 176


state 144

    (25) len -> LEN LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 177


state 145

    (28) blink -> BLINK LPARENT b_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 178


state 146

    (53) b_content -> complex_id COMMA . INT COMMA time_mes COMMA value
    (54) b_content -> complex_id COMMA . value
    (88) value -> . FALSE
    (89) value -> . TRUE

    INT             shift and go to state 179
    FALSE           shift and go to state 85
    TRUE            shift and go to state 86

    value                          shift and go to state 180

state 147

    (98) complex_id -> ID PARENTCL . indice PARENTCR
    (99) complex_id -> ID PARENTCL . indice TP indice PARENTCR
    (72) indice -> . INT
    (73) indice -> . ID

    INT             shift and go to state 105
    ID              shift and go to state 102

    indice                         shift and go to state 181

state 148

    (29) delay -> DELAY LPARENT d_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 182


state 149

    (56) d_content -> INT COMMA . time_mes
    (78) time_mes -> . QUOTES MIL QUOTES
    (79) time_mes -> . QUOTES MIN QUOTES
    (80) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 183

state 150

    (96) identifier -> ID .
    (98) complex_id -> ID . PARENTCL indice PARENTCR
    (99) complex_id -> ID . PARENTCL indice TP indice PARENTCR

    STEP            reduce using rule 96 (identifier -> ID .)
    LCORCH          reduce using rule 96 (identifier -> ID .)
    PARENTCL        shift and go to state 147


state 151

    (35) for -> FOR ID IN iterable . step LCORCH block RCORCH SEMICOLON block
    (36) step -> . STEP INT
    (37) step -> . empty
    (102) empty -> .

    STEP            shift and go to state 185
    LCORCH          reduce using rule 102 (empty -> .)

    step                           shift and go to state 184
    empty                          shift and go to state 186

state 152

    (100) iterable -> identifier .

    STEP            reduce using rule 100 (iterable -> identifier .)
    LCORCH          reduce using rule 100 (iterable -> identifier .)


state 153

    (101) iterable -> INT .

    STEP            reduce using rule 101 (iterable -> INT .)
    LCORCH          reduce using rule 101 (iterable -> INT .)


state 154

    (97) identifier -> complex_id .

    STEP            reduce using rule 97 (identifier -> complex_id .)
    LCORCH          reduce using rule 97 (identifier -> complex_id .)


state 155

    (26) neg -> consult DOT NEG SEMICOLON block .

    $end            reduce using rule 26 (neg -> consult DOT NEG SEMICOLON block .)
    RCORCH          reduce using rule 26 (neg -> consult DOT NEG SEMICOLON block .)


state 156

    (27) t_f -> consult DOT tf SEMICOLON block .

    $end            reduce using rule 27 (t_f -> consult DOT tf SEMICOLON block .)
    RCORCH          reduce using rule 27 (t_f -> consult DOT tf SEMICOLON block .)


state 157

    (7) assignment -> identifier ASSIGN a_content SEMICOLON block .

    $end            reduce using rule 7 (assignment -> identifier ASSIGN a_content SEMICOLON block .)
    RCORCH          reduce using rule 7 (assignment -> identifier ASSIGN a_content SEMICOLON block .)


state 158

    (22) a_content -> RANGE LPARENT INT . COMMA value RPARENT

    COMMA           shift and go to state 187


state 159

    (45) factor -> LPARENT arithmetic RPARENT .

    TIMES           reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    EXP             reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    DIVIDE          reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    DIVENT          reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    MOD             reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    PLUS            reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    MINUS           reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    SEMICOLON       reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    RPARENT         reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)


state 160

    (40) arithmetic -> arithmetic adding_operator term .
    (42) term -> term . multiplying_operator factor
    (83) multiplying_operator -> . TIMES
    (84) multiplying_operator -> . EXP
    (85) multiplying_operator -> . DIVIDE
    (86) multiplying_operator -> . DIVENT
    (87) multiplying_operator -> . MOD

    PLUS            reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    MINUS           reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    SEMICOLON       reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    RPARENT         reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    TIMES           shift and go to state 122
    EXP             shift and go to state 123
    DIVIDE          shift and go to state 124
    DIVENT          shift and go to state 125
    MOD             shift and go to state 126

    multiplying_operator           shift and go to state 121

state 161

    (42) term -> term multiplying_operator factor .

    TIMES           reduce using rule 42 (term -> term multiplying_operator factor .)
    EXP             reduce using rule 42 (term -> term multiplying_operator factor .)
    DIVIDE          reduce using rule 42 (term -> term multiplying_operator factor .)
    DIVENT          reduce using rule 42 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 42 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 42 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 42 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 42 (term -> term multiplying_operator factor .)
    RPARENT         reduce using rule 42 (term -> term multiplying_operator factor .)


state 162

    (61) list -> PARENTCL list_term PARENTCR .

    SEMICOLON       reduce using rule 61 (list -> PARENTCL list_term PARENTCR .)
    COMMA           reduce using rule 61 (list -> PARENTCL list_term PARENTCR .)
    PARENTCR        reduce using rule 61 (list -> PARENTCL list_term PARENTCR .)


state 163

    (62) list -> PARENTCL empty PARENTCR .

    SEMICOLON       reduce using rule 62 (list -> PARENTCL empty PARENTCR .)
    COMMA           reduce using rule 62 (list -> PARENTCL empty PARENTCR .)
    PARENTCR        reduce using rule 62 (list -> PARENTCL empty PARENTCR .)


state 164

    (63) list_term -> list_value COMMA . list_term
    (63) list_term -> . list_value COMMA list_term
    (64) list_term -> . list_value
    (65) list_value -> . value
    (66) list_value -> . list
    (88) value -> . FALSE
    (89) value -> . TRUE
    (61) list -> . PARENTCL list_term PARENTCR
    (62) list -> . PARENTCL empty PARENTCR

    FALSE           shift and go to state 85
    TRUE            shift and go to state 86
    PARENTCL        shift and go to state 89

    list_value                     shift and go to state 130
    list_term                      shift and go to state 188
    value                          shift and go to state 131
    list                           shift and go to state 132

state 165

    (8) assignment -> GLOBAL ID ASSIGN a_content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 189
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 166

    (9) assignment -> ID COMMA ID ASSIGN value . COMMA value SEMICOLON block

    COMMA           shift and go to state 190


state 167

    (23) insert -> ID DOT INSERT LPARENT i_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 191


state 168

    (59) i_content -> INT . COMMA value

    COMMA           shift and go to state 192


state 169

    (60) i_content -> list . COMMA INT i_ind

    COMMA           shift and go to state 193


state 170

    (24) del -> ID DOT DEL LPARENT INT . RPARENT SEMICOLON block

    RPARENT         shift and go to state 194


state 171

    (32) shape -> ID DOT shape_arg SEMICOLON block .

    $end            reduce using rule 32 (shape -> ID DOT shape_arg SEMICOLON block .)
    RCORCH          reduce using rule 32 (shape -> ID DOT shape_arg SEMICOLON block .)


state 172

    (33) delete -> ID DOT DELETE LPARENT indice . COMMA INT RPARENT SEMICOLON block

    COMMA           shift and go to state 195


state 173

    (70) mat_consult -> ID PARENTCL indice COMMA indice . PARENTCR

    PARENTCR        shift and go to state 196


state 174

    (99) complex_id -> ID PARENTCL indice TP indice . PARENTCR

    PARENTCR        shift and go to state 197


state 175

    (71) mat_consult -> ID PARENTCL TP COMMA indice . PARENTCR

    PARENTCR        shift and go to state 198


state 176

    (21) type -> TYPE LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 199
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 177

    (25) len -> LEN LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 200
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 178

    (28) blink -> BLINK LPARENT b_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 201
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 179

    (53) b_content -> complex_id COMMA INT . COMMA time_mes COMMA value

    COMMA           shift and go to state 202


state 180

    (54) b_content -> complex_id COMMA value .

    RPARENT         reduce using rule 54 (b_content -> complex_id COMMA value .)


state 181

    (98) complex_id -> ID PARENTCL indice . PARENTCR
    (99) complex_id -> ID PARENTCL indice . TP indice PARENTCR

    PARENTCR        shift and go to state 140
    TP              shift and go to state 141


state 182

    (29) delay -> DELAY LPARENT d_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 203
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 183

    (56) d_content -> INT COMMA time_mes .

    RPARENT         reduce using rule 56 (d_content -> INT COMMA time_mes .)


state 184

    (35) for -> FOR ID IN iterable step . LCORCH block RCORCH SEMICOLON block

    LCORCH          shift and go to state 204


state 185

    (36) step -> STEP . INT

    INT             shift and go to state 205


state 186

    (37) step -> empty .

    LCORCH          reduce using rule 37 (step -> empty .)


state 187

    (22) a_content -> RANGE LPARENT INT COMMA . value RPARENT
    (88) value -> . FALSE
    (89) value -> . TRUE

    FALSE           shift and go to state 85
    TRUE            shift and go to state 86

    value                          shift and go to state 206

state 188

    (63) list_term -> list_value COMMA list_term .

    PARENTCR        reduce using rule 63 (list_term -> list_value COMMA list_term .)


state 189

    (8) assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .

    $end            reduce using rule 8 (assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .)
    RCORCH          reduce using rule 8 (assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .)


state 190

    (9) assignment -> ID COMMA ID ASSIGN value COMMA . value SEMICOLON block
    (88) value -> . FALSE
    (89) value -> . TRUE

    FALSE           shift and go to state 85
    TRUE            shift and go to state 86

    value                          shift and go to state 207

state 191

    (23) insert -> ID DOT INSERT LPARENT i_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 208


state 192

    (59) i_content -> INT COMMA . value
    (88) value -> . FALSE
    (89) value -> . TRUE

    FALSE           shift and go to state 85
    TRUE            shift and go to state 86

    value                          shift and go to state 209

state 193

    (60) i_content -> list COMMA . INT i_ind

    INT             shift and go to state 210


state 194

    (24) del -> ID DOT DEL LPARENT INT RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 211


state 195

    (33) delete -> ID DOT DELETE LPARENT indice COMMA . INT RPARENT SEMICOLON block

    INT             shift and go to state 212


state 196

    (70) mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .

    SEMICOLON       reduce using rule 70 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    DOT             reduce using rule 70 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)


state 197

    (99) complex_id -> ID PARENTCL indice TP indice PARENTCR .

    ASSIGN          reduce using rule 99 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    SEMICOLON       reduce using rule 99 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    DOT             reduce using rule 99 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    COMMA           reduce using rule 99 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    STEP            reduce using rule 99 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    LCORCH          reduce using rule 99 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)


state 198

    (71) mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .

    SEMICOLON       reduce using rule 71 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    DOT             reduce using rule 71 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)


state 199

    (21) type -> TYPE LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 21 (type -> TYPE LPARENT ID RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 21 (type -> TYPE LPARENT ID RPARENT SEMICOLON block .)


state 200

    (25) len -> LEN LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 25 (len -> LEN LPARENT ID RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 25 (len -> LEN LPARENT ID RPARENT SEMICOLON block .)


state 201

    (28) blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .

    $end            reduce using rule 28 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 28 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .)


state 202

    (53) b_content -> complex_id COMMA INT COMMA . time_mes COMMA value
    (78) time_mes -> . QUOTES MIL QUOTES
    (79) time_mes -> . QUOTES MIN QUOTES
    (80) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 213

state 203

    (29) delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .

    $end            reduce using rule 29 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 29 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .)


state 204

    (35) for -> FOR ID IN iterable step LCORCH . block RCORCH SEMICOLON block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 214
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 205

    (36) step -> STEP INT .

    LCORCH          reduce using rule 36 (step -> STEP INT .)


state 206

    (22) a_content -> RANGE LPARENT INT COMMA value . RPARENT

    RPARENT         shift and go to state 215


state 207

    (9) assignment -> ID COMMA ID ASSIGN value COMMA value . SEMICOLON block

    SEMICOLON       shift and go to state 216


state 208

    (23) insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 217
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 209

    (59) i_content -> INT COMMA value .

    RPARENT         reduce using rule 59 (i_content -> INT COMMA value .)


state 210

    (60) i_content -> list COMMA INT . i_ind
    (74) i_ind -> . COMMA INT
    (75) i_ind -> . empty
    (102) empty -> .

    COMMA           shift and go to state 218
    RPARENT         reduce using rule 102 (empty -> .)

    i_ind                          shift and go to state 219
    empty                          shift and go to state 220

state 211

    (24) del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 221
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 212

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT . RPARENT SEMICOLON block

    RPARENT         shift and go to state 222


state 213

    (53) b_content -> complex_id COMMA INT COMMA time_mes . COMMA value

    COMMA           shift and go to state 223


state 214

    (35) for -> FOR ID IN iterable step LCORCH block . RCORCH SEMICOLON block

    RCORCH          shift and go to state 224


state 215

    (22) a_content -> RANGE LPARENT INT COMMA value RPARENT .

    SEMICOLON       reduce using rule 22 (a_content -> RANGE LPARENT INT COMMA value RPARENT .)


state 216

    (9) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 225
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 217

    (23) insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block .

    $end            reduce using rule 23 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 23 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block .)


state 218

    (74) i_ind -> COMMA . INT

    INT             shift and go to state 226


state 219

    (60) i_content -> list COMMA INT i_ind .

    RPARENT         reduce using rule 60 (i_content -> list COMMA INT i_ind .)


state 220

    (75) i_ind -> empty .

    RPARENT         reduce using rule 75 (i_ind -> empty .)


state 221

    (24) del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block .

    $end            reduce using rule 24 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 24 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block .)


state 222

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 227


state 223

    (53) b_content -> complex_id COMMA INT COMMA time_mes COMMA . value
    (88) value -> . FALSE
    (89) value -> . TRUE

    FALSE           shift and go to state 85
    TRUE            shift and go to state 86

    value                          shift and go to state 228

state 224

    (35) for -> FOR ID IN iterable step LCORCH block RCORCH . SEMICOLON block

    SEMICOLON       shift and go to state 229


state 225

    (9) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .

    $end            reduce using rule 9 (assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .)
    RCORCH          reduce using rule 9 (assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .)


state 226

    (74) i_ind -> COMMA INT .

    RPARENT         reduce using rule 74 (i_ind -> COMMA INT .)


state 227

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 230
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 228

    (53) b_content -> complex_id COMMA INT COMMA time_mes COMMA value .

    RPARENT         reduce using rule 53 (b_content -> complex_id COMMA INT COMMA time_mes COMMA value .)


state 229

    (35) for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (67) consult -> . list_consult
    (68) consult -> . mat_consult
    (34) cycle -> . for
    (96) identifier -> . ID
    (97) identifier -> . complex_id
    (102) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (69) list_consult -> . complex_id
    (70) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (71) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (98) complex_id -> . ID PARENTCL indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 102 (empty -> .)
    RCORCH          reduce using rule 102 (empty -> .)
    TYPE            shift and go to state 56
    LEN             shift and go to state 57
    BLINK           shift and go to state 58
    DELAY           shift and go to state 59
    FOR             shift and go to state 60

    block                          shift and go to state 231
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 55

state 230

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block .

    $end            reduce using rule 33 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 33 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block .)


state 231

    (35) for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block .

    $end            reduce using rule 35 (for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block .)
    RCORCH          reduce using rule 35 (for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block .)

