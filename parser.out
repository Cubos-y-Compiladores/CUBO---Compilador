Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOKED
    CONST
    LENGHTERROR
    VARERROR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> const_block main_proc
Rule 2     const_block -> const const const const const block
Rule 3     block -> instruction block
Rule 4     block -> procedure block
Rule 5     block -> assignment block
Rule 6     block -> empty
Rule 7     instruction -> function
Rule 8     instruction -> consult SEMICOLON
Rule 9     instruction -> cycle
Rule 10    instruction -> statement
Rule 11    assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON
Rule 12    assignment -> identifier ASSIGN a_content SEMICOLON
Rule 13    assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
Rule 14    function -> type
Rule 15    function -> insert
Rule 16    function -> del
Rule 17    function -> len
Rule 18    function -> neg
Rule 19    function -> t_f
Rule 20    function -> blink
Rule 21    function -> delay
Rule 22    function -> shape
Rule 23    function -> delete
Rule 24    type -> TYPE LPARENT ID RPARENT SEMICOLON
Rule 25    a_content -> RANGE LPARENT INT COMMA value RPARENT
Rule 26    insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
Rule 27    del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON
Rule 28    len -> LEN LPARENT ID RPARENT SEMICOLON
Rule 29    neg -> consult DOT NEG SEMICOLON
Rule 30    t_f -> consult DOT tf SEMICOLON
Rule 31    blink -> BLINK LPARENT b_content RPARENT SEMICOLON
Rule 32    delay -> DELAY LPARENT d_content RPARENT SEMICOLON
Rule 33    shape_arg -> SHAPEF
Rule 34    shape_arg -> SHAPEC
Rule 35    shape_arg -> SHAPEA
Rule 36    shape -> ID DOT shape_arg SEMICOLON
Rule 37    delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
Rule 38    cycle -> for
Rule 39    for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON
Rule 40    step -> STEP INT
Rule 41    step -> empty
Rule 42    statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
Rule 43    opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON
Rule 44    opt_statement -> empty
Rule 45    procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
Rule 46    proc_dec -> proc_name LPARENT parameter RPARENT
Rule 47    proc_name -> ID
Rule 48    parameter -> proc_param
Rule 49    parameter -> proc_param COMMA parameter
Rule 50    parameter -> empty
Rule 51    proc_param -> ID
Rule 52    body -> BEGIN proc_block END SEMICOLON
Rule 53    proc_block -> instruction proc_block
Rule 54    proc_block -> assignment proc_block
Rule 55    proc_block -> call proc_block
Rule 56    main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block
Rule 57    main_body -> BEGIN main_block END SEMICOLON
Rule 58    main_block -> instruction main_block
Rule 59    main_block -> call main_block
Rule 60    call -> CALL proc_dec SEMICOLON
Rule 61    proc_block -> empty
Rule 62    main_block -> empty
Rule 63    arithmetic -> term
Rule 64    arithmetic -> adding_operator term
Rule 65    arithmetic -> arithmetic adding_operator term
Rule 66    term -> factor
Rule 67    term -> term multiplying_operator factor
Rule 68    factor -> INT
Rule 69    factor -> ID
Rule 70    factor -> LPARENT arithmetic RPARENT
Rule 71    const -> TIMER ASSIGN INT SEMICOLON
Rule 72    const -> RANGOTIMER ASSIGN time_mes SEMICOLON
Rule 73    const -> dimension ASSIGN INT SEMICOLON
Rule 74    const -> CUBO ASSIGN INT SEMICOLON
Rule 75    a_content -> value
Rule 76    a_content -> arithmetic
Rule 77    a_content -> list
Rule 78    a_content -> mat
Rule 79    a_content -> 3dmat
Rule 80    a_content -> consult
Rule 81    b_content -> list_consult COMMA INT COMMA time_mes COMMA value
Rule 82    b_content -> list_consult COMMA value
Rule 83    d_content -> empty
Rule 84    d_content -> INT COMMA time_mes
Rule 85    tf -> T
Rule 86    tf -> F
Rule 87    i_content -> INT COMMA value
Rule 88    i_content -> list COMMA INT i_ind
Rule 89    list -> PARENTCL list_term PARENTCR
Rule 90    list -> PARENTCL empty PARENTCR
Rule 91    list_term -> list_value COMMA list_term
Rule 92    list_term -> list_value
Rule 93    list_value -> value
Rule 94    mat -> PARENTCL mat_term PARENTCR
Rule 95    mat_term -> mat_value COMMA mat_term
Rule 96    mat_term -> mat_value
Rule 97    mat_value -> list
Rule 98    3dmat -> PARENTCL 3dmat_term PARENTCR
Rule 99    3dmat_term -> 3dmat_value COMMA 3dmat_term
Rule 100   3dmat_term -> 3dmat_value
Rule 101   3dmat_value -> mat
Rule 102   consult -> list_consult
Rule 103   consult -> mat_consult
Rule 104   consult -> 3dmat_consult
Rule 105   list_consult -> ID PARENTCL indice PARENTCR
Rule 106   list_consult -> ID PARENTCL indice TP indice PARENTCR
Rule 107   mat_consult -> ID PARENTCL indice COMMA indice PARENTCR
Rule 108   mat_consult -> ID PARENTCL TP COMMA indice PARENTCR
Rule 109   mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
Rule 110   mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
Rule 111   3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR
Rule 112   3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
Rule 113   indice -> INT
Rule 114   indice -> ID
Rule 115   i_ind -> COMMA INT
Rule 116   i_ind -> empty
Rule 117   dimension -> DIMFILAS
Rule 118   dimension -> DIMCOLUMNAS
Rule 119   time_mes -> QUOTES MIL QUOTES
Rule 120   time_mes -> QUOTES MIN QUOTES
Rule 121   time_mes -> QUOTES SEG QUOTES
Rule 122   adding_operator -> PLUS
Rule 123   adding_operator -> MINUS
Rule 124   multiplying_operator -> TIMES
Rule 125   multiplying_operator -> EXP
Rule 126   multiplying_operator -> DIVIDE
Rule 127   multiplying_operator -> DIVENT
Rule 128   multiplying_operator -> MOD
Rule 129   value -> FALSE
Rule 130   value -> TRUE
Rule 131   bif_value -> value
Rule 132   bif_value -> arithmetic
Rule 133   relation -> ASSIGN
Rule 134   relation -> NE
Rule 135   relation -> LT
Rule 136   relation -> GT
Rule 137   relation -> LTE
Rule 138   relation -> GTE
Rule 139   relation -> COMPARE
Rule 140   identifier -> ID
Rule 141   identifier -> consult
Rule 142   iterable -> identifier
Rule 143   iterable -> INT
Rule 144   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 11 12 13 71 72 73 74 133
BEGIN                : 52 57
BLINK                : 31
BOOKED               : 
CALL                 : 60
COMMA                : 13 13 25 37 49 81 81 81 82 84 87 88 91 95 99 107 108 111 111 115
COMPARE              : 139
CONST                : 
CUBO                 : 74
DEL                  : 27
DELAY                : 32
DELETE               : 37
DIMCOLUMNAS          : 118
DIMFILAS             : 117
DIVENT               : 127
DIVIDE               : 126
DOT                  : 26 27 29 30 36 37
ELSE                 : 43
END                  : 52 57
EXP                  : 125
F                    : 86
FALSE                : 129
FOR                  : 39
GLOBAL               : 11
GT                   : 136
GTE                  : 138
ID                   : 24 26 27 28 36 37 39 47 51 69 105 106 107 108 109 110 111 112 114 140
IF                   : 42
IN                   : 39
INSERT               : 26
INT                  : 25 27 37 40 68 71 73 74 81 84 87 88 113 115 143
LCORCH               : 39 42 43 45 56
LEN                  : 28
LENGHTERROR          : 
LPARENT              : 24 25 26 27 28 31 32 37 42 46 56 70
LT                   : 135
LTE                  : 137
MAIN                 : 56
MIL                  : 119
MIN                  : 120
MINUS                : 123
MOD                  : 128
NE                   : 134
NEG                  : 29
PARENTCL             : 89 90 94 98 105 106 107 108 109 109 110 110 111 112 112 112
PARENTCR             : 89 90 94 98 105 106 107 108 109 109 110 110 111 112 112 112
PLUS                 : 122
PROCEDURE            : 45
QUOTES               : 119 119 120 120 121 121
RANGE                : 25
RANGOTIMER           : 72
RCORCH               : 39 42 43 45 56
RPARENT              : 24 25 26 27 28 31 32 37 42 46 56 70
SEG                  : 121
SEMICOLON            : 8 11 12 13 24 26 27 28 29 30 31 32 36 37 39 42 43 45 52 56 57 60 71 72 73 74
SHAPEA               : 35
SHAPEC               : 34
SHAPEF               : 33
STEP                 : 40
T                    : 85
TIMER                : 71
TIMES                : 124
TP                   : 106 108 109
TRUE                 : 130
TYPE                 : 24
VARERROR             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

3dmat                : 79
3dmat_consult        : 104
3dmat_term           : 98 99
3dmat_value          : 99 100
a_content            : 11 12
adding_operator      : 64 65
arithmetic           : 65 70 76 132
assignment           : 5 54
b_content            : 31
bif_value            : 42
blink                : 20
block                : 2 3 4 5 56
body                 : 45
call                 : 55 59
const                : 2 2 2 2 2
const_block          : 1
consult              : 8 29 30 80 141
cycle                : 9
d_content            : 32
del                  : 16
delay                : 21
delete               : 23
dimension            : 73
empty                : 6 41 44 50 61 62 83 90 116
factor               : 66 67
for                  : 38
function             : 7
i_content            : 26
i_ind                : 88
identifier           : 11 12 13 13 142
indice               : 37 105 106 106 107 107 108 109 110 110 111 111 111 112 112 112
insert               : 15
instruction          : 3 39 42 43 53 58
iterable             : 39 42
len                  : 17
list                 : 77 88 97
list_consult         : 81 82 102
list_term            : 89 91
list_value           : 91 92
main_block           : 57 58 59
main_body            : 56
main_proc            : 1
mat                  : 78 101
mat_consult          : 103
mat_term             : 94 95
mat_value            : 95 96
multiplying_operator : 67
neg                  : 18
opt_statement        : 42
parameter            : 46 49
proc_block           : 52 53 54 55
proc_dec             : 45 60
proc_name            : 46
proc_param           : 48 49
procedure            : 4
program              : 0
relation             : 42
shape                : 22
shape_arg            : 36
statement            : 10
step                 : 39
t_f                  : 19
term                 : 63 64 65 67
tf                   : 30
time_mes             : 72 81 84
type                 : 14
value                : 13 13 25 75 81 82 87 93 131

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . const_block main_proc
    (2) const_block -> . const const const const const block
    (71) const -> . TIMER ASSIGN INT SEMICOLON
    (72) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (73) const -> . dimension ASSIGN INT SEMICOLON
    (74) const -> . CUBO ASSIGN INT SEMICOLON
    (117) dimension -> . DIMFILAS
    (118) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    program                        shift and go to state 1
    const_block                    shift and go to state 2
    const                          shift and go to state 3
    dimension                      shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> const_block . main_proc
    (56) main_proc -> . MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block

    MAIN            shift and go to state 11

    main_proc                      shift and go to state 10

state 3

    (2) const_block -> const . const const const const block
    (71) const -> . TIMER ASSIGN INT SEMICOLON
    (72) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (73) const -> . dimension ASSIGN INT SEMICOLON
    (74) const -> . CUBO ASSIGN INT SEMICOLON
    (117) dimension -> . DIMFILAS
    (118) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 12
    dimension                      shift and go to state 6

state 4

    (71) const -> TIMER . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 13


state 5

    (72) const -> RANGOTIMER . ASSIGN time_mes SEMICOLON

    ASSIGN          shift and go to state 14


state 6

    (73) const -> dimension . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 15


state 7

    (74) const -> CUBO . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 16


state 8

    (117) dimension -> DIMFILAS .

    ASSIGN          reduce using rule 117 (dimension -> DIMFILAS .)


state 9

    (118) dimension -> DIMCOLUMNAS .

    ASSIGN          reduce using rule 118 (dimension -> DIMCOLUMNAS .)


state 10

    (1) program -> const_block main_proc .

    $end            reduce using rule 1 (program -> const_block main_proc .)


state 11

    (56) main_proc -> MAIN . LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block

    LPARENT         shift and go to state 17


state 12

    (2) const_block -> const const . const const const block
    (71) const -> . TIMER ASSIGN INT SEMICOLON
    (72) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (73) const -> . dimension ASSIGN INT SEMICOLON
    (74) const -> . CUBO ASSIGN INT SEMICOLON
    (117) dimension -> . DIMFILAS
    (118) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 18
    dimension                      shift and go to state 6

state 13

    (71) const -> TIMER ASSIGN . INT SEMICOLON

    INT             shift and go to state 19


state 14

    (72) const -> RANGOTIMER ASSIGN . time_mes SEMICOLON
    (119) time_mes -> . QUOTES MIL QUOTES
    (120) time_mes -> . QUOTES MIN QUOTES
    (121) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 20

state 15

    (73) const -> dimension ASSIGN . INT SEMICOLON

    INT             shift and go to state 22


state 16

    (74) const -> CUBO ASSIGN . INT SEMICOLON

    INT             shift and go to state 23


state 17

    (56) main_proc -> MAIN LPARENT . RPARENT LCORCH main_body RCORCH SEMICOLON block

    RPARENT         shift and go to state 24


state 18

    (2) const_block -> const const const . const const block
    (71) const -> . TIMER ASSIGN INT SEMICOLON
    (72) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (73) const -> . dimension ASSIGN INT SEMICOLON
    (74) const -> . CUBO ASSIGN INT SEMICOLON
    (117) dimension -> . DIMFILAS
    (118) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 25
    dimension                      shift and go to state 6

state 19

    (71) const -> TIMER ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 26


state 20

    (72) const -> RANGOTIMER ASSIGN time_mes . SEMICOLON

    SEMICOLON       shift and go to state 27


state 21

    (119) time_mes -> QUOTES . MIL QUOTES
    (120) time_mes -> QUOTES . MIN QUOTES
    (121) time_mes -> QUOTES . SEG QUOTES

    MIL             shift and go to state 28
    MIN             shift and go to state 29
    SEG             shift and go to state 30


state 22

    (73) const -> dimension ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 31


state 23

    (74) const -> CUBO ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 32


state 24

    (56) main_proc -> MAIN LPARENT RPARENT . LCORCH main_body RCORCH SEMICOLON block

    LCORCH          shift and go to state 33


state 25

    (2) const_block -> const const const const . const block
    (71) const -> . TIMER ASSIGN INT SEMICOLON
    (72) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (73) const -> . dimension ASSIGN INT SEMICOLON
    (74) const -> . CUBO ASSIGN INT SEMICOLON
    (117) dimension -> . DIMFILAS
    (118) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 34
    dimension                      shift and go to state 6

state 26

    (71) const -> TIMER ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    IF              reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    ID              reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 71 (const -> TIMER ASSIGN INT SEMICOLON .)


state 27

    (72) const -> RANGOTIMER ASSIGN time_mes SEMICOLON .

    TIMER           reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    RANGOTIMER      reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    CUBO            reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMFILAS        reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    PROCEDURE       reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    GLOBAL          reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    IF              reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    ID              reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    TYPE            reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    LEN             reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    BLINK           reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DELAY           reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    FOR             reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    MAIN            reduce using rule 72 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)


state 28

    (119) time_mes -> QUOTES MIL . QUOTES

    QUOTES          shift and go to state 35


state 29

    (120) time_mes -> QUOTES MIN . QUOTES

    QUOTES          shift and go to state 36


state 30

    (121) time_mes -> QUOTES SEG . QUOTES

    QUOTES          shift and go to state 37


state 31

    (73) const -> dimension ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    IF              reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    ID              reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 73 (const -> dimension ASSIGN INT SEMICOLON .)


state 32

    (74) const -> CUBO ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    IF              reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    ID              reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 74 (const -> CUBO ASSIGN INT SEMICOLON .)


state 33

    (56) main_proc -> MAIN LPARENT RPARENT LCORCH . main_body RCORCH SEMICOLON block
    (57) main_body -> . BEGIN main_block END SEMICOLON

    BEGIN           shift and go to state 39

    main_body                      shift and go to state 38

state 34

    (2) const_block -> const const const const const . block
    (3) block -> . instruction block
    (4) block -> . procedure block
    (5) block -> . assignment block
    (6) block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (45) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    PROCEDURE       shift and go to state 49
    GLOBAL          shift and go to state 50
    MAIN            reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    block                          shift and go to state 40
    instruction                    shift and go to state 41
    procedure                      shift and go to state 42
    assignment                     shift and go to state 43
    empty                          shift and go to state 44
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 35

    (119) time_mes -> QUOTES MIL QUOTES .

    SEMICOLON       reduce using rule 119 (time_mes -> QUOTES MIL QUOTES .)
    RPARENT         reduce using rule 119 (time_mes -> QUOTES MIL QUOTES .)
    COMMA           reduce using rule 119 (time_mes -> QUOTES MIL QUOTES .)


state 36

    (120) time_mes -> QUOTES MIN QUOTES .

    SEMICOLON       reduce using rule 120 (time_mes -> QUOTES MIN QUOTES .)
    RPARENT         reduce using rule 120 (time_mes -> QUOTES MIN QUOTES .)
    COMMA           reduce using rule 120 (time_mes -> QUOTES MIN QUOTES .)


state 37

    (121) time_mes -> QUOTES SEG QUOTES .

    SEMICOLON       reduce using rule 121 (time_mes -> QUOTES SEG QUOTES .)
    RPARENT         reduce using rule 121 (time_mes -> QUOTES SEG QUOTES .)
    COMMA           reduce using rule 121 (time_mes -> QUOTES SEG QUOTES .)


state 38

    (56) main_proc -> MAIN LPARENT RPARENT LCORCH main_body . RCORCH SEMICOLON block

    RCORCH          shift and go to state 73


state 39

    (57) main_body -> BEGIN . main_block END SEMICOLON
    (58) main_block -> . instruction main_block
    (59) main_block -> . call main_block
    (62) main_block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (60) call -> . CALL proc_dec SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    CALL            shift and go to state 79
    END             reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    TYPE            shift and go to state 68
    ID              shift and go to state 80
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    main_block                     shift and go to state 74
    instruction                    shift and go to state 75
    call                           shift and go to state 76
    empty                          shift and go to state 77
    function                       shift and go to state 45
    consult                        shift and go to state 78
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 40

    (2) const_block -> const const const const const block .

    MAIN            reduce using rule 2 (const_block -> const const const const const block .)


state 41

    (3) block -> instruction . block
    (3) block -> . instruction block
    (4) block -> . procedure block
    (5) block -> . assignment block
    (6) block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (45) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    PROCEDURE       shift and go to state 49
    GLOBAL          shift and go to state 50
    MAIN            reduce using rule 144 (empty -> .)
    $end            reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    instruction                    shift and go to state 41
    block                          shift and go to state 81
    procedure                      shift and go to state 42
    assignment                     shift and go to state 43
    empty                          shift and go to state 44
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 42

    (4) block -> procedure . block
    (3) block -> . instruction block
    (4) block -> . procedure block
    (5) block -> . assignment block
    (6) block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (45) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    PROCEDURE       shift and go to state 49
    GLOBAL          shift and go to state 50
    MAIN            reduce using rule 144 (empty -> .)
    $end            reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    procedure                      shift and go to state 42
    block                          shift and go to state 82
    instruction                    shift and go to state 41
    assignment                     shift and go to state 43
    empty                          shift and go to state 44
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 43

    (5) block -> assignment . block
    (3) block -> . instruction block
    (4) block -> . procedure block
    (5) block -> . assignment block
    (6) block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (45) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    PROCEDURE       shift and go to state 49
    GLOBAL          shift and go to state 50
    MAIN            reduce using rule 144 (empty -> .)
    $end            reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    assignment                     shift and go to state 43
    block                          shift and go to state 83
    instruction                    shift and go to state 41
    procedure                      shift and go to state 42
    empty                          shift and go to state 44
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 44

    (6) block -> empty .

    MAIN            reduce using rule 6 (block -> empty .)
    $end            reduce using rule 6 (block -> empty .)


state 45

    (7) instruction -> function .

    PROCEDURE       reduce using rule 7 (instruction -> function .)
    GLOBAL          reduce using rule 7 (instruction -> function .)
    IF              reduce using rule 7 (instruction -> function .)
    ID              reduce using rule 7 (instruction -> function .)
    TYPE            reduce using rule 7 (instruction -> function .)
    LEN             reduce using rule 7 (instruction -> function .)
    BLINK           reduce using rule 7 (instruction -> function .)
    DELAY           reduce using rule 7 (instruction -> function .)
    FOR             reduce using rule 7 (instruction -> function .)
    MAIN            reduce using rule 7 (instruction -> function .)
    CALL            reduce using rule 7 (instruction -> function .)
    END             reduce using rule 7 (instruction -> function .)
    $end            reduce using rule 7 (instruction -> function .)
    RCORCH          reduce using rule 7 (instruction -> function .)


state 46

    (8) instruction -> consult . SEMICOLON
    (141) identifier -> consult .
    (29) neg -> consult . DOT NEG SEMICOLON
    (30) t_f -> consult . DOT tf SEMICOLON

    SEMICOLON       shift and go to state 84
    ASSIGN          reduce using rule 141 (identifier -> consult .)
    COMMA           reduce using rule 141 (identifier -> consult .)
    DOT             shift and go to state 85


state 47

    (9) instruction -> cycle .

    PROCEDURE       reduce using rule 9 (instruction -> cycle .)
    GLOBAL          reduce using rule 9 (instruction -> cycle .)
    IF              reduce using rule 9 (instruction -> cycle .)
    ID              reduce using rule 9 (instruction -> cycle .)
    TYPE            reduce using rule 9 (instruction -> cycle .)
    LEN             reduce using rule 9 (instruction -> cycle .)
    BLINK           reduce using rule 9 (instruction -> cycle .)
    DELAY           reduce using rule 9 (instruction -> cycle .)
    FOR             reduce using rule 9 (instruction -> cycle .)
    MAIN            reduce using rule 9 (instruction -> cycle .)
    CALL            reduce using rule 9 (instruction -> cycle .)
    END             reduce using rule 9 (instruction -> cycle .)
    $end            reduce using rule 9 (instruction -> cycle .)
    RCORCH          reduce using rule 9 (instruction -> cycle .)


state 48

    (10) instruction -> statement .

    PROCEDURE       reduce using rule 10 (instruction -> statement .)
    GLOBAL          reduce using rule 10 (instruction -> statement .)
    IF              reduce using rule 10 (instruction -> statement .)
    ID              reduce using rule 10 (instruction -> statement .)
    TYPE            reduce using rule 10 (instruction -> statement .)
    LEN             reduce using rule 10 (instruction -> statement .)
    BLINK           reduce using rule 10 (instruction -> statement .)
    DELAY           reduce using rule 10 (instruction -> statement .)
    FOR             reduce using rule 10 (instruction -> statement .)
    MAIN            reduce using rule 10 (instruction -> statement .)
    CALL            reduce using rule 10 (instruction -> statement .)
    END             reduce using rule 10 (instruction -> statement .)
    $end            reduce using rule 10 (instruction -> statement .)
    RCORCH          reduce using rule 10 (instruction -> statement .)


state 49

    (45) procedure -> PROCEDURE . proc_dec LCORCH body RCORCH SEMICOLON
    (46) proc_dec -> . proc_name LPARENT parameter RPARENT
    (47) proc_name -> . ID

    ID              shift and go to state 88

    proc_dec                       shift and go to state 86
    proc_name                      shift and go to state 87

state 50

    (11) assignment -> GLOBAL . identifier ASSIGN a_content SEMICOLON
    (140) identifier -> . ID
    (141) identifier -> . consult
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    ID              shift and go to state 90

    identifier                     shift and go to state 89
    consult                        shift and go to state 91
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64

state 51

    (12) assignment -> identifier . ASSIGN a_content SEMICOLON
    (13) assignment -> identifier . COMMA identifier ASSIGN value COMMA value SEMICOLON

    ASSIGN          shift and go to state 92
    COMMA           shift and go to state 93


state 52

    (14) function -> type .

    PROCEDURE       reduce using rule 14 (function -> type .)
    GLOBAL          reduce using rule 14 (function -> type .)
    IF              reduce using rule 14 (function -> type .)
    ID              reduce using rule 14 (function -> type .)
    TYPE            reduce using rule 14 (function -> type .)
    LEN             reduce using rule 14 (function -> type .)
    BLINK           reduce using rule 14 (function -> type .)
    DELAY           reduce using rule 14 (function -> type .)
    FOR             reduce using rule 14 (function -> type .)
    MAIN            reduce using rule 14 (function -> type .)
    CALL            reduce using rule 14 (function -> type .)
    END             reduce using rule 14 (function -> type .)
    $end            reduce using rule 14 (function -> type .)
    RCORCH          reduce using rule 14 (function -> type .)


state 53

    (15) function -> insert .

    PROCEDURE       reduce using rule 15 (function -> insert .)
    GLOBAL          reduce using rule 15 (function -> insert .)
    IF              reduce using rule 15 (function -> insert .)
    ID              reduce using rule 15 (function -> insert .)
    TYPE            reduce using rule 15 (function -> insert .)
    LEN             reduce using rule 15 (function -> insert .)
    BLINK           reduce using rule 15 (function -> insert .)
    DELAY           reduce using rule 15 (function -> insert .)
    FOR             reduce using rule 15 (function -> insert .)
    MAIN            reduce using rule 15 (function -> insert .)
    CALL            reduce using rule 15 (function -> insert .)
    END             reduce using rule 15 (function -> insert .)
    $end            reduce using rule 15 (function -> insert .)
    RCORCH          reduce using rule 15 (function -> insert .)


state 54

    (16) function -> del .

    PROCEDURE       reduce using rule 16 (function -> del .)
    GLOBAL          reduce using rule 16 (function -> del .)
    IF              reduce using rule 16 (function -> del .)
    ID              reduce using rule 16 (function -> del .)
    TYPE            reduce using rule 16 (function -> del .)
    LEN             reduce using rule 16 (function -> del .)
    BLINK           reduce using rule 16 (function -> del .)
    DELAY           reduce using rule 16 (function -> del .)
    FOR             reduce using rule 16 (function -> del .)
    MAIN            reduce using rule 16 (function -> del .)
    CALL            reduce using rule 16 (function -> del .)
    END             reduce using rule 16 (function -> del .)
    $end            reduce using rule 16 (function -> del .)
    RCORCH          reduce using rule 16 (function -> del .)


state 55

    (17) function -> len .

    PROCEDURE       reduce using rule 17 (function -> len .)
    GLOBAL          reduce using rule 17 (function -> len .)
    IF              reduce using rule 17 (function -> len .)
    ID              reduce using rule 17 (function -> len .)
    TYPE            reduce using rule 17 (function -> len .)
    LEN             reduce using rule 17 (function -> len .)
    BLINK           reduce using rule 17 (function -> len .)
    DELAY           reduce using rule 17 (function -> len .)
    FOR             reduce using rule 17 (function -> len .)
    MAIN            reduce using rule 17 (function -> len .)
    CALL            reduce using rule 17 (function -> len .)
    END             reduce using rule 17 (function -> len .)
    $end            reduce using rule 17 (function -> len .)
    RCORCH          reduce using rule 17 (function -> len .)


state 56

    (18) function -> neg .

    PROCEDURE       reduce using rule 18 (function -> neg .)
    GLOBAL          reduce using rule 18 (function -> neg .)
    IF              reduce using rule 18 (function -> neg .)
    ID              reduce using rule 18 (function -> neg .)
    TYPE            reduce using rule 18 (function -> neg .)
    LEN             reduce using rule 18 (function -> neg .)
    BLINK           reduce using rule 18 (function -> neg .)
    DELAY           reduce using rule 18 (function -> neg .)
    FOR             reduce using rule 18 (function -> neg .)
    MAIN            reduce using rule 18 (function -> neg .)
    CALL            reduce using rule 18 (function -> neg .)
    END             reduce using rule 18 (function -> neg .)
    $end            reduce using rule 18 (function -> neg .)
    RCORCH          reduce using rule 18 (function -> neg .)


state 57

    (19) function -> t_f .

    PROCEDURE       reduce using rule 19 (function -> t_f .)
    GLOBAL          reduce using rule 19 (function -> t_f .)
    IF              reduce using rule 19 (function -> t_f .)
    ID              reduce using rule 19 (function -> t_f .)
    TYPE            reduce using rule 19 (function -> t_f .)
    LEN             reduce using rule 19 (function -> t_f .)
    BLINK           reduce using rule 19 (function -> t_f .)
    DELAY           reduce using rule 19 (function -> t_f .)
    FOR             reduce using rule 19 (function -> t_f .)
    MAIN            reduce using rule 19 (function -> t_f .)
    CALL            reduce using rule 19 (function -> t_f .)
    END             reduce using rule 19 (function -> t_f .)
    $end            reduce using rule 19 (function -> t_f .)
    RCORCH          reduce using rule 19 (function -> t_f .)


state 58

    (20) function -> blink .

    PROCEDURE       reduce using rule 20 (function -> blink .)
    GLOBAL          reduce using rule 20 (function -> blink .)
    IF              reduce using rule 20 (function -> blink .)
    ID              reduce using rule 20 (function -> blink .)
    TYPE            reduce using rule 20 (function -> blink .)
    LEN             reduce using rule 20 (function -> blink .)
    BLINK           reduce using rule 20 (function -> blink .)
    DELAY           reduce using rule 20 (function -> blink .)
    FOR             reduce using rule 20 (function -> blink .)
    MAIN            reduce using rule 20 (function -> blink .)
    CALL            reduce using rule 20 (function -> blink .)
    END             reduce using rule 20 (function -> blink .)
    $end            reduce using rule 20 (function -> blink .)
    RCORCH          reduce using rule 20 (function -> blink .)


state 59

    (21) function -> delay .

    PROCEDURE       reduce using rule 21 (function -> delay .)
    GLOBAL          reduce using rule 21 (function -> delay .)
    IF              reduce using rule 21 (function -> delay .)
    ID              reduce using rule 21 (function -> delay .)
    TYPE            reduce using rule 21 (function -> delay .)
    LEN             reduce using rule 21 (function -> delay .)
    BLINK           reduce using rule 21 (function -> delay .)
    DELAY           reduce using rule 21 (function -> delay .)
    FOR             reduce using rule 21 (function -> delay .)
    MAIN            reduce using rule 21 (function -> delay .)
    CALL            reduce using rule 21 (function -> delay .)
    END             reduce using rule 21 (function -> delay .)
    $end            reduce using rule 21 (function -> delay .)
    RCORCH          reduce using rule 21 (function -> delay .)


state 60

    (22) function -> shape .

    PROCEDURE       reduce using rule 22 (function -> shape .)
    GLOBAL          reduce using rule 22 (function -> shape .)
    IF              reduce using rule 22 (function -> shape .)
    ID              reduce using rule 22 (function -> shape .)
    TYPE            reduce using rule 22 (function -> shape .)
    LEN             reduce using rule 22 (function -> shape .)
    BLINK           reduce using rule 22 (function -> shape .)
    DELAY           reduce using rule 22 (function -> shape .)
    FOR             reduce using rule 22 (function -> shape .)
    MAIN            reduce using rule 22 (function -> shape .)
    CALL            reduce using rule 22 (function -> shape .)
    END             reduce using rule 22 (function -> shape .)
    $end            reduce using rule 22 (function -> shape .)
    RCORCH          reduce using rule 22 (function -> shape .)


state 61

    (23) function -> delete .

    PROCEDURE       reduce using rule 23 (function -> delete .)
    GLOBAL          reduce using rule 23 (function -> delete .)
    IF              reduce using rule 23 (function -> delete .)
    ID              reduce using rule 23 (function -> delete .)
    TYPE            reduce using rule 23 (function -> delete .)
    LEN             reduce using rule 23 (function -> delete .)
    BLINK           reduce using rule 23 (function -> delete .)
    DELAY           reduce using rule 23 (function -> delete .)
    FOR             reduce using rule 23 (function -> delete .)
    MAIN            reduce using rule 23 (function -> delete .)
    CALL            reduce using rule 23 (function -> delete .)
    END             reduce using rule 23 (function -> delete .)
    $end            reduce using rule 23 (function -> delete .)
    RCORCH          reduce using rule 23 (function -> delete .)


state 62

    (102) consult -> list_consult .

    SEMICOLON       reduce using rule 102 (consult -> list_consult .)
    DOT             reduce using rule 102 (consult -> list_consult .)
    ASSIGN          reduce using rule 102 (consult -> list_consult .)
    COMMA           reduce using rule 102 (consult -> list_consult .)
    NE              reduce using rule 102 (consult -> list_consult .)
    LT              reduce using rule 102 (consult -> list_consult .)
    GT              reduce using rule 102 (consult -> list_consult .)
    LTE             reduce using rule 102 (consult -> list_consult .)
    GTE             reduce using rule 102 (consult -> list_consult .)
    COMPARE         reduce using rule 102 (consult -> list_consult .)
    STEP            reduce using rule 102 (consult -> list_consult .)
    LCORCH          reduce using rule 102 (consult -> list_consult .)


state 63

    (103) consult -> mat_consult .

    SEMICOLON       reduce using rule 103 (consult -> mat_consult .)
    DOT             reduce using rule 103 (consult -> mat_consult .)
    ASSIGN          reduce using rule 103 (consult -> mat_consult .)
    COMMA           reduce using rule 103 (consult -> mat_consult .)
    NE              reduce using rule 103 (consult -> mat_consult .)
    LT              reduce using rule 103 (consult -> mat_consult .)
    GT              reduce using rule 103 (consult -> mat_consult .)
    LTE             reduce using rule 103 (consult -> mat_consult .)
    GTE             reduce using rule 103 (consult -> mat_consult .)
    COMPARE         reduce using rule 103 (consult -> mat_consult .)
    STEP            reduce using rule 103 (consult -> mat_consult .)
    LCORCH          reduce using rule 103 (consult -> mat_consult .)


state 64

    (104) consult -> 3dmat_consult .

    SEMICOLON       reduce using rule 104 (consult -> 3dmat_consult .)
    DOT             reduce using rule 104 (consult -> 3dmat_consult .)
    ASSIGN          reduce using rule 104 (consult -> 3dmat_consult .)
    COMMA           reduce using rule 104 (consult -> 3dmat_consult .)
    NE              reduce using rule 104 (consult -> 3dmat_consult .)
    LT              reduce using rule 104 (consult -> 3dmat_consult .)
    GT              reduce using rule 104 (consult -> 3dmat_consult .)
    LTE             reduce using rule 104 (consult -> 3dmat_consult .)
    GTE             reduce using rule 104 (consult -> 3dmat_consult .)
    COMPARE         reduce using rule 104 (consult -> 3dmat_consult .)
    STEP            reduce using rule 104 (consult -> 3dmat_consult .)
    LCORCH          reduce using rule 104 (consult -> 3dmat_consult .)


state 65

    (38) cycle -> for .

    PROCEDURE       reduce using rule 38 (cycle -> for .)
    GLOBAL          reduce using rule 38 (cycle -> for .)
    IF              reduce using rule 38 (cycle -> for .)
    ID              reduce using rule 38 (cycle -> for .)
    TYPE            reduce using rule 38 (cycle -> for .)
    LEN             reduce using rule 38 (cycle -> for .)
    BLINK           reduce using rule 38 (cycle -> for .)
    DELAY           reduce using rule 38 (cycle -> for .)
    FOR             reduce using rule 38 (cycle -> for .)
    MAIN            reduce using rule 38 (cycle -> for .)
    CALL            reduce using rule 38 (cycle -> for .)
    END             reduce using rule 38 (cycle -> for .)
    $end            reduce using rule 38 (cycle -> for .)
    RCORCH          reduce using rule 38 (cycle -> for .)


state 66

    (42) statement -> IF . LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement

    LPARENT         shift and go to state 94


state 67

    (140) identifier -> ID .
    (26) insert -> ID . DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> ID . DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) shape -> ID . DOT shape_arg SEMICOLON
    (37) delete -> ID . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> ID . PARENTCL indice PARENTCR
    (106) list_consult -> ID . PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> ID . PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> ID . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    ASSIGN          reduce using rule 140 (identifier -> ID .)
    COMMA           reduce using rule 140 (identifier -> ID .)
    DOT             shift and go to state 95
    PARENTCL        shift and go to state 96


state 68

    (24) type -> TYPE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 97


state 69

    (28) len -> LEN . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 98


state 70

    (31) blink -> BLINK . LPARENT b_content RPARENT SEMICOLON

    LPARENT         shift and go to state 99


state 71

    (32) delay -> DELAY . LPARENT d_content RPARENT SEMICOLON

    LPARENT         shift and go to state 100


state 72

    (39) for -> FOR . ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    ID              shift and go to state 101


state 73

    (56) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH . SEMICOLON block

    SEMICOLON       shift and go to state 102


state 74

    (57) main_body -> BEGIN main_block . END SEMICOLON

    END             shift and go to state 103


state 75

    (58) main_block -> instruction . main_block
    (58) main_block -> . instruction main_block
    (59) main_block -> . call main_block
    (62) main_block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (60) call -> . CALL proc_dec SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    CALL            shift and go to state 79
    END             reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    TYPE            shift and go to state 68
    ID              shift and go to state 80
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    instruction                    shift and go to state 75
    main_block                     shift and go to state 104
    call                           shift and go to state 76
    empty                          shift and go to state 77
    function                       shift and go to state 45
    consult                        shift and go to state 78
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 76

    (59) main_block -> call . main_block
    (58) main_block -> . instruction main_block
    (59) main_block -> . call main_block
    (62) main_block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (60) call -> . CALL proc_dec SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    CALL            shift and go to state 79
    END             reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    TYPE            shift and go to state 68
    ID              shift and go to state 80
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    call                           shift and go to state 76
    main_block                     shift and go to state 105
    instruction                    shift and go to state 75
    empty                          shift and go to state 77
    function                       shift and go to state 45
    consult                        shift and go to state 78
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 77

    (62) main_block -> empty .

    END             reduce using rule 62 (main_block -> empty .)


state 78

    (8) instruction -> consult . SEMICOLON
    (29) neg -> consult . DOT NEG SEMICOLON
    (30) t_f -> consult . DOT tf SEMICOLON

    SEMICOLON       shift and go to state 84
    DOT             shift and go to state 85


state 79

    (60) call -> CALL . proc_dec SEMICOLON
    (46) proc_dec -> . proc_name LPARENT parameter RPARENT
    (47) proc_name -> . ID

    ID              shift and go to state 88

    proc_dec                       shift and go to state 106
    proc_name                      shift and go to state 87

state 80

    (26) insert -> ID . DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> ID . DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) shape -> ID . DOT shape_arg SEMICOLON
    (37) delete -> ID . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> ID . PARENTCL indice PARENTCR
    (106) list_consult -> ID . PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> ID . PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> ID . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    DOT             shift and go to state 95
    PARENTCL        shift and go to state 96


state 81

    (3) block -> instruction block .

    MAIN            reduce using rule 3 (block -> instruction block .)
    $end            reduce using rule 3 (block -> instruction block .)


state 82

    (4) block -> procedure block .

    MAIN            reduce using rule 4 (block -> procedure block .)
    $end            reduce using rule 4 (block -> procedure block .)


state 83

    (5) block -> assignment block .

    MAIN            reduce using rule 5 (block -> assignment block .)
    $end            reduce using rule 5 (block -> assignment block .)


state 84

    (8) instruction -> consult SEMICOLON .

    PROCEDURE       reduce using rule 8 (instruction -> consult SEMICOLON .)
    GLOBAL          reduce using rule 8 (instruction -> consult SEMICOLON .)
    IF              reduce using rule 8 (instruction -> consult SEMICOLON .)
    ID              reduce using rule 8 (instruction -> consult SEMICOLON .)
    TYPE            reduce using rule 8 (instruction -> consult SEMICOLON .)
    LEN             reduce using rule 8 (instruction -> consult SEMICOLON .)
    BLINK           reduce using rule 8 (instruction -> consult SEMICOLON .)
    DELAY           reduce using rule 8 (instruction -> consult SEMICOLON .)
    FOR             reduce using rule 8 (instruction -> consult SEMICOLON .)
    MAIN            reduce using rule 8 (instruction -> consult SEMICOLON .)
    CALL            reduce using rule 8 (instruction -> consult SEMICOLON .)
    END             reduce using rule 8 (instruction -> consult SEMICOLON .)
    $end            reduce using rule 8 (instruction -> consult SEMICOLON .)
    RCORCH          reduce using rule 8 (instruction -> consult SEMICOLON .)


state 85

    (29) neg -> consult DOT . NEG SEMICOLON
    (30) t_f -> consult DOT . tf SEMICOLON
    (85) tf -> . T
    (86) tf -> . F

    NEG             shift and go to state 107
    T               shift and go to state 109
    F               shift and go to state 110

    tf                             shift and go to state 108

state 86

    (45) procedure -> PROCEDURE proc_dec . LCORCH body RCORCH SEMICOLON

    LCORCH          shift and go to state 111


state 87

    (46) proc_dec -> proc_name . LPARENT parameter RPARENT

    LPARENT         shift and go to state 112


state 88

    (47) proc_name -> ID .

    LPARENT         reduce using rule 47 (proc_name -> ID .)


state 89

    (11) assignment -> GLOBAL identifier . ASSIGN a_content SEMICOLON

    ASSIGN          shift and go to state 113


state 90

    (140) identifier -> ID .
    (105) list_consult -> ID . PARENTCL indice PARENTCR
    (106) list_consult -> ID . PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> ID . PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> ID . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    ASSIGN          reduce using rule 140 (identifier -> ID .)
    NE              reduce using rule 140 (identifier -> ID .)
    LT              reduce using rule 140 (identifier -> ID .)
    GT              reduce using rule 140 (identifier -> ID .)
    LTE             reduce using rule 140 (identifier -> ID .)
    GTE             reduce using rule 140 (identifier -> ID .)
    COMPARE         reduce using rule 140 (identifier -> ID .)
    STEP            reduce using rule 140 (identifier -> ID .)
    LCORCH          reduce using rule 140 (identifier -> ID .)
    PARENTCL        shift and go to state 96


state 91

    (141) identifier -> consult .

    ASSIGN          reduce using rule 141 (identifier -> consult .)
    NE              reduce using rule 141 (identifier -> consult .)
    LT              reduce using rule 141 (identifier -> consult .)
    GT              reduce using rule 141 (identifier -> consult .)
    LTE             reduce using rule 141 (identifier -> consult .)
    GTE             reduce using rule 141 (identifier -> consult .)
    COMPARE         reduce using rule 141 (identifier -> consult .)
    STEP            reduce using rule 141 (identifier -> consult .)
    LCORCH          reduce using rule 141 (identifier -> consult .)


state 92

    (12) assignment -> identifier ASSIGN . a_content SEMICOLON
    (25) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (75) a_content -> . value
    (76) a_content -> . arithmetic
    (77) a_content -> . list
    (78) a_content -> . mat
    (79) a_content -> . 3dmat
    (80) a_content -> . consult
    (129) value -> . FALSE
    (130) value -> . TRUE
    (63) arithmetic -> . term
    (64) arithmetic -> . adding_operator term
    (65) arithmetic -> . arithmetic adding_operator term
    (89) list -> . PARENTCL list_term PARENTCR
    (90) list -> . PARENTCL empty PARENTCR
    (94) mat -> . PARENTCL mat_term PARENTCR
    (98) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (66) term -> . factor
    (67) term -> . term multiplying_operator factor
    (122) adding_operator -> . PLUS
    (123) adding_operator -> . MINUS
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (68) factor -> . INT
    (69) factor -> . ID
    (70) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 115
    FALSE           shift and go to state 124
    TRUE            shift and go to state 125
    PARENTCL        shift and go to state 128
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    ID              shift and go to state 132
    INT             shift and go to state 117
    LPARENT         shift and go to state 116

    a_content                      shift and go to state 114
    value                          shift and go to state 118
    arithmetic                     shift and go to state 119
    list                           shift and go to state 120
    mat                            shift and go to state 121
    3dmat                          shift and go to state 122
    consult                        shift and go to state 123
    term                           shift and go to state 126
    adding_operator                shift and go to state 127
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    factor                         shift and go to state 129

state 93

    (13) assignment -> identifier COMMA . identifier ASSIGN value COMMA value SEMICOLON
    (140) identifier -> . ID
    (141) identifier -> . consult
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    ID              shift and go to state 90

    identifier                     shift and go to state 133
    consult                        shift and go to state 91
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64

state 94

    (42) statement -> IF LPARENT . iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (142) iterable -> . identifier
    (143) iterable -> . INT
    (140) identifier -> . ID
    (141) identifier -> . consult
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    INT             shift and go to state 136
    ID              shift and go to state 90

    iterable                       shift and go to state 134
    identifier                     shift and go to state 135
    consult                        shift and go to state 91
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64

state 95

    (26) insert -> ID DOT . INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> ID DOT . DEL LPARENT INT RPARENT SEMICOLON
    (36) shape -> ID DOT . shape_arg SEMICOLON
    (37) delete -> ID DOT . DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (33) shape_arg -> . SHAPEF
    (34) shape_arg -> . SHAPEC
    (35) shape_arg -> . SHAPEA

    INSERT          shift and go to state 137
    DEL             shift and go to state 138
    DELETE          shift and go to state 140
    SHAPEF          shift and go to state 141
    SHAPEC          shift and go to state 142
    SHAPEA          shift and go to state 143

    shape_arg                      shift and go to state 139

state 96

    (105) list_consult -> ID PARENTCL . indice PARENTCR
    (106) list_consult -> ID PARENTCL . indice TP indice PARENTCR
    (107) mat_consult -> ID PARENTCL . indice COMMA indice PARENTCR
    (108) mat_consult -> ID PARENTCL . TP COMMA indice PARENTCR
    (109) mat_consult -> ID PARENTCL . TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> ID PARENTCL . indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> ID PARENTCL . indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> ID PARENTCL . indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    TP              shift and go to state 146
    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 145

state 97

    (24) type -> TYPE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 148


state 98

    (28) len -> LEN LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 149


state 99

    (31) blink -> BLINK LPARENT . b_content RPARENT SEMICOLON
    (81) b_content -> . list_consult COMMA INT COMMA time_mes COMMA value
    (82) b_content -> . list_consult COMMA value
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR

    ID              shift and go to state 152

    b_content                      shift and go to state 150
    list_consult                   shift and go to state 151

state 100

    (32) delay -> DELAY LPARENT . d_content RPARENT SEMICOLON
    (83) d_content -> . empty
    (84) d_content -> . INT COMMA time_mes
    (144) empty -> .

    INT             shift and go to state 155
    RPARENT         reduce using rule 144 (empty -> .)

    d_content                      shift and go to state 153
    empty                          shift and go to state 154

state 101

    (39) for -> FOR ID . IN iterable step LCORCH instruction RCORCH SEMICOLON

    IN              shift and go to state 156


state 102

    (56) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON . block
    (3) block -> . instruction block
    (4) block -> . procedure block
    (5) block -> . assignment block
    (6) block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (45) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    PROCEDURE       shift and go to state 49
    GLOBAL          shift and go to state 50
    $end            reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    block                          shift and go to state 157
    instruction                    shift and go to state 41
    procedure                      shift and go to state 42
    assignment                     shift and go to state 43
    empty                          shift and go to state 44
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 103

    (57) main_body -> BEGIN main_block END . SEMICOLON

    SEMICOLON       shift and go to state 158


state 104

    (58) main_block -> instruction main_block .

    END             reduce using rule 58 (main_block -> instruction main_block .)


state 105

    (59) main_block -> call main_block .

    END             reduce using rule 59 (main_block -> call main_block .)


state 106

    (60) call -> CALL proc_dec . SEMICOLON

    SEMICOLON       shift and go to state 159


state 107

    (29) neg -> consult DOT NEG . SEMICOLON

    SEMICOLON       shift and go to state 160


state 108

    (30) t_f -> consult DOT tf . SEMICOLON

    SEMICOLON       shift and go to state 161


state 109

    (85) tf -> T .

    SEMICOLON       reduce using rule 85 (tf -> T .)


state 110

    (86) tf -> F .

    SEMICOLON       reduce using rule 86 (tf -> F .)


state 111

    (45) procedure -> PROCEDURE proc_dec LCORCH . body RCORCH SEMICOLON
    (52) body -> . BEGIN proc_block END SEMICOLON

    BEGIN           shift and go to state 163

    body                           shift and go to state 162

state 112

    (46) proc_dec -> proc_name LPARENT . parameter RPARENT
    (48) parameter -> . proc_param
    (49) parameter -> . proc_param COMMA parameter
    (50) parameter -> . empty
    (51) proc_param -> . ID
    (144) empty -> .

    ID              shift and go to state 167
    RPARENT         reduce using rule 144 (empty -> .)

    parameter                      shift and go to state 164
    proc_param                     shift and go to state 165
    empty                          shift and go to state 166

state 113

    (11) assignment -> GLOBAL identifier ASSIGN . a_content SEMICOLON
    (25) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (75) a_content -> . value
    (76) a_content -> . arithmetic
    (77) a_content -> . list
    (78) a_content -> . mat
    (79) a_content -> . 3dmat
    (80) a_content -> . consult
    (129) value -> . FALSE
    (130) value -> . TRUE
    (63) arithmetic -> . term
    (64) arithmetic -> . adding_operator term
    (65) arithmetic -> . arithmetic adding_operator term
    (89) list -> . PARENTCL list_term PARENTCR
    (90) list -> . PARENTCL empty PARENTCR
    (94) mat -> . PARENTCL mat_term PARENTCR
    (98) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (66) term -> . factor
    (67) term -> . term multiplying_operator factor
    (122) adding_operator -> . PLUS
    (123) adding_operator -> . MINUS
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (68) factor -> . INT
    (69) factor -> . ID
    (70) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 115
    FALSE           shift and go to state 124
    TRUE            shift and go to state 125
    PARENTCL        shift and go to state 128
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    ID              shift and go to state 132
    INT             shift and go to state 117
    LPARENT         shift and go to state 116

    a_content                      shift and go to state 168
    value                          shift and go to state 118
    arithmetic                     shift and go to state 119
    list                           shift and go to state 120
    mat                            shift and go to state 121
    3dmat                          shift and go to state 122
    consult                        shift and go to state 123
    term                           shift and go to state 126
    adding_operator                shift and go to state 127
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    factor                         shift and go to state 129

state 114

    (12) assignment -> identifier ASSIGN a_content . SEMICOLON

    SEMICOLON       shift and go to state 169


state 115

    (25) a_content -> RANGE . LPARENT INT COMMA value RPARENT

    LPARENT         shift and go to state 170


state 116

    (70) factor -> LPARENT . arithmetic RPARENT
    (63) arithmetic -> . term
    (64) arithmetic -> . adding_operator term
    (65) arithmetic -> . arithmetic adding_operator term
    (66) term -> . factor
    (67) term -> . term multiplying_operator factor
    (122) adding_operator -> . PLUS
    (123) adding_operator -> . MINUS
    (68) factor -> . INT
    (69) factor -> . ID
    (70) factor -> . LPARENT arithmetic RPARENT

    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    INT             shift and go to state 117
    ID              shift and go to state 172
    LPARENT         shift and go to state 116

    arithmetic                     shift and go to state 171
    term                           shift and go to state 126
    adding_operator                shift and go to state 127
    factor                         shift and go to state 129

state 117

    (68) factor -> INT .

    TIMES           reduce using rule 68 (factor -> INT .)
    EXP             reduce using rule 68 (factor -> INT .)
    DIVIDE          reduce using rule 68 (factor -> INT .)
    DIVENT          reduce using rule 68 (factor -> INT .)
    MOD             reduce using rule 68 (factor -> INT .)
    PLUS            reduce using rule 68 (factor -> INT .)
    MINUS           reduce using rule 68 (factor -> INT .)
    SEMICOLON       reduce using rule 68 (factor -> INT .)
    RPARENT         reduce using rule 68 (factor -> INT .)


state 118

    (75) a_content -> value .

    SEMICOLON       reduce using rule 75 (a_content -> value .)


state 119

    (76) a_content -> arithmetic .
    (65) arithmetic -> arithmetic . adding_operator term
    (122) adding_operator -> . PLUS
    (123) adding_operator -> . MINUS

    SEMICOLON       reduce using rule 76 (a_content -> arithmetic .)
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131

    adding_operator                shift and go to state 173

state 120

    (77) a_content -> list .

    SEMICOLON       reduce using rule 77 (a_content -> list .)


state 121

    (78) a_content -> mat .

    SEMICOLON       reduce using rule 78 (a_content -> mat .)


state 122

    (79) a_content -> 3dmat .

    SEMICOLON       reduce using rule 79 (a_content -> 3dmat .)


state 123

    (80) a_content -> consult .

    SEMICOLON       reduce using rule 80 (a_content -> consult .)


state 124

    (129) value -> FALSE .

    SEMICOLON       reduce using rule 129 (value -> FALSE .)
    COMMA           reduce using rule 129 (value -> FALSE .)
    PARENTCR        reduce using rule 129 (value -> FALSE .)
    RPARENT         reduce using rule 129 (value -> FALSE .)


state 125

    (130) value -> TRUE .

    SEMICOLON       reduce using rule 130 (value -> TRUE .)
    COMMA           reduce using rule 130 (value -> TRUE .)
    PARENTCR        reduce using rule 130 (value -> TRUE .)
    RPARENT         reduce using rule 130 (value -> TRUE .)


state 126

    (63) arithmetic -> term .
    (67) term -> term . multiplying_operator factor
    (124) multiplying_operator -> . TIMES
    (125) multiplying_operator -> . EXP
    (126) multiplying_operator -> . DIVIDE
    (127) multiplying_operator -> . DIVENT
    (128) multiplying_operator -> . MOD

    PLUS            reduce using rule 63 (arithmetic -> term .)
    MINUS           reduce using rule 63 (arithmetic -> term .)
    SEMICOLON       reduce using rule 63 (arithmetic -> term .)
    RPARENT         reduce using rule 63 (arithmetic -> term .)
    TIMES           shift and go to state 175
    EXP             shift and go to state 176
    DIVIDE          shift and go to state 177
    DIVENT          shift and go to state 178
    MOD             shift and go to state 179

    multiplying_operator           shift and go to state 174

state 127

    (64) arithmetic -> adding_operator . term
    (66) term -> . factor
    (67) term -> . term multiplying_operator factor
    (68) factor -> . INT
    (69) factor -> . ID
    (70) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 117
    ID              shift and go to state 172
    LPARENT         shift and go to state 116

    term                           shift and go to state 180
    factor                         shift and go to state 129

state 128

    (89) list -> PARENTCL . list_term PARENTCR
    (90) list -> PARENTCL . empty PARENTCR
    (94) mat -> PARENTCL . mat_term PARENTCR
    (98) 3dmat -> PARENTCL . 3dmat_term PARENTCR
    (91) list_term -> . list_value COMMA list_term
    (92) list_term -> . list_value
    (144) empty -> .
    (95) mat_term -> . mat_value COMMA mat_term
    (96) mat_term -> . mat_value
    (99) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (100) 3dmat_term -> . 3dmat_value
    (93) list_value -> . value
    (97) mat_value -> . list
    (101) 3dmat_value -> . mat
    (129) value -> . FALSE
    (130) value -> . TRUE
    (89) list -> . PARENTCL list_term PARENTCR
    (90) list -> . PARENTCL empty PARENTCR
    (94) mat -> . PARENTCL mat_term PARENTCR

    PARENTCR        reduce using rule 144 (empty -> .)
    FALSE           shift and go to state 124
    TRUE            shift and go to state 125
    PARENTCL        shift and go to state 181

    list_term                      shift and go to state 182
    empty                          shift and go to state 183
    mat_term                       shift and go to state 184
    3dmat_term                     shift and go to state 185
    list_value                     shift and go to state 186
    mat_value                      shift and go to state 187
    3dmat_value                    shift and go to state 188
    value                          shift and go to state 189
    list                           shift and go to state 190
    mat                            shift and go to state 191

state 129

    (66) term -> factor .

    TIMES           reduce using rule 66 (term -> factor .)
    EXP             reduce using rule 66 (term -> factor .)
    DIVIDE          reduce using rule 66 (term -> factor .)
    DIVENT          reduce using rule 66 (term -> factor .)
    MOD             reduce using rule 66 (term -> factor .)
    PLUS            reduce using rule 66 (term -> factor .)
    MINUS           reduce using rule 66 (term -> factor .)
    SEMICOLON       reduce using rule 66 (term -> factor .)
    RPARENT         reduce using rule 66 (term -> factor .)


state 130

    (122) adding_operator -> PLUS .

    INT             reduce using rule 122 (adding_operator -> PLUS .)
    ID              reduce using rule 122 (adding_operator -> PLUS .)
    LPARENT         reduce using rule 122 (adding_operator -> PLUS .)


state 131

    (123) adding_operator -> MINUS .

    INT             reduce using rule 123 (adding_operator -> MINUS .)
    ID              reduce using rule 123 (adding_operator -> MINUS .)
    LPARENT         reduce using rule 123 (adding_operator -> MINUS .)


state 132

    (105) list_consult -> ID . PARENTCL indice PARENTCR
    (106) list_consult -> ID . PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> ID . PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> ID . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> ID . PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (69) factor -> ID .

    PARENTCL        shift and go to state 96
    TIMES           reduce using rule 69 (factor -> ID .)
    EXP             reduce using rule 69 (factor -> ID .)
    DIVIDE          reduce using rule 69 (factor -> ID .)
    DIVENT          reduce using rule 69 (factor -> ID .)
    MOD             reduce using rule 69 (factor -> ID .)
    PLUS            reduce using rule 69 (factor -> ID .)
    MINUS           reduce using rule 69 (factor -> ID .)
    SEMICOLON       reduce using rule 69 (factor -> ID .)


state 133

    (13) assignment -> identifier COMMA identifier . ASSIGN value COMMA value SEMICOLON

    ASSIGN          shift and go to state 192


state 134

    (42) statement -> IF LPARENT iterable . relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (133) relation -> . ASSIGN
    (134) relation -> . NE
    (135) relation -> . LT
    (136) relation -> . GT
    (137) relation -> . LTE
    (138) relation -> . GTE
    (139) relation -> . COMPARE

    ASSIGN          shift and go to state 194
    NE              shift and go to state 195
    LT              shift and go to state 196
    GT              shift and go to state 197
    LTE             shift and go to state 198
    GTE             shift and go to state 199
    COMPARE         shift and go to state 200

    relation                       shift and go to state 193

state 135

    (142) iterable -> identifier .

    ASSIGN          reduce using rule 142 (iterable -> identifier .)
    NE              reduce using rule 142 (iterable -> identifier .)
    LT              reduce using rule 142 (iterable -> identifier .)
    GT              reduce using rule 142 (iterable -> identifier .)
    LTE             reduce using rule 142 (iterable -> identifier .)
    GTE             reduce using rule 142 (iterable -> identifier .)
    COMPARE         reduce using rule 142 (iterable -> identifier .)
    STEP            reduce using rule 142 (iterable -> identifier .)
    LCORCH          reduce using rule 142 (iterable -> identifier .)


state 136

    (143) iterable -> INT .

    ASSIGN          reduce using rule 143 (iterable -> INT .)
    NE              reduce using rule 143 (iterable -> INT .)
    LT              reduce using rule 143 (iterable -> INT .)
    GT              reduce using rule 143 (iterable -> INT .)
    LTE             reduce using rule 143 (iterable -> INT .)
    GTE             reduce using rule 143 (iterable -> INT .)
    COMPARE         reduce using rule 143 (iterable -> INT .)
    STEP            reduce using rule 143 (iterable -> INT .)
    LCORCH          reduce using rule 143 (iterable -> INT .)


state 137

    (26) insert -> ID DOT INSERT . LPARENT i_content RPARENT SEMICOLON

    LPARENT         shift and go to state 201


state 138

    (27) del -> ID DOT DEL . LPARENT INT RPARENT SEMICOLON

    LPARENT         shift and go to state 202


state 139

    (36) shape -> ID DOT shape_arg . SEMICOLON

    SEMICOLON       shift and go to state 203


state 140

    (37) delete -> ID DOT DELETE . LPARENT indice COMMA INT RPARENT SEMICOLON

    LPARENT         shift and go to state 204


state 141

    (33) shape_arg -> SHAPEF .

    SEMICOLON       reduce using rule 33 (shape_arg -> SHAPEF .)


state 142

    (34) shape_arg -> SHAPEC .

    SEMICOLON       reduce using rule 34 (shape_arg -> SHAPEC .)


state 143

    (35) shape_arg -> SHAPEA .

    SEMICOLON       reduce using rule 35 (shape_arg -> SHAPEA .)


state 144

    (114) indice -> ID .

    PARENTCR        reduce using rule 114 (indice -> ID .)
    TP              reduce using rule 114 (indice -> ID .)
    COMMA           reduce using rule 114 (indice -> ID .)


state 145

    (105) list_consult -> ID PARENTCL indice . PARENTCR
    (106) list_consult -> ID PARENTCL indice . TP indice PARENTCR
    (107) mat_consult -> ID PARENTCL indice . COMMA indice PARENTCR
    (110) mat_consult -> ID PARENTCL indice . PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> ID PARENTCL indice . COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> ID PARENTCL indice . PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    PARENTCR        shift and go to state 205
    TP              shift and go to state 206
    COMMA           shift and go to state 207


state 146

    (108) mat_consult -> ID PARENTCL TP . COMMA indice PARENTCR
    (109) mat_consult -> ID PARENTCL TP . PARENTCR PARENTCL indice PARENTCR

    COMMA           shift and go to state 208
    PARENTCR        shift and go to state 209


state 147

    (113) indice -> INT .

    PARENTCR        reduce using rule 113 (indice -> INT .)
    TP              reduce using rule 113 (indice -> INT .)
    COMMA           reduce using rule 113 (indice -> INT .)


state 148

    (24) type -> TYPE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 210


state 149

    (28) len -> LEN LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 211


state 150

    (31) blink -> BLINK LPARENT b_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 212


state 151

    (81) b_content -> list_consult . COMMA INT COMMA time_mes COMMA value
    (82) b_content -> list_consult . COMMA value

    COMMA           shift and go to state 213


state 152

    (105) list_consult -> ID . PARENTCL indice PARENTCR
    (106) list_consult -> ID . PARENTCL indice TP indice PARENTCR

    PARENTCL        shift and go to state 214


state 153

    (32) delay -> DELAY LPARENT d_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 215


state 154

    (83) d_content -> empty .

    RPARENT         reduce using rule 83 (d_content -> empty .)


state 155

    (84) d_content -> INT . COMMA time_mes

    COMMA           shift and go to state 216


state 156

    (39) for -> FOR ID IN . iterable step LCORCH instruction RCORCH SEMICOLON
    (142) iterable -> . identifier
    (143) iterable -> . INT
    (140) identifier -> . ID
    (141) identifier -> . consult
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    INT             shift and go to state 136
    ID              shift and go to state 90

    iterable                       shift and go to state 217
    identifier                     shift and go to state 135
    consult                        shift and go to state 91
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64

state 157

    (56) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block .

    $end            reduce using rule 56 (main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block .)


state 158

    (57) main_body -> BEGIN main_block END SEMICOLON .

    RCORCH          reduce using rule 57 (main_body -> BEGIN main_block END SEMICOLON .)


state 159

    (60) call -> CALL proc_dec SEMICOLON .

    CALL            reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    IF              reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    TYPE            reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    ID              reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    LEN             reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    BLINK           reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    DELAY           reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    FOR             reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    END             reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)
    GLOBAL          reduce using rule 60 (call -> CALL proc_dec SEMICOLON .)


state 160

    (29) neg -> consult DOT NEG SEMICOLON .

    PROCEDURE       reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    GLOBAL          reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    IF              reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    ID              reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    TYPE            reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    LEN             reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    BLINK           reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    DELAY           reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    FOR             reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    MAIN            reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    CALL            reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    END             reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    $end            reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)
    RCORCH          reduce using rule 29 (neg -> consult DOT NEG SEMICOLON .)


state 161

    (30) t_f -> consult DOT tf SEMICOLON .

    PROCEDURE       reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    GLOBAL          reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    IF              reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    ID              reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    TYPE            reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    LEN             reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    BLINK           reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    DELAY           reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    FOR             reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    MAIN            reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    CALL            reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    END             reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    $end            reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)
    RCORCH          reduce using rule 30 (t_f -> consult DOT tf SEMICOLON .)


state 162

    (45) procedure -> PROCEDURE proc_dec LCORCH body . RCORCH SEMICOLON

    RCORCH          shift and go to state 218


state 163

    (52) body -> BEGIN . proc_block END SEMICOLON
    (53) proc_block -> . instruction proc_block
    (54) proc_block -> . assignment proc_block
    (55) proc_block -> . call proc_block
    (61) proc_block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (60) call -> . CALL proc_dec SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    GLOBAL          shift and go to state 50
    CALL            shift and go to state 79
    END             reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    proc_block                     shift and go to state 219
    instruction                    shift and go to state 220
    assignment                     shift and go to state 221
    call                           shift and go to state 222
    empty                          shift and go to state 223
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 164

    (46) proc_dec -> proc_name LPARENT parameter . RPARENT

    RPARENT         shift and go to state 224


state 165

    (48) parameter -> proc_param .
    (49) parameter -> proc_param . COMMA parameter

    RPARENT         reduce using rule 48 (parameter -> proc_param .)
    COMMA           shift and go to state 225


state 166

    (50) parameter -> empty .

    RPARENT         reduce using rule 50 (parameter -> empty .)


state 167

    (51) proc_param -> ID .

    COMMA           reduce using rule 51 (proc_param -> ID .)
    RPARENT         reduce using rule 51 (proc_param -> ID .)


state 168

    (11) assignment -> GLOBAL identifier ASSIGN a_content . SEMICOLON

    SEMICOLON       shift and go to state 226


state 169

    (12) assignment -> identifier ASSIGN a_content SEMICOLON .

    PROCEDURE       reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    GLOBAL          reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    IF              reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    ID              reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    TYPE            reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    LEN             reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    BLINK           reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    DELAY           reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    FOR             reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    MAIN            reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    $end            reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    CALL            reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    END             reduce using rule 12 (assignment -> identifier ASSIGN a_content SEMICOLON .)


state 170

    (25) a_content -> RANGE LPARENT . INT COMMA value RPARENT

    INT             shift and go to state 227


state 171

    (70) factor -> LPARENT arithmetic . RPARENT
    (65) arithmetic -> arithmetic . adding_operator term
    (122) adding_operator -> . PLUS
    (123) adding_operator -> . MINUS

    RPARENT         shift and go to state 228
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131

    adding_operator                shift and go to state 173

state 172

    (69) factor -> ID .

    TIMES           reduce using rule 69 (factor -> ID .)
    EXP             reduce using rule 69 (factor -> ID .)
    DIVIDE          reduce using rule 69 (factor -> ID .)
    DIVENT          reduce using rule 69 (factor -> ID .)
    MOD             reduce using rule 69 (factor -> ID .)
    RPARENT         reduce using rule 69 (factor -> ID .)
    PLUS            reduce using rule 69 (factor -> ID .)
    MINUS           reduce using rule 69 (factor -> ID .)
    SEMICOLON       reduce using rule 69 (factor -> ID .)


state 173

    (65) arithmetic -> arithmetic adding_operator . term
    (66) term -> . factor
    (67) term -> . term multiplying_operator factor
    (68) factor -> . INT
    (69) factor -> . ID
    (70) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 117
    ID              shift and go to state 172
    LPARENT         shift and go to state 116

    term                           shift and go to state 229
    factor                         shift and go to state 129

state 174

    (67) term -> term multiplying_operator . factor
    (68) factor -> . INT
    (69) factor -> . ID
    (70) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 117
    ID              shift and go to state 172
    LPARENT         shift and go to state 116

    factor                         shift and go to state 230

state 175

    (124) multiplying_operator -> TIMES .

    INT             reduce using rule 124 (multiplying_operator -> TIMES .)
    ID              reduce using rule 124 (multiplying_operator -> TIMES .)
    LPARENT         reduce using rule 124 (multiplying_operator -> TIMES .)


state 176

    (125) multiplying_operator -> EXP .

    INT             reduce using rule 125 (multiplying_operator -> EXP .)
    ID              reduce using rule 125 (multiplying_operator -> EXP .)
    LPARENT         reduce using rule 125 (multiplying_operator -> EXP .)


state 177

    (126) multiplying_operator -> DIVIDE .

    INT             reduce using rule 126 (multiplying_operator -> DIVIDE .)
    ID              reduce using rule 126 (multiplying_operator -> DIVIDE .)
    LPARENT         reduce using rule 126 (multiplying_operator -> DIVIDE .)


state 178

    (127) multiplying_operator -> DIVENT .

    INT             reduce using rule 127 (multiplying_operator -> DIVENT .)
    ID              reduce using rule 127 (multiplying_operator -> DIVENT .)
    LPARENT         reduce using rule 127 (multiplying_operator -> DIVENT .)


state 179

    (128) multiplying_operator -> MOD .

    INT             reduce using rule 128 (multiplying_operator -> MOD .)
    ID              reduce using rule 128 (multiplying_operator -> MOD .)
    LPARENT         reduce using rule 128 (multiplying_operator -> MOD .)


state 180

    (64) arithmetic -> adding_operator term .
    (67) term -> term . multiplying_operator factor
    (124) multiplying_operator -> . TIMES
    (125) multiplying_operator -> . EXP
    (126) multiplying_operator -> . DIVIDE
    (127) multiplying_operator -> . DIVENT
    (128) multiplying_operator -> . MOD

    PLUS            reduce using rule 64 (arithmetic -> adding_operator term .)
    MINUS           reduce using rule 64 (arithmetic -> adding_operator term .)
    SEMICOLON       reduce using rule 64 (arithmetic -> adding_operator term .)
    RPARENT         reduce using rule 64 (arithmetic -> adding_operator term .)
    TIMES           shift and go to state 175
    EXP             shift and go to state 176
    DIVIDE          shift and go to state 177
    DIVENT          shift and go to state 178
    MOD             shift and go to state 179

    multiplying_operator           shift and go to state 174

state 181

    (89) list -> PARENTCL . list_term PARENTCR
    (90) list -> PARENTCL . empty PARENTCR
    (94) mat -> PARENTCL . mat_term PARENTCR
    (91) list_term -> . list_value COMMA list_term
    (92) list_term -> . list_value
    (144) empty -> .
    (95) mat_term -> . mat_value COMMA mat_term
    (96) mat_term -> . mat_value
    (93) list_value -> . value
    (97) mat_value -> . list
    (129) value -> . FALSE
    (130) value -> . TRUE
    (89) list -> . PARENTCL list_term PARENTCR
    (90) list -> . PARENTCL empty PARENTCR

    PARENTCR        reduce using rule 144 (empty -> .)
    FALSE           shift and go to state 124
    TRUE            shift and go to state 125
    PARENTCL        shift and go to state 231

    list_term                      shift and go to state 182
    empty                          shift and go to state 183
    mat_term                       shift and go to state 184
    list_value                     shift and go to state 186
    mat_value                      shift and go to state 187
    value                          shift and go to state 189
    list                           shift and go to state 190

state 182

    (89) list -> PARENTCL list_term . PARENTCR

    PARENTCR        shift and go to state 232


state 183

    (90) list -> PARENTCL empty . PARENTCR

    PARENTCR        shift and go to state 233


state 184

    (94) mat -> PARENTCL mat_term . PARENTCR

    PARENTCR        shift and go to state 234


state 185

    (98) 3dmat -> PARENTCL 3dmat_term . PARENTCR

    PARENTCR        shift and go to state 235


state 186

    (91) list_term -> list_value . COMMA list_term
    (92) list_term -> list_value .

    COMMA           shift and go to state 236
    PARENTCR        reduce using rule 92 (list_term -> list_value .)


state 187

    (95) mat_term -> mat_value . COMMA mat_term
    (96) mat_term -> mat_value .

    COMMA           shift and go to state 237
    PARENTCR        reduce using rule 96 (mat_term -> mat_value .)


state 188

    (99) 3dmat_term -> 3dmat_value . COMMA 3dmat_term
    (100) 3dmat_term -> 3dmat_value .

    COMMA           shift and go to state 238
    PARENTCR        reduce using rule 100 (3dmat_term -> 3dmat_value .)


state 189

    (93) list_value -> value .

    COMMA           reduce using rule 93 (list_value -> value .)
    PARENTCR        reduce using rule 93 (list_value -> value .)


state 190

    (97) mat_value -> list .

    COMMA           reduce using rule 97 (mat_value -> list .)
    PARENTCR        reduce using rule 97 (mat_value -> list .)


state 191

    (101) 3dmat_value -> mat .

    COMMA           reduce using rule 101 (3dmat_value -> mat .)
    PARENTCR        reduce using rule 101 (3dmat_value -> mat .)


state 192

    (13) assignment -> identifier COMMA identifier ASSIGN . value COMMA value SEMICOLON
    (129) value -> . FALSE
    (130) value -> . TRUE

    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    value                          shift and go to state 239

state 193

    (42) statement -> IF LPARENT iterable relation . bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (131) bif_value -> . value
    (132) bif_value -> . arithmetic
    (129) value -> . FALSE
    (130) value -> . TRUE
    (63) arithmetic -> . term
    (64) arithmetic -> . adding_operator term
    (65) arithmetic -> . arithmetic adding_operator term
    (66) term -> . factor
    (67) term -> . term multiplying_operator factor
    (122) adding_operator -> . PLUS
    (123) adding_operator -> . MINUS
    (68) factor -> . INT
    (69) factor -> . ID
    (70) factor -> . LPARENT arithmetic RPARENT

    FALSE           shift and go to state 124
    TRUE            shift and go to state 125
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    INT             shift and go to state 117
    ID              shift and go to state 172
    LPARENT         shift and go to state 116

    bif_value                      shift and go to state 240
    value                          shift and go to state 241
    arithmetic                     shift and go to state 242
    term                           shift and go to state 126
    adding_operator                shift and go to state 127
    factor                         shift and go to state 129

state 194

    (133) relation -> ASSIGN .

    FALSE           reduce using rule 133 (relation -> ASSIGN .)
    TRUE            reduce using rule 133 (relation -> ASSIGN .)
    PLUS            reduce using rule 133 (relation -> ASSIGN .)
    MINUS           reduce using rule 133 (relation -> ASSIGN .)
    INT             reduce using rule 133 (relation -> ASSIGN .)
    ID              reduce using rule 133 (relation -> ASSIGN .)
    LPARENT         reduce using rule 133 (relation -> ASSIGN .)


state 195

    (134) relation -> NE .

    FALSE           reduce using rule 134 (relation -> NE .)
    TRUE            reduce using rule 134 (relation -> NE .)
    PLUS            reduce using rule 134 (relation -> NE .)
    MINUS           reduce using rule 134 (relation -> NE .)
    INT             reduce using rule 134 (relation -> NE .)
    ID              reduce using rule 134 (relation -> NE .)
    LPARENT         reduce using rule 134 (relation -> NE .)


state 196

    (135) relation -> LT .

    FALSE           reduce using rule 135 (relation -> LT .)
    TRUE            reduce using rule 135 (relation -> LT .)
    PLUS            reduce using rule 135 (relation -> LT .)
    MINUS           reduce using rule 135 (relation -> LT .)
    INT             reduce using rule 135 (relation -> LT .)
    ID              reduce using rule 135 (relation -> LT .)
    LPARENT         reduce using rule 135 (relation -> LT .)


state 197

    (136) relation -> GT .

    FALSE           reduce using rule 136 (relation -> GT .)
    TRUE            reduce using rule 136 (relation -> GT .)
    PLUS            reduce using rule 136 (relation -> GT .)
    MINUS           reduce using rule 136 (relation -> GT .)
    INT             reduce using rule 136 (relation -> GT .)
    ID              reduce using rule 136 (relation -> GT .)
    LPARENT         reduce using rule 136 (relation -> GT .)


state 198

    (137) relation -> LTE .

    FALSE           reduce using rule 137 (relation -> LTE .)
    TRUE            reduce using rule 137 (relation -> LTE .)
    PLUS            reduce using rule 137 (relation -> LTE .)
    MINUS           reduce using rule 137 (relation -> LTE .)
    INT             reduce using rule 137 (relation -> LTE .)
    ID              reduce using rule 137 (relation -> LTE .)
    LPARENT         reduce using rule 137 (relation -> LTE .)


state 199

    (138) relation -> GTE .

    FALSE           reduce using rule 138 (relation -> GTE .)
    TRUE            reduce using rule 138 (relation -> GTE .)
    PLUS            reduce using rule 138 (relation -> GTE .)
    MINUS           reduce using rule 138 (relation -> GTE .)
    INT             reduce using rule 138 (relation -> GTE .)
    ID              reduce using rule 138 (relation -> GTE .)
    LPARENT         reduce using rule 138 (relation -> GTE .)


state 200

    (139) relation -> COMPARE .

    FALSE           reduce using rule 139 (relation -> COMPARE .)
    TRUE            reduce using rule 139 (relation -> COMPARE .)
    PLUS            reduce using rule 139 (relation -> COMPARE .)
    MINUS           reduce using rule 139 (relation -> COMPARE .)
    INT             reduce using rule 139 (relation -> COMPARE .)
    ID              reduce using rule 139 (relation -> COMPARE .)
    LPARENT         reduce using rule 139 (relation -> COMPARE .)


state 201

    (26) insert -> ID DOT INSERT LPARENT . i_content RPARENT SEMICOLON
    (87) i_content -> . INT COMMA value
    (88) i_content -> . list COMMA INT i_ind
    (89) list -> . PARENTCL list_term PARENTCR
    (90) list -> . PARENTCL empty PARENTCR

    INT             shift and go to state 244
    PARENTCL        shift and go to state 231

    i_content                      shift and go to state 243
    list                           shift and go to state 245

state 202

    (27) del -> ID DOT DEL LPARENT . INT RPARENT SEMICOLON

    INT             shift and go to state 246


state 203

    (36) shape -> ID DOT shape_arg SEMICOLON .

    PROCEDURE       reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    GLOBAL          reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    IF              reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    ID              reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    TYPE            reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    LEN             reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    BLINK           reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    DELAY           reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    FOR             reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    MAIN            reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    CALL            reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    END             reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    $end            reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)
    RCORCH          reduce using rule 36 (shape -> ID DOT shape_arg SEMICOLON .)


state 204

    (37) delete -> ID DOT DELETE LPARENT . indice COMMA INT RPARENT SEMICOLON
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 247

state 205

    (105) list_consult -> ID PARENTCL indice PARENTCR .
    (110) mat_consult -> ID PARENTCL indice PARENTCR . PARENTCL indice PARENTCR
    (112) 3dmat_consult -> ID PARENTCL indice PARENTCR . PARENTCL indice PARENTCR PARENTCL indice PARENTCR

    SEMICOLON       reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    DOT             reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    ASSIGN          reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    NE              reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    LT              reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    GT              reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    LTE             reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    GTE             reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    STEP            reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)
    PARENTCL        shift and go to state 248


state 206

    (106) list_consult -> ID PARENTCL indice TP . indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 249

state 207

    (107) mat_consult -> ID PARENTCL indice COMMA . indice PARENTCR
    (111) 3dmat_consult -> ID PARENTCL indice COMMA . indice COMMA indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 250

state 208

    (108) mat_consult -> ID PARENTCL TP COMMA . indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 251

state 209

    (109) mat_consult -> ID PARENTCL TP PARENTCR . PARENTCL indice PARENTCR

    PARENTCL        shift and go to state 252


state 210

    (24) type -> TYPE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 253


state 211

    (28) len -> LEN LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 254


state 212

    (31) blink -> BLINK LPARENT b_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 255


state 213

    (81) b_content -> list_consult COMMA . INT COMMA time_mes COMMA value
    (82) b_content -> list_consult COMMA . value
    (129) value -> . FALSE
    (130) value -> . TRUE

    INT             shift and go to state 256
    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    value                          shift and go to state 257

state 214

    (105) list_consult -> ID PARENTCL . indice PARENTCR
    (106) list_consult -> ID PARENTCL . indice TP indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 258

state 215

    (32) delay -> DELAY LPARENT d_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 259


state 216

    (84) d_content -> INT COMMA . time_mes
    (119) time_mes -> . QUOTES MIL QUOTES
    (120) time_mes -> . QUOTES MIN QUOTES
    (121) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 260

state 217

    (39) for -> FOR ID IN iterable . step LCORCH instruction RCORCH SEMICOLON
    (40) step -> . STEP INT
    (41) step -> . empty
    (144) empty -> .

    STEP            shift and go to state 262
    LCORCH          reduce using rule 144 (empty -> .)

    step                           shift and go to state 261
    empty                          shift and go to state 263

state 218

    (45) procedure -> PROCEDURE proc_dec LCORCH body RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 264


state 219

    (52) body -> BEGIN proc_block . END SEMICOLON

    END             shift and go to state 265


state 220

    (53) proc_block -> instruction . proc_block
    (53) proc_block -> . instruction proc_block
    (54) proc_block -> . assignment proc_block
    (55) proc_block -> . call proc_block
    (61) proc_block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (60) call -> . CALL proc_dec SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    GLOBAL          shift and go to state 50
    CALL            shift and go to state 79
    END             reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    instruction                    shift and go to state 220
    proc_block                     shift and go to state 266
    assignment                     shift and go to state 221
    call                           shift and go to state 222
    empty                          shift and go to state 223
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 221

    (54) proc_block -> assignment . proc_block
    (53) proc_block -> . instruction proc_block
    (54) proc_block -> . assignment proc_block
    (55) proc_block -> . call proc_block
    (61) proc_block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (60) call -> . CALL proc_dec SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    GLOBAL          shift and go to state 50
    CALL            shift and go to state 79
    END             reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    assignment                     shift and go to state 221
    proc_block                     shift and go to state 267
    instruction                    shift and go to state 220
    call                           shift and go to state 222
    empty                          shift and go to state 223
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 222

    (55) proc_block -> call . proc_block
    (53) proc_block -> . instruction proc_block
    (54) proc_block -> . assignment proc_block
    (55) proc_block -> . call proc_block
    (61) proc_block -> . empty
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (11) assignment -> . GLOBAL identifier ASSIGN a_content SEMICOLON
    (12) assignment -> . identifier ASSIGN a_content SEMICOLON
    (13) assignment -> . identifier COMMA identifier ASSIGN value COMMA value SEMICOLON
    (60) call -> . CALL proc_dec SEMICOLON
    (144) empty -> .
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (140) identifier -> . ID
    (141) identifier -> . consult
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    GLOBAL          shift and go to state 50
    CALL            shift and go to state 79
    END             reduce using rule 144 (empty -> .)
    IF              shift and go to state 66
    ID              shift and go to state 67
    TYPE            shift and go to state 68
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    call                           shift and go to state 222
    proc_block                     shift and go to state 268
    instruction                    shift and go to state 220
    assignment                     shift and go to state 221
    empty                          shift and go to state 223
    function                       shift and go to state 45
    consult                        shift and go to state 46
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    identifier                     shift and go to state 51
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 223

    (61) proc_block -> empty .

    END             reduce using rule 61 (proc_block -> empty .)


state 224

    (46) proc_dec -> proc_name LPARENT parameter RPARENT .

    LCORCH          reduce using rule 46 (proc_dec -> proc_name LPARENT parameter RPARENT .)
    SEMICOLON       reduce using rule 46 (proc_dec -> proc_name LPARENT parameter RPARENT .)


state 225

    (49) parameter -> proc_param COMMA . parameter
    (48) parameter -> . proc_param
    (49) parameter -> . proc_param COMMA parameter
    (50) parameter -> . empty
    (51) proc_param -> . ID
    (144) empty -> .

    ID              shift and go to state 167
    RPARENT         reduce using rule 144 (empty -> .)

    proc_param                     shift and go to state 165
    parameter                      shift and go to state 269
    empty                          shift and go to state 166

state 226

    (11) assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .

    PROCEDURE       reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    GLOBAL          reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    IF              reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    ID              reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    TYPE            reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    LEN             reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    BLINK           reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    DELAY           reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    FOR             reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    MAIN            reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    $end            reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    CALL            reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)
    END             reduce using rule 11 (assignment -> GLOBAL identifier ASSIGN a_content SEMICOLON .)


state 227

    (25) a_content -> RANGE LPARENT INT . COMMA value RPARENT

    COMMA           shift and go to state 270


state 228

    (70) factor -> LPARENT arithmetic RPARENT .

    TIMES           reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    EXP             reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    DIVIDE          reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    DIVENT          reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    MOD             reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    PLUS            reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    MINUS           reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    SEMICOLON       reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)
    RPARENT         reduce using rule 70 (factor -> LPARENT arithmetic RPARENT .)


state 229

    (65) arithmetic -> arithmetic adding_operator term .
    (67) term -> term . multiplying_operator factor
    (124) multiplying_operator -> . TIMES
    (125) multiplying_operator -> . EXP
    (126) multiplying_operator -> . DIVIDE
    (127) multiplying_operator -> . DIVENT
    (128) multiplying_operator -> . MOD

    PLUS            reduce using rule 65 (arithmetic -> arithmetic adding_operator term .)
    MINUS           reduce using rule 65 (arithmetic -> arithmetic adding_operator term .)
    SEMICOLON       reduce using rule 65 (arithmetic -> arithmetic adding_operator term .)
    RPARENT         reduce using rule 65 (arithmetic -> arithmetic adding_operator term .)
    TIMES           shift and go to state 175
    EXP             shift and go to state 176
    DIVIDE          shift and go to state 177
    DIVENT          shift and go to state 178
    MOD             shift and go to state 179

    multiplying_operator           shift and go to state 174

state 230

    (67) term -> term multiplying_operator factor .

    TIMES           reduce using rule 67 (term -> term multiplying_operator factor .)
    EXP             reduce using rule 67 (term -> term multiplying_operator factor .)
    DIVIDE          reduce using rule 67 (term -> term multiplying_operator factor .)
    DIVENT          reduce using rule 67 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 67 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 67 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 67 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 67 (term -> term multiplying_operator factor .)
    RPARENT         reduce using rule 67 (term -> term multiplying_operator factor .)


state 231

    (89) list -> PARENTCL . list_term PARENTCR
    (90) list -> PARENTCL . empty PARENTCR
    (91) list_term -> . list_value COMMA list_term
    (92) list_term -> . list_value
    (144) empty -> .
    (93) list_value -> . value
    (129) value -> . FALSE
    (130) value -> . TRUE

    PARENTCR        reduce using rule 144 (empty -> .)
    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    list_term                      shift and go to state 182
    empty                          shift and go to state 183
    list_value                     shift and go to state 186
    value                          shift and go to state 189

state 232

    (89) list -> PARENTCL list_term PARENTCR .

    SEMICOLON       reduce using rule 89 (list -> PARENTCL list_term PARENTCR .)
    COMMA           reduce using rule 89 (list -> PARENTCL list_term PARENTCR .)
    PARENTCR        reduce using rule 89 (list -> PARENTCL list_term PARENTCR .)


state 233

    (90) list -> PARENTCL empty PARENTCR .

    SEMICOLON       reduce using rule 90 (list -> PARENTCL empty PARENTCR .)
    COMMA           reduce using rule 90 (list -> PARENTCL empty PARENTCR .)
    PARENTCR        reduce using rule 90 (list -> PARENTCL empty PARENTCR .)


state 234

    (94) mat -> PARENTCL mat_term PARENTCR .

    SEMICOLON       reduce using rule 94 (mat -> PARENTCL mat_term PARENTCR .)
    COMMA           reduce using rule 94 (mat -> PARENTCL mat_term PARENTCR .)
    PARENTCR        reduce using rule 94 (mat -> PARENTCL mat_term PARENTCR .)


state 235

    (98) 3dmat -> PARENTCL 3dmat_term PARENTCR .

    SEMICOLON       reduce using rule 98 (3dmat -> PARENTCL 3dmat_term PARENTCR .)


state 236

    (91) list_term -> list_value COMMA . list_term
    (91) list_term -> . list_value COMMA list_term
    (92) list_term -> . list_value
    (93) list_value -> . value
    (129) value -> . FALSE
    (130) value -> . TRUE

    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    list_value                     shift and go to state 186
    list_term                      shift and go to state 271
    value                          shift and go to state 189

state 237

    (95) mat_term -> mat_value COMMA . mat_term
    (95) mat_term -> . mat_value COMMA mat_term
    (96) mat_term -> . mat_value
    (97) mat_value -> . list
    (89) list -> . PARENTCL list_term PARENTCR
    (90) list -> . PARENTCL empty PARENTCR

    PARENTCL        shift and go to state 231

    mat_value                      shift and go to state 187
    mat_term                       shift and go to state 272
    list                           shift and go to state 190

state 238

    (99) 3dmat_term -> 3dmat_value COMMA . 3dmat_term
    (99) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (100) 3dmat_term -> . 3dmat_value
    (101) 3dmat_value -> . mat
    (94) mat -> . PARENTCL mat_term PARENTCR

    PARENTCL        shift and go to state 274

    3dmat_value                    shift and go to state 188
    3dmat_term                     shift and go to state 273
    mat                            shift and go to state 191

state 239

    (13) assignment -> identifier COMMA identifier ASSIGN value . COMMA value SEMICOLON

    COMMA           shift and go to state 275


state 240

    (42) statement -> IF LPARENT iterable relation bif_value . RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement

    RPARENT         shift and go to state 276


state 241

    (131) bif_value -> value .

    RPARENT         reduce using rule 131 (bif_value -> value .)


state 242

    (132) bif_value -> arithmetic .
    (65) arithmetic -> arithmetic . adding_operator term
    (122) adding_operator -> . PLUS
    (123) adding_operator -> . MINUS

    RPARENT         reduce using rule 132 (bif_value -> arithmetic .)
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131

    adding_operator                shift and go to state 173

state 243

    (26) insert -> ID DOT INSERT LPARENT i_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 277


state 244

    (87) i_content -> INT . COMMA value

    COMMA           shift and go to state 278


state 245

    (88) i_content -> list . COMMA INT i_ind

    COMMA           shift and go to state 279


state 246

    (27) del -> ID DOT DEL LPARENT INT . RPARENT SEMICOLON

    RPARENT         shift and go to state 280


state 247

    (37) delete -> ID DOT DELETE LPARENT indice . COMMA INT RPARENT SEMICOLON

    COMMA           shift and go to state 281


state 248

    (110) mat_consult -> ID PARENTCL indice PARENTCR PARENTCL . indice PARENTCR
    (112) 3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL . indice PARENTCR PARENTCL indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 282

state 249

    (106) list_consult -> ID PARENTCL indice TP indice . PARENTCR

    PARENTCR        shift and go to state 283


state 250

    (107) mat_consult -> ID PARENTCL indice COMMA indice . PARENTCR
    (111) 3dmat_consult -> ID PARENTCL indice COMMA indice . COMMA indice PARENTCR

    PARENTCR        shift and go to state 285
    COMMA           shift and go to state 284


state 251

    (108) mat_consult -> ID PARENTCL TP COMMA indice . PARENTCR

    PARENTCR        shift and go to state 286


state 252

    (109) mat_consult -> ID PARENTCL TP PARENTCR PARENTCL . indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 287

state 253

    (24) type -> TYPE LPARENT ID RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    GLOBAL          reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    IF              reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    TYPE            reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    LEN             reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    BLINK           reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    DELAY           reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    FOR             reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    MAIN            reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    END             reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    $end            reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)
    RCORCH          reduce using rule 24 (type -> TYPE LPARENT ID RPARENT SEMICOLON .)


state 254

    (28) len -> LEN LPARENT ID RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    GLOBAL          reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    IF              reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    TYPE            reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    LEN             reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    BLINK           reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    DELAY           reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    FOR             reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    MAIN            reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    END             reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    $end            reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)
    RCORCH          reduce using rule 28 (len -> LEN LPARENT ID RPARENT SEMICOLON .)


state 255

    (31) blink -> BLINK LPARENT b_content RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    GLOBAL          reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    IF              reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    ID              reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    LEN             reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    FOR             reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    MAIN            reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    CALL            reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    END             reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    $end            reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 31 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)


state 256

    (81) b_content -> list_consult COMMA INT . COMMA time_mes COMMA value

    COMMA           shift and go to state 288


state 257

    (82) b_content -> list_consult COMMA value .

    RPARENT         reduce using rule 82 (b_content -> list_consult COMMA value .)


state 258

    (105) list_consult -> ID PARENTCL indice . PARENTCR
    (106) list_consult -> ID PARENTCL indice . TP indice PARENTCR

    PARENTCR        shift and go to state 289
    TP              shift and go to state 206


state 259

    (32) delay -> DELAY LPARENT d_content RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    GLOBAL          reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    IF              reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    ID              reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    LEN             reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    FOR             reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    MAIN            reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    CALL            reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    END             reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    $end            reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 32 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)


state 260

    (84) d_content -> INT COMMA time_mes .

    RPARENT         reduce using rule 84 (d_content -> INT COMMA time_mes .)


state 261

    (39) for -> FOR ID IN iterable step . LCORCH instruction RCORCH SEMICOLON

    LCORCH          shift and go to state 290


state 262

    (40) step -> STEP . INT

    INT             shift and go to state 291


state 263

    (41) step -> empty .

    LCORCH          reduce using rule 41 (step -> empty .)


state 264

    (45) procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .

    PROCEDURE       reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    GLOBAL          reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    IF              reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    ID              reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    TYPE            reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    LEN             reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    BLINK           reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    DELAY           reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    FOR             reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    MAIN            reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    $end            reduce using rule 45 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)


state 265

    (52) body -> BEGIN proc_block END . SEMICOLON

    SEMICOLON       shift and go to state 292


state 266

    (53) proc_block -> instruction proc_block .

    END             reduce using rule 53 (proc_block -> instruction proc_block .)


state 267

    (54) proc_block -> assignment proc_block .

    END             reduce using rule 54 (proc_block -> assignment proc_block .)


state 268

    (55) proc_block -> call proc_block .

    END             reduce using rule 55 (proc_block -> call proc_block .)


state 269

    (49) parameter -> proc_param COMMA parameter .

    RPARENT         reduce using rule 49 (parameter -> proc_param COMMA parameter .)


state 270

    (25) a_content -> RANGE LPARENT INT COMMA . value RPARENT
    (129) value -> . FALSE
    (130) value -> . TRUE

    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    value                          shift and go to state 293

state 271

    (91) list_term -> list_value COMMA list_term .

    PARENTCR        reduce using rule 91 (list_term -> list_value COMMA list_term .)


state 272

    (95) mat_term -> mat_value COMMA mat_term .

    PARENTCR        reduce using rule 95 (mat_term -> mat_value COMMA mat_term .)


state 273

    (99) 3dmat_term -> 3dmat_value COMMA 3dmat_term .

    PARENTCR        reduce using rule 99 (3dmat_term -> 3dmat_value COMMA 3dmat_term .)


state 274

    (94) mat -> PARENTCL . mat_term PARENTCR
    (95) mat_term -> . mat_value COMMA mat_term
    (96) mat_term -> . mat_value
    (97) mat_value -> . list
    (89) list -> . PARENTCL list_term PARENTCR
    (90) list -> . PARENTCL empty PARENTCR

    PARENTCL        shift and go to state 231

    mat_term                       shift and go to state 184
    mat_value                      shift and go to state 187
    list                           shift and go to state 190

state 275

    (13) assignment -> identifier COMMA identifier ASSIGN value COMMA . value SEMICOLON
    (129) value -> . FALSE
    (130) value -> . TRUE

    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    value                          shift and go to state 294

state 276

    (42) statement -> IF LPARENT iterable relation bif_value RPARENT . LCORCH instruction RCORCH SEMICOLON opt_statement

    LCORCH          shift and go to state 295


state 277

    (26) insert -> ID DOT INSERT LPARENT i_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 296


state 278

    (87) i_content -> INT COMMA . value
    (129) value -> . FALSE
    (130) value -> . TRUE

    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    value                          shift and go to state 297

state 279

    (88) i_content -> list COMMA . INT i_ind

    INT             shift and go to state 298


state 280

    (27) del -> ID DOT DEL LPARENT INT RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 299


state 281

    (37) delete -> ID DOT DELETE LPARENT indice COMMA . INT RPARENT SEMICOLON

    INT             shift and go to state 300


state 282

    (110) mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice . PARENTCR
    (112) 3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice . PARENTCR PARENTCL indice PARENTCR

    PARENTCR        shift and go to state 301


state 283

    (106) list_consult -> ID PARENTCL indice TP indice PARENTCR .

    SEMICOLON       reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    DOT             reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    ASSIGN          reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    COMMA           reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    NE              reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    LT              reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    GT              reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    LTE             reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    GTE             reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    COMPARE         reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    STEP            reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)
    LCORCH          reduce using rule 106 (list_consult -> ID PARENTCL indice TP indice PARENTCR .)


state 284

    (111) 3dmat_consult -> ID PARENTCL indice COMMA indice COMMA . indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 302

state 285

    (107) mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .

    SEMICOLON       reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    DOT             reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    ASSIGN          reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    COMMA           reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    NE              reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    LT              reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    GT              reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    LTE             reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    GTE             reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    COMPARE         reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    STEP            reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    LCORCH          reduce using rule 107 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)


state 286

    (108) mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .

    SEMICOLON       reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    DOT             reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    ASSIGN          reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    COMMA           reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    NE              reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    LT              reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    GT              reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    LTE             reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    GTE             reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    COMPARE         reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    STEP            reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    LCORCH          reduce using rule 108 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)


state 287

    (109) mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice . PARENTCR

    PARENTCR        shift and go to state 303


state 288

    (81) b_content -> list_consult COMMA INT COMMA . time_mes COMMA value
    (119) time_mes -> . QUOTES MIL QUOTES
    (120) time_mes -> . QUOTES MIN QUOTES
    (121) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 304

state 289

    (105) list_consult -> ID PARENTCL indice PARENTCR .

    COMMA           reduce using rule 105 (list_consult -> ID PARENTCL indice PARENTCR .)


state 290

    (39) for -> FOR ID IN iterable step LCORCH . instruction RCORCH SEMICOLON
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    IF              shift and go to state 66
    TYPE            shift and go to state 68
    ID              shift and go to state 80
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    instruction                    shift and go to state 305
    function                       shift and go to state 45
    consult                        shift and go to state 78
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 291

    (40) step -> STEP INT .

    LCORCH          reduce using rule 40 (step -> STEP INT .)


state 292

    (52) body -> BEGIN proc_block END SEMICOLON .

    RCORCH          reduce using rule 52 (body -> BEGIN proc_block END SEMICOLON .)


state 293

    (25) a_content -> RANGE LPARENT INT COMMA value . RPARENT

    RPARENT         shift and go to state 306


state 294

    (13) assignment -> identifier COMMA identifier ASSIGN value COMMA value . SEMICOLON

    SEMICOLON       shift and go to state 307


state 295

    (42) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH . instruction RCORCH SEMICOLON opt_statement
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    IF              shift and go to state 66
    TYPE            shift and go to state 68
    ID              shift and go to state 80
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    instruction                    shift and go to state 308
    function                       shift and go to state 45
    consult                        shift and go to state 78
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 296

    (26) insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    GLOBAL          reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    IF              reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    ID              reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    LEN             reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    FOR             reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    MAIN            reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    CALL            reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    END             reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    $end            reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 26 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON .)


state 297

    (87) i_content -> INT COMMA value .

    RPARENT         reduce using rule 87 (i_content -> INT COMMA value .)


state 298

    (88) i_content -> list COMMA INT . i_ind
    (115) i_ind -> . COMMA INT
    (116) i_ind -> . empty
    (144) empty -> .

    COMMA           shift and go to state 309
    RPARENT         reduce using rule 144 (empty -> .)

    i_ind                          shift and go to state 310
    empty                          shift and go to state 311

state 299

    (27) del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    GLOBAL          reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    IF              reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    ID              reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    TYPE            reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    LEN             reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    BLINK           reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    DELAY           reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    FOR             reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    MAIN            reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    CALL            reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    END             reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    $end            reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)
    RCORCH          reduce using rule 27 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON .)


state 300

    (37) delete -> ID DOT DELETE LPARENT indice COMMA INT . RPARENT SEMICOLON

    RPARENT         shift and go to state 312


state 301

    (110) mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .
    (112) 3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR . PARENTCL indice PARENTCR

    SEMICOLON       reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    DOT             reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    ASSIGN          reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    NE              reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    LT              reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    GT              reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    LTE             reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    GTE             reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    STEP            reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 110 (mat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    PARENTCL        shift and go to state 313


state 302

    (111) 3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice . PARENTCR

    PARENTCR        shift and go to state 314


state 303

    (109) mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .

    SEMICOLON       reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    DOT             reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    ASSIGN          reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    NE              reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    LT              reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    GT              reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    LTE             reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    GTE             reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    STEP            reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 109 (mat_consult -> ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR .)


state 304

    (81) b_content -> list_consult COMMA INT COMMA time_mes . COMMA value

    COMMA           shift and go to state 315


state 305

    (39) for -> FOR ID IN iterable step LCORCH instruction . RCORCH SEMICOLON

    RCORCH          shift and go to state 316


state 306

    (25) a_content -> RANGE LPARENT INT COMMA value RPARENT .

    SEMICOLON       reduce using rule 25 (a_content -> RANGE LPARENT INT COMMA value RPARENT .)


state 307

    (13) assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .

    PROCEDURE       reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    GLOBAL          reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    IF              reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    ID              reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    TYPE            reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    LEN             reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    BLINK           reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    DELAY           reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    FOR             reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    MAIN            reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    $end            reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    CALL            reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)
    END             reduce using rule 13 (assignment -> identifier COMMA identifier ASSIGN value COMMA value SEMICOLON .)


state 308

    (42) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction . RCORCH SEMICOLON opt_statement

    RCORCH          shift and go to state 317


state 309

    (115) i_ind -> COMMA . INT

    INT             shift and go to state 318


state 310

    (88) i_content -> list COMMA INT i_ind .

    RPARENT         reduce using rule 88 (i_content -> list COMMA INT i_ind .)


state 311

    (116) i_ind -> empty .

    RPARENT         reduce using rule 116 (i_ind -> empty .)


state 312

    (37) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 319


state 313

    (112) 3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL . indice PARENTCR
    (113) indice -> . INT
    (114) indice -> . ID

    INT             shift and go to state 147
    ID              shift and go to state 144

    indice                         shift and go to state 320

state 314

    (111) 3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .

    SEMICOLON       reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    DOT             reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    ASSIGN          reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    COMMA           reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    NE              reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LT              reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    GT              reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LTE             reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    GTE             reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    COMPARE         reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    STEP            reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LCORCH          reduce using rule 111 (3dmat_consult -> ID PARENTCL indice COMMA indice COMMA indice PARENTCR .)


state 315

    (81) b_content -> list_consult COMMA INT COMMA time_mes COMMA . value
    (129) value -> . FALSE
    (130) value -> . TRUE

    FALSE           shift and go to state 124
    TRUE            shift and go to state 125

    value                          shift and go to state 321

state 316

    (39) for -> FOR ID IN iterable step LCORCH instruction RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 322


state 317

    (42) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH . SEMICOLON opt_statement

    SEMICOLON       shift and go to state 323


state 318

    (115) i_ind -> COMMA INT .

    RPARENT         reduce using rule 115 (i_ind -> COMMA INT .)


state 319

    (37) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .

    PROCEDURE       reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    GLOBAL          reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    IF              reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    ID              reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    TYPE            reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    LEN             reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    BLINK           reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    DELAY           reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    FOR             reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    MAIN            reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    CALL            reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    END             reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    $end            reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    RCORCH          reduce using rule 37 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)


state 320

    (112) 3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice . PARENTCR

    PARENTCR        shift and go to state 324


state 321

    (81) b_content -> list_consult COMMA INT COMMA time_mes COMMA value .

    RPARENT         reduce using rule 81 (b_content -> list_consult COMMA INT COMMA time_mes COMMA value .)


state 322

    (39) for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .

    PROCEDURE       reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    GLOBAL          reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    IF              reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    ID              reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    TYPE            reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    LEN             reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    BLINK           reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    DELAY           reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    FOR             reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    MAIN            reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    CALL            reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    END             reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    $end            reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)
    RCORCH          reduce using rule 39 (for -> FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON .)


state 323

    (42) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON . opt_statement
    (43) opt_statement -> . ELSE LCORCH instruction RCORCH SEMICOLON
    (44) opt_statement -> . empty
    (144) empty -> .

    ELSE            shift and go to state 326
    PROCEDURE       reduce using rule 144 (empty -> .)
    GLOBAL          reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    TYPE            reduce using rule 144 (empty -> .)
    LEN             reduce using rule 144 (empty -> .)
    BLINK           reduce using rule 144 (empty -> .)
    DELAY           reduce using rule 144 (empty -> .)
    FOR             reduce using rule 144 (empty -> .)
    MAIN            reduce using rule 144 (empty -> .)
    CALL            reduce using rule 144 (empty -> .)
    END             reduce using rule 144 (empty -> .)
    $end            reduce using rule 144 (empty -> .)
    RCORCH          reduce using rule 144 (empty -> .)

    opt_statement                  shift and go to state 325
    empty                          shift and go to state 327

state 324

    (112) 3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .

    SEMICOLON       reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    DOT             reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    ASSIGN          reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    NE              reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    LT              reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    GT              reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    LTE             reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    GTE             reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    STEP            reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 112 (3dmat_consult -> ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR .)


state 325

    (42) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .

    PROCEDURE       reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    GLOBAL          reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    IF              reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    ID              reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    TYPE            reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    LEN             reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    BLINK           reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    DELAY           reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    FOR             reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    MAIN            reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    CALL            reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    END             reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    $end            reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)
    RCORCH          reduce using rule 42 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement .)


state 326

    (43) opt_statement -> ELSE . LCORCH instruction RCORCH SEMICOLON

    LCORCH          shift and go to state 328


state 327

    (44) opt_statement -> empty .

    PROCEDURE       reduce using rule 44 (opt_statement -> empty .)
    GLOBAL          reduce using rule 44 (opt_statement -> empty .)
    IF              reduce using rule 44 (opt_statement -> empty .)
    ID              reduce using rule 44 (opt_statement -> empty .)
    TYPE            reduce using rule 44 (opt_statement -> empty .)
    LEN             reduce using rule 44 (opt_statement -> empty .)
    BLINK           reduce using rule 44 (opt_statement -> empty .)
    DELAY           reduce using rule 44 (opt_statement -> empty .)
    FOR             reduce using rule 44 (opt_statement -> empty .)
    MAIN            reduce using rule 44 (opt_statement -> empty .)
    CALL            reduce using rule 44 (opt_statement -> empty .)
    END             reduce using rule 44 (opt_statement -> empty .)
    $end            reduce using rule 44 (opt_statement -> empty .)
    RCORCH          reduce using rule 44 (opt_statement -> empty .)


state 328

    (43) opt_statement -> ELSE LCORCH . instruction RCORCH SEMICOLON
    (7) instruction -> . function
    (8) instruction -> . consult SEMICOLON
    (9) instruction -> . cycle
    (10) instruction -> . statement
    (14) function -> . type
    (15) function -> . insert
    (16) function -> . del
    (17) function -> . len
    (18) function -> . neg
    (19) function -> . t_f
    (20) function -> . blink
    (21) function -> . delay
    (22) function -> . shape
    (23) function -> . delete
    (102) consult -> . list_consult
    (103) consult -> . mat_consult
    (104) consult -> . 3dmat_consult
    (38) cycle -> . for
    (42) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH instruction RCORCH SEMICOLON opt_statement
    (24) type -> . TYPE LPARENT ID RPARENT SEMICOLON
    (26) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (27) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON
    (28) len -> . LEN LPARENT ID RPARENT SEMICOLON
    (29) neg -> . consult DOT NEG SEMICOLON
    (30) t_f -> . consult DOT tf SEMICOLON
    (31) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (32) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (36) shape -> . ID DOT shape_arg SEMICOLON
    (37) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (105) list_consult -> . ID PARENTCL indice PARENTCR
    (106) list_consult -> . ID PARENTCL indice TP indice PARENTCR
    (107) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (108) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (109) mat_consult -> . ID PARENTCL TP PARENTCR PARENTCL indice PARENTCR
    (110) mat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (111) 3dmat_consult -> . ID PARENTCL indice COMMA indice COMMA indice PARENTCR
    (112) 3dmat_consult -> . ID PARENTCL indice PARENTCR PARENTCL indice PARENTCR PARENTCL indice PARENTCR
    (39) for -> . FOR ID IN iterable step LCORCH instruction RCORCH SEMICOLON

    IF              shift and go to state 66
    TYPE            shift and go to state 68
    ID              shift and go to state 80
    LEN             shift and go to state 69
    BLINK           shift and go to state 70
    DELAY           shift and go to state 71
    FOR             shift and go to state 72

    instruction                    shift and go to state 329
    function                       shift and go to state 45
    consult                        shift and go to state 78
    cycle                          shift and go to state 47
    statement                      shift and go to state 48
    type                           shift and go to state 52
    insert                         shift and go to state 53
    del                            shift and go to state 54
    len                            shift and go to state 55
    neg                            shift and go to state 56
    t_f                            shift and go to state 57
    blink                          shift and go to state 58
    delay                          shift and go to state 59
    shape                          shift and go to state 60
    delete                         shift and go to state 61
    list_consult                   shift and go to state 62
    mat_consult                    shift and go to state 63
    3dmat_consult                  shift and go to state 64
    for                            shift and go to state 65

state 329

    (43) opt_statement -> ELSE LCORCH instruction . RCORCH SEMICOLON

    RCORCH          shift and go to state 330


state 330

    (43) opt_statement -> ELSE LCORCH instruction RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 331


state 331

    (43) opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .

    PROCEDURE       reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    GLOBAL          reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    IF              reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    ID              reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    TYPE            reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    LEN             reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    BLINK           reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    DELAY           reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    FOR             reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    MAIN            reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    CALL            reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    END             reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    $end            reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)
    RCORCH          reduce using rule 43 (opt_statement -> ELSE LCORCH instruction RCORCH SEMICOLON .)

