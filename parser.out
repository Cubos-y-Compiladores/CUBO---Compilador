Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BLINK
    BOOKED
    CALL
    CONST
    DELAY
    ELSE
    FOR
    IF
    IN
    LCORCH
    LENGHTERROR
    MAIN
    PROCEDURE
    RCORCH
    SHAPEA
    SHAPEC
    SHAPEF
    STEP
    VARERROR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> const_block
Rule 2     const_block -> const const const const const block
Rule 3     block -> assignment
Rule 4     block -> function
Rule 5     block -> consult
Rule 6     assignment -> identifier ASSIGN content SEMICOLON block
Rule 7     assignment -> GLOBAL ID ASSIGN content SEMICOLON block
Rule 8     assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block
Rule 9     assignment -> empty
Rule 10    function -> type
Rule 11    function -> insert
Rule 12    function -> del
Rule 13    function -> len
Rule 14    function -> neg
Rule 15    function -> t
Rule 16    function -> f
Rule 17    type -> TYPE LPARENT ID RPARENT SEMICOLON block
Rule 18    content -> RANGE LPARENT INT COMMA value RPARENT
Rule 19    insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
Rule 20    del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
Rule 21    len -> LEN LPARENT ID RPARENT SEMICOLON block
Rule 22    neg -> complex_id DOT NEG SEMICOLON block
Rule 23    t -> complex_id DOT T SEMICOLON block
Rule 24    f -> complex_id DOT F SEMICOLON block
Rule 25    arithmetic -> term
Rule 26    arithmetic -> adding_operator term
Rule 27    arithmetic -> arithmetic adding_operator term
Rule 28    term -> factor
Rule 29    term -> term multiplying_operator factor
Rule 30    factor -> INT
Rule 31    factor -> ID
Rule 32    factor -> LPARENT arithmetic RPARENT
Rule 33    const -> TIMER ASSIGN INT SEMICOLON
Rule 34    const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON
Rule 35    const -> dimension ASSIGN INT SEMICOLON
Rule 36    const -> CUBO ASSIGN INT SEMICOLON
Rule 37    content -> value
Rule 38    content -> arithmetic
Rule 39    content -> PARENTCL list_term PARENTCR
Rule 40    list_term -> value COMMA list_term
Rule 41    list_term -> value
Rule 42    list_term -> <empty>
Rule 43    consult -> ID PARENTCL INT PARENTCR SEMICOLON block
Rule 44    consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON block
Rule 45    dimension -> DIMFILAS
Rule 46    dimension -> DIMCOLUMNAS
Rule 47    time_mes -> MIL
Rule 48    time_mes -> MIN
Rule 49    time_mes -> SEG
Rule 50    adding_operator -> PLUS
Rule 51    adding_operator -> MINUS
Rule 52    multiplying_operator -> TIMES
Rule 53    multiplying_operator -> EXP
Rule 54    multiplying_operator -> DIVIDE
Rule 55    multiplying_operator -> DIVENT
Rule 56    multiplying_operator -> MOD
Rule 57    value -> FALSE
Rule 58    value -> TRUE
Rule 59    relation -> ASSIGN
Rule 60    relation -> NE
Rule 61    relation -> LT
Rule 62    relation -> GT
Rule 63    relation -> LTE
Rule 64    relation -> GTE
Rule 65    identifier -> ID
Rule 66    identifier -> complex_id
Rule 67    complex_id -> ID PARENTCL INT PARENTCR
Rule 68    complex_id -> ID PARENTCL INT TP INT PARENTCR
Rule 69    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 6 7 8 33 34 35 36 59
BLINK                : 
BOOKED               : 
CALL                 : 
COMMA                : 8 8 18 19 40
CONST                : 
CUBO                 : 36
DELAY                : 
DELETE               : 20
DIMCOLUMNAS          : 46
DIMFILAS             : 45
DIVENT               : 55
DIVIDE               : 54
DOT                  : 19 20 22 23 24
ELSE                 : 
EXP                  : 53
F                    : 24
FALSE                : 57
FOR                  : 
GLOBAL               : 7
GT                   : 62
GTE                  : 64
ID                   : 7 8 8 17 19 20 21 31 43 44 65 67 68
IF                   : 
IN                   : 
INSERT               : 19
INT                  : 18 19 20 30 33 35 36 43 44 44 67 68 68
LCORCH               : 
LEN                  : 21
LENGHTERROR          : 
LPARENT              : 17 18 19 20 21 32
LT                   : 61
LTE                  : 63
MAIN                 : 
MIL                  : 47
MIN                  : 48
MINUS                : 51
MOD                  : 56
NE                   : 60
NEG                  : 22
PARENTCL             : 39 43 44 67 68
PARENTCR             : 39 43 44 67 68
PLUS                 : 50
PROCEDURE            : 
QUOTES               : 34 34
RANGE                : 18
RANGOTIMER           : 34
RCORCH               : 
RPARENT              : 17 18 19 20 21 32
SEG                  : 49
SEMICOLON            : 6 7 8 17 19 20 21 22 23 24 33 34 35 36 43 44
SHAPEA               : 
SHAPEC               : 
SHAPEF               : 
STEP                 : 
T                    : 23
TIMER                : 33
TIMES                : 52
TP                   : 44 68
TRUE                 : 58
TYPE                 : 17
VARERROR             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

adding_operator      : 26 27
arithmetic           : 27 32 38
assignment           : 3
block                : 2 6 7 8 17 19 20 21 22 23 24 43 44
complex_id           : 22 23 24 66
const                : 2 2 2 2 2
const_block          : 1
consult              : 5
content              : 6 7
del                  : 12
dimension            : 35
empty                : 9
f                    : 16
factor               : 28 29
function             : 4
identifier           : 6
insert               : 11
len                  : 13
list_term            : 39 40
multiplying_operator : 29
neg                  : 14
program              : 0
relation             : 
t                    : 15
term                 : 25 26 27 29
time_mes             : 34
type                 : 10
value                : 8 8 18 19 37 40 41

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . const_block
    (2) const_block -> . const const const const const block
    (33) const -> . TIMER ASSIGN INT SEMICOLON
    (34) const -> . RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON
    (35) const -> . dimension ASSIGN INT SEMICOLON
    (36) const -> . CUBO ASSIGN INT SEMICOLON
    (45) dimension -> . DIMFILAS
    (46) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    program                        shift and go to state 1
    const_block                    shift and go to state 2
    const                          shift and go to state 3
    dimension                      shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> const_block .

    $end            reduce using rule 1 (program -> const_block .)


state 3

    (2) const_block -> const . const const const const block
    (33) const -> . TIMER ASSIGN INT SEMICOLON
    (34) const -> . RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON
    (35) const -> . dimension ASSIGN INT SEMICOLON
    (36) const -> . CUBO ASSIGN INT SEMICOLON
    (45) dimension -> . DIMFILAS
    (46) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 10
    dimension                      shift and go to state 6

state 4

    (33) const -> TIMER . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 11


state 5

    (34) const -> RANGOTIMER . ASSIGN QUOTES time_mes QUOTES SEMICOLON

    ASSIGN          shift and go to state 12


state 6

    (35) const -> dimension . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 13


state 7

    (36) const -> CUBO . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 14


state 8

    (45) dimension -> DIMFILAS .

    ASSIGN          reduce using rule 45 (dimension -> DIMFILAS .)


state 9

    (46) dimension -> DIMCOLUMNAS .

    ASSIGN          reduce using rule 46 (dimension -> DIMCOLUMNAS .)


state 10

    (2) const_block -> const const . const const const block
    (33) const -> . TIMER ASSIGN INT SEMICOLON
    (34) const -> . RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON
    (35) const -> . dimension ASSIGN INT SEMICOLON
    (36) const -> . CUBO ASSIGN INT SEMICOLON
    (45) dimension -> . DIMFILAS
    (46) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 15
    dimension                      shift and go to state 6

state 11

    (33) const -> TIMER ASSIGN . INT SEMICOLON

    INT             shift and go to state 16


state 12

    (34) const -> RANGOTIMER ASSIGN . QUOTES time_mes QUOTES SEMICOLON

    QUOTES          shift and go to state 17


state 13

    (35) const -> dimension ASSIGN . INT SEMICOLON

    INT             shift and go to state 18


state 14

    (36) const -> CUBO ASSIGN . INT SEMICOLON

    INT             shift and go to state 19


state 15

    (2) const_block -> const const const . const const block
    (33) const -> . TIMER ASSIGN INT SEMICOLON
    (34) const -> . RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON
    (35) const -> . dimension ASSIGN INT SEMICOLON
    (36) const -> . CUBO ASSIGN INT SEMICOLON
    (45) dimension -> . DIMFILAS
    (46) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 20
    dimension                      shift and go to state 6

state 16

    (33) const -> TIMER ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 21


state 17

    (34) const -> RANGOTIMER ASSIGN QUOTES . time_mes QUOTES SEMICOLON
    (47) time_mes -> . MIL
    (48) time_mes -> . MIN
    (49) time_mes -> . SEG

    MIL             shift and go to state 23
    MIN             shift and go to state 24
    SEG             shift and go to state 25

    time_mes                       shift and go to state 22

state 18

    (35) const -> dimension ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 26


state 19

    (36) const -> CUBO ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 27


state 20

    (2) const_block -> const const const const . const block
    (33) const -> . TIMER ASSIGN INT SEMICOLON
    (34) const -> . RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON
    (35) const -> . dimension ASSIGN INT SEMICOLON
    (36) const -> . CUBO ASSIGN INT SEMICOLON
    (45) dimension -> . DIMFILAS
    (46) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 28
    dimension                      shift and go to state 6

state 21

    (33) const -> TIMER ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    ID              reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)
    $end            reduce using rule 33 (const -> TIMER ASSIGN INT SEMICOLON .)


state 22

    (34) const -> RANGOTIMER ASSIGN QUOTES time_mes . QUOTES SEMICOLON

    QUOTES          shift and go to state 29


state 23

    (47) time_mes -> MIL .

    QUOTES          reduce using rule 47 (time_mes -> MIL .)


state 24

    (48) time_mes -> MIN .

    QUOTES          reduce using rule 48 (time_mes -> MIN .)


state 25

    (49) time_mes -> SEG .

    QUOTES          reduce using rule 49 (time_mes -> SEG .)


state 26

    (35) const -> dimension ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    ID              reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)
    $end            reduce using rule 35 (const -> dimension ASSIGN INT SEMICOLON .)


state 27

    (36) const -> CUBO ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    ID              reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)
    $end            reduce using rule 36 (const -> CUBO ASSIGN INT SEMICOLON .)


state 28

    (2) const_block -> const const const const const . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 30
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 29

    (34) const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES . SEMICOLON

    SEMICOLON       shift and go to state 48


state 30

    (2) const_block -> const const const const const block .

    $end            reduce using rule 2 (const_block -> const const const const const block .)


state 31

    (3) block -> assignment .

    $end            reduce using rule 3 (block -> assignment .)


state 32

    (4) block -> function .

    $end            reduce using rule 4 (block -> function .)


state 33

    (5) block -> consult .

    $end            reduce using rule 5 (block -> consult .)


state 34

    (6) assignment -> identifier . ASSIGN content SEMICOLON block

    ASSIGN          shift and go to state 49


state 35

    (7) assignment -> GLOBAL . ID ASSIGN content SEMICOLON block

    ID              shift and go to state 50


state 36

    (8) assignment -> ID . COMMA ID ASSIGN value COMMA value SEMICOLON block
    (43) consult -> ID . PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> ID . PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> ID .
    (19) insert -> ID . DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> ID . DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (67) complex_id -> ID . PARENTCL INT PARENTCR
    (68) complex_id -> ID . PARENTCL INT TP INT PARENTCR

    COMMA           shift and go to state 51
    PARENTCL        shift and go to state 52
    ASSIGN          reduce using rule 65 (identifier -> ID .)
    DOT             shift and go to state 53


state 37

    (9) assignment -> empty .

    $end            reduce using rule 9 (assignment -> empty .)


state 38

    (10) function -> type .

    $end            reduce using rule 10 (function -> type .)


state 39

    (11) function -> insert .

    $end            reduce using rule 11 (function -> insert .)


state 40

    (12) function -> del .

    $end            reduce using rule 12 (function -> del .)


state 41

    (13) function -> len .

    $end            reduce using rule 13 (function -> len .)


state 42

    (14) function -> neg .

    $end            reduce using rule 14 (function -> neg .)


state 43

    (15) function -> t .

    $end            reduce using rule 15 (function -> t .)


state 44

    (16) function -> f .

    $end            reduce using rule 16 (function -> f .)


state 45

    (66) identifier -> complex_id .
    (22) neg -> complex_id . DOT NEG SEMICOLON block
    (23) t -> complex_id . DOT T SEMICOLON block
    (24) f -> complex_id . DOT F SEMICOLON block

    ASSIGN          reduce using rule 66 (identifier -> complex_id .)
    DOT             shift and go to state 54


state 46

    (17) type -> TYPE . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 55


state 47

    (21) len -> LEN . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 56


state 48

    (34) const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .

    TIMER           reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    RANGOTIMER      reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    CUBO            reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    DIMFILAS        reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    GLOBAL          reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    ID              reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    TYPE            reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    LEN             reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)
    $end            reduce using rule 34 (const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON .)


state 49

    (6) assignment -> identifier ASSIGN . content SEMICOLON block
    (18) content -> . RANGE LPARENT INT COMMA value RPARENT
    (37) content -> . value
    (38) content -> . arithmetic
    (39) content -> . PARENTCL list_term PARENTCR
    (57) value -> . FALSE
    (58) value -> . TRUE
    (25) arithmetic -> . term
    (26) arithmetic -> . adding_operator term
    (27) arithmetic -> . arithmetic adding_operator term
    (28) term -> . factor
    (29) term -> . term multiplying_operator factor
    (50) adding_operator -> . PLUS
    (51) adding_operator -> . MINUS
    (30) factor -> . INT
    (31) factor -> . ID
    (32) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 58
    PARENTCL        shift and go to state 63
    FALSE           shift and go to state 64
    TRUE            shift and go to state 65
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    INT             shift and go to state 60
    ID              shift and go to state 71
    LPARENT         shift and go to state 59

    content                        shift and go to state 57
    value                          shift and go to state 61
    arithmetic                     shift and go to state 62
    term                           shift and go to state 66
    adding_operator                shift and go to state 67
    factor                         shift and go to state 68

state 50

    (7) assignment -> GLOBAL ID . ASSIGN content SEMICOLON block

    ASSIGN          shift and go to state 72


state 51

    (8) assignment -> ID COMMA . ID ASSIGN value COMMA value SEMICOLON block

    ID              shift and go to state 73


state 52

    (43) consult -> ID PARENTCL . INT PARENTCR SEMICOLON block
    (44) consult -> ID PARENTCL . INT TP INT PARENTCR SEMICOLON block
    (67) complex_id -> ID PARENTCL . INT PARENTCR
    (68) complex_id -> ID PARENTCL . INT TP INT PARENTCR

    INT             shift and go to state 74


state 53

    (19) insert -> ID DOT . INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> ID DOT . DELETE LPARENT INT RPARENT SEMICOLON block

    INSERT          shift and go to state 75
    DELETE          shift and go to state 76


state 54

    (22) neg -> complex_id DOT . NEG SEMICOLON block
    (23) t -> complex_id DOT . T SEMICOLON block
    (24) f -> complex_id DOT . F SEMICOLON block

    NEG             shift and go to state 77
    T               shift and go to state 78
    F               shift and go to state 79


state 55

    (17) type -> TYPE LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 80


state 56

    (21) len -> LEN LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 81


state 57

    (6) assignment -> identifier ASSIGN content . SEMICOLON block

    SEMICOLON       shift and go to state 82


state 58

    (18) content -> RANGE . LPARENT INT COMMA value RPARENT

    LPARENT         shift and go to state 83


state 59

    (32) factor -> LPARENT . arithmetic RPARENT
    (25) arithmetic -> . term
    (26) arithmetic -> . adding_operator term
    (27) arithmetic -> . arithmetic adding_operator term
    (28) term -> . factor
    (29) term -> . term multiplying_operator factor
    (50) adding_operator -> . PLUS
    (51) adding_operator -> . MINUS
    (30) factor -> . INT
    (31) factor -> . ID
    (32) factor -> . LPARENT arithmetic RPARENT

    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    INT             shift and go to state 60
    ID              shift and go to state 71
    LPARENT         shift and go to state 59

    arithmetic                     shift and go to state 84
    term                           shift and go to state 66
    adding_operator                shift and go to state 67
    factor                         shift and go to state 68

state 60

    (30) factor -> INT .

    TIMES           reduce using rule 30 (factor -> INT .)
    EXP             reduce using rule 30 (factor -> INT .)
    DIVIDE          reduce using rule 30 (factor -> INT .)
    DIVENT          reduce using rule 30 (factor -> INT .)
    MOD             reduce using rule 30 (factor -> INT .)
    PLUS            reduce using rule 30 (factor -> INT .)
    MINUS           reduce using rule 30 (factor -> INT .)
    SEMICOLON       reduce using rule 30 (factor -> INT .)
    RPARENT         reduce using rule 30 (factor -> INT .)


state 61

    (37) content -> value .

    SEMICOLON       reduce using rule 37 (content -> value .)


state 62

    (38) content -> arithmetic .
    (27) arithmetic -> arithmetic . adding_operator term
    (50) adding_operator -> . PLUS
    (51) adding_operator -> . MINUS

    SEMICOLON       reduce using rule 38 (content -> arithmetic .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70

    adding_operator                shift and go to state 85

state 63

    (39) content -> PARENTCL . list_term PARENTCR
    (40) list_term -> . value COMMA list_term
    (41) list_term -> . value
    (42) list_term -> .
    (57) value -> . FALSE
    (58) value -> . TRUE

    PARENTCR        reduce using rule 42 (list_term -> .)
    FALSE           shift and go to state 64
    TRUE            shift and go to state 65

    list_term                      shift and go to state 86
    value                          shift and go to state 87

state 64

    (57) value -> FALSE .

    SEMICOLON       reduce using rule 57 (value -> FALSE .)
    COMMA           reduce using rule 57 (value -> FALSE .)
    PARENTCR        reduce using rule 57 (value -> FALSE .)
    RPARENT         reduce using rule 57 (value -> FALSE .)


state 65

    (58) value -> TRUE .

    SEMICOLON       reduce using rule 58 (value -> TRUE .)
    COMMA           reduce using rule 58 (value -> TRUE .)
    PARENTCR        reduce using rule 58 (value -> TRUE .)
    RPARENT         reduce using rule 58 (value -> TRUE .)


state 66

    (25) arithmetic -> term .
    (29) term -> term . multiplying_operator factor
    (52) multiplying_operator -> . TIMES
    (53) multiplying_operator -> . EXP
    (54) multiplying_operator -> . DIVIDE
    (55) multiplying_operator -> . DIVENT
    (56) multiplying_operator -> . MOD

    PLUS            reduce using rule 25 (arithmetic -> term .)
    MINUS           reduce using rule 25 (arithmetic -> term .)
    SEMICOLON       reduce using rule 25 (arithmetic -> term .)
    RPARENT         reduce using rule 25 (arithmetic -> term .)
    TIMES           shift and go to state 89
    EXP             shift and go to state 90
    DIVIDE          shift and go to state 91
    DIVENT          shift and go to state 92
    MOD             shift and go to state 93

    multiplying_operator           shift and go to state 88

state 67

    (26) arithmetic -> adding_operator . term
    (28) term -> . factor
    (29) term -> . term multiplying_operator factor
    (30) factor -> . INT
    (31) factor -> . ID
    (32) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 60
    ID              shift and go to state 71
    LPARENT         shift and go to state 59

    term                           shift and go to state 94
    factor                         shift and go to state 68

state 68

    (28) term -> factor .

    TIMES           reduce using rule 28 (term -> factor .)
    EXP             reduce using rule 28 (term -> factor .)
    DIVIDE          reduce using rule 28 (term -> factor .)
    DIVENT          reduce using rule 28 (term -> factor .)
    MOD             reduce using rule 28 (term -> factor .)
    PLUS            reduce using rule 28 (term -> factor .)
    MINUS           reduce using rule 28 (term -> factor .)
    SEMICOLON       reduce using rule 28 (term -> factor .)
    RPARENT         reduce using rule 28 (term -> factor .)


state 69

    (50) adding_operator -> PLUS .

    INT             reduce using rule 50 (adding_operator -> PLUS .)
    ID              reduce using rule 50 (adding_operator -> PLUS .)
    LPARENT         reduce using rule 50 (adding_operator -> PLUS .)


state 70

    (51) adding_operator -> MINUS .

    INT             reduce using rule 51 (adding_operator -> MINUS .)
    ID              reduce using rule 51 (adding_operator -> MINUS .)
    LPARENT         reduce using rule 51 (adding_operator -> MINUS .)


state 71

    (31) factor -> ID .

    TIMES           reduce using rule 31 (factor -> ID .)
    EXP             reduce using rule 31 (factor -> ID .)
    DIVIDE          reduce using rule 31 (factor -> ID .)
    DIVENT          reduce using rule 31 (factor -> ID .)
    MOD             reduce using rule 31 (factor -> ID .)
    PLUS            reduce using rule 31 (factor -> ID .)
    MINUS           reduce using rule 31 (factor -> ID .)
    SEMICOLON       reduce using rule 31 (factor -> ID .)
    RPARENT         reduce using rule 31 (factor -> ID .)


state 72

    (7) assignment -> GLOBAL ID ASSIGN . content SEMICOLON block
    (18) content -> . RANGE LPARENT INT COMMA value RPARENT
    (37) content -> . value
    (38) content -> . arithmetic
    (39) content -> . PARENTCL list_term PARENTCR
    (57) value -> . FALSE
    (58) value -> . TRUE
    (25) arithmetic -> . term
    (26) arithmetic -> . adding_operator term
    (27) arithmetic -> . arithmetic adding_operator term
    (28) term -> . factor
    (29) term -> . term multiplying_operator factor
    (50) adding_operator -> . PLUS
    (51) adding_operator -> . MINUS
    (30) factor -> . INT
    (31) factor -> . ID
    (32) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 58
    PARENTCL        shift and go to state 63
    FALSE           shift and go to state 64
    TRUE            shift and go to state 65
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    INT             shift and go to state 60
    ID              shift and go to state 71
    LPARENT         shift and go to state 59

    content                        shift and go to state 95
    value                          shift and go to state 61
    arithmetic                     shift and go to state 62
    term                           shift and go to state 66
    adding_operator                shift and go to state 67
    factor                         shift and go to state 68

state 73

    (8) assignment -> ID COMMA ID . ASSIGN value COMMA value SEMICOLON block

    ASSIGN          shift and go to state 96


state 74

    (43) consult -> ID PARENTCL INT . PARENTCR SEMICOLON block
    (44) consult -> ID PARENTCL INT . TP INT PARENTCR SEMICOLON block
    (67) complex_id -> ID PARENTCL INT . PARENTCR
    (68) complex_id -> ID PARENTCL INT . TP INT PARENTCR

    PARENTCR        shift and go to state 97
    TP              shift and go to state 98


state 75

    (19) insert -> ID DOT INSERT . LPARENT INT COMMA value RPARENT SEMICOLON block

    LPARENT         shift and go to state 99


state 76

    (20) del -> ID DOT DELETE . LPARENT INT RPARENT SEMICOLON block

    LPARENT         shift and go to state 100


state 77

    (22) neg -> complex_id DOT NEG . SEMICOLON block

    SEMICOLON       shift and go to state 101


state 78

    (23) t -> complex_id DOT T . SEMICOLON block

    SEMICOLON       shift and go to state 102


state 79

    (24) f -> complex_id DOT F . SEMICOLON block

    SEMICOLON       shift and go to state 103


state 80

    (17) type -> TYPE LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 104


state 81

    (21) len -> LEN LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 105


state 82

    (6) assignment -> identifier ASSIGN content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    identifier                     shift and go to state 34
    block                          shift and go to state 106
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 83

    (18) content -> RANGE LPARENT . INT COMMA value RPARENT

    INT             shift and go to state 107


state 84

    (32) factor -> LPARENT arithmetic . RPARENT
    (27) arithmetic -> arithmetic . adding_operator term
    (50) adding_operator -> . PLUS
    (51) adding_operator -> . MINUS

    RPARENT         shift and go to state 108
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70

    adding_operator                shift and go to state 85

state 85

    (27) arithmetic -> arithmetic adding_operator . term
    (28) term -> . factor
    (29) term -> . term multiplying_operator factor
    (30) factor -> . INT
    (31) factor -> . ID
    (32) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 60
    ID              shift and go to state 71
    LPARENT         shift and go to state 59

    term                           shift and go to state 109
    factor                         shift and go to state 68

state 86

    (39) content -> PARENTCL list_term . PARENTCR

    PARENTCR        shift and go to state 110


state 87

    (40) list_term -> value . COMMA list_term
    (41) list_term -> value .

    COMMA           shift and go to state 111
    PARENTCR        reduce using rule 41 (list_term -> value .)


state 88

    (29) term -> term multiplying_operator . factor
    (30) factor -> . INT
    (31) factor -> . ID
    (32) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 60
    ID              shift and go to state 71
    LPARENT         shift and go to state 59

    factor                         shift and go to state 112

state 89

    (52) multiplying_operator -> TIMES .

    INT             reduce using rule 52 (multiplying_operator -> TIMES .)
    ID              reduce using rule 52 (multiplying_operator -> TIMES .)
    LPARENT         reduce using rule 52 (multiplying_operator -> TIMES .)


state 90

    (53) multiplying_operator -> EXP .

    INT             reduce using rule 53 (multiplying_operator -> EXP .)
    ID              reduce using rule 53 (multiplying_operator -> EXP .)
    LPARENT         reduce using rule 53 (multiplying_operator -> EXP .)


state 91

    (54) multiplying_operator -> DIVIDE .

    INT             reduce using rule 54 (multiplying_operator -> DIVIDE .)
    ID              reduce using rule 54 (multiplying_operator -> DIVIDE .)
    LPARENT         reduce using rule 54 (multiplying_operator -> DIVIDE .)


state 92

    (55) multiplying_operator -> DIVENT .

    INT             reduce using rule 55 (multiplying_operator -> DIVENT .)
    ID              reduce using rule 55 (multiplying_operator -> DIVENT .)
    LPARENT         reduce using rule 55 (multiplying_operator -> DIVENT .)


state 93

    (56) multiplying_operator -> MOD .

    INT             reduce using rule 56 (multiplying_operator -> MOD .)
    ID              reduce using rule 56 (multiplying_operator -> MOD .)
    LPARENT         reduce using rule 56 (multiplying_operator -> MOD .)


state 94

    (26) arithmetic -> adding_operator term .
    (29) term -> term . multiplying_operator factor
    (52) multiplying_operator -> . TIMES
    (53) multiplying_operator -> . EXP
    (54) multiplying_operator -> . DIVIDE
    (55) multiplying_operator -> . DIVENT
    (56) multiplying_operator -> . MOD

    PLUS            reduce using rule 26 (arithmetic -> adding_operator term .)
    MINUS           reduce using rule 26 (arithmetic -> adding_operator term .)
    SEMICOLON       reduce using rule 26 (arithmetic -> adding_operator term .)
    RPARENT         reduce using rule 26 (arithmetic -> adding_operator term .)
    TIMES           shift and go to state 89
    EXP             shift and go to state 90
    DIVIDE          shift and go to state 91
    DIVENT          shift and go to state 92
    MOD             shift and go to state 93

    multiplying_operator           shift and go to state 88

state 95

    (7) assignment -> GLOBAL ID ASSIGN content . SEMICOLON block

    SEMICOLON       shift and go to state 113


state 96

    (8) assignment -> ID COMMA ID ASSIGN . value COMMA value SEMICOLON block
    (57) value -> . FALSE
    (58) value -> . TRUE

    FALSE           shift and go to state 64
    TRUE            shift and go to state 65

    value                          shift and go to state 114

state 97

    (43) consult -> ID PARENTCL INT PARENTCR . SEMICOLON block
    (67) complex_id -> ID PARENTCL INT PARENTCR .

    SEMICOLON       shift and go to state 115
    DOT             reduce using rule 67 (complex_id -> ID PARENTCL INT PARENTCR .)
    ASSIGN          reduce using rule 67 (complex_id -> ID PARENTCL INT PARENTCR .)


state 98

    (44) consult -> ID PARENTCL INT TP . INT PARENTCR SEMICOLON block
    (68) complex_id -> ID PARENTCL INT TP . INT PARENTCR

    INT             shift and go to state 116


state 99

    (19) insert -> ID DOT INSERT LPARENT . INT COMMA value RPARENT SEMICOLON block

    INT             shift and go to state 117


state 100

    (20) del -> ID DOT DELETE LPARENT . INT RPARENT SEMICOLON block

    INT             shift and go to state 118


state 101

    (22) neg -> complex_id DOT NEG SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    complex_id                     shift and go to state 45
    block                          shift and go to state 119
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44

state 102

    (23) t -> complex_id DOT T SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    complex_id                     shift and go to state 45
    block                          shift and go to state 120
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44

state 103

    (24) f -> complex_id DOT F SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    complex_id                     shift and go to state 45
    block                          shift and go to state 121
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44

state 104

    (17) type -> TYPE LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 122


state 105

    (21) len -> LEN LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 123


state 106

    (6) assignment -> identifier ASSIGN content SEMICOLON block .

    $end            reduce using rule 6 (assignment -> identifier ASSIGN content SEMICOLON block .)


state 107

    (18) content -> RANGE LPARENT INT . COMMA value RPARENT

    COMMA           shift and go to state 124


state 108

    (32) factor -> LPARENT arithmetic RPARENT .

    TIMES           reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    EXP             reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    DIVIDE          reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    DIVENT          reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    MOD             reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    PLUS            reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    MINUS           reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    SEMICOLON       reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)
    RPARENT         reduce using rule 32 (factor -> LPARENT arithmetic RPARENT .)


state 109

    (27) arithmetic -> arithmetic adding_operator term .
    (29) term -> term . multiplying_operator factor
    (52) multiplying_operator -> . TIMES
    (53) multiplying_operator -> . EXP
    (54) multiplying_operator -> . DIVIDE
    (55) multiplying_operator -> . DIVENT
    (56) multiplying_operator -> . MOD

    PLUS            reduce using rule 27 (arithmetic -> arithmetic adding_operator term .)
    MINUS           reduce using rule 27 (arithmetic -> arithmetic adding_operator term .)
    SEMICOLON       reduce using rule 27 (arithmetic -> arithmetic adding_operator term .)
    RPARENT         reduce using rule 27 (arithmetic -> arithmetic adding_operator term .)
    TIMES           shift and go to state 89
    EXP             shift and go to state 90
    DIVIDE          shift and go to state 91
    DIVENT          shift and go to state 92
    MOD             shift and go to state 93

    multiplying_operator           shift and go to state 88

state 110

    (39) content -> PARENTCL list_term PARENTCR .

    SEMICOLON       reduce using rule 39 (content -> PARENTCL list_term PARENTCR .)


state 111

    (40) list_term -> value COMMA . list_term
    (40) list_term -> . value COMMA list_term
    (41) list_term -> . value
    (42) list_term -> .
    (57) value -> . FALSE
    (58) value -> . TRUE

    PARENTCR        reduce using rule 42 (list_term -> .)
    FALSE           shift and go to state 64
    TRUE            shift and go to state 65

    value                          shift and go to state 87
    list_term                      shift and go to state 125

state 112

    (29) term -> term multiplying_operator factor .

    TIMES           reduce using rule 29 (term -> term multiplying_operator factor .)
    EXP             reduce using rule 29 (term -> term multiplying_operator factor .)
    DIVIDE          reduce using rule 29 (term -> term multiplying_operator factor .)
    DIVENT          reduce using rule 29 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 29 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 29 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 29 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 29 (term -> term multiplying_operator factor .)
    RPARENT         reduce using rule 29 (term -> term multiplying_operator factor .)


state 113

    (7) assignment -> GLOBAL ID ASSIGN content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 126
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 114

    (8) assignment -> ID COMMA ID ASSIGN value . COMMA value SEMICOLON block

    COMMA           shift and go to state 127


state 115

    (43) consult -> ID PARENTCL INT PARENTCR SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 128
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 116

    (44) consult -> ID PARENTCL INT TP INT . PARENTCR SEMICOLON block
    (68) complex_id -> ID PARENTCL INT TP INT . PARENTCR

    PARENTCR        shift and go to state 129


state 117

    (19) insert -> ID DOT INSERT LPARENT INT . COMMA value RPARENT SEMICOLON block

    COMMA           shift and go to state 130


state 118

    (20) del -> ID DOT DELETE LPARENT INT . RPARENT SEMICOLON block

    RPARENT         shift and go to state 131


state 119

    (22) neg -> complex_id DOT NEG SEMICOLON block .

    $end            reduce using rule 22 (neg -> complex_id DOT NEG SEMICOLON block .)


state 120

    (23) t -> complex_id DOT T SEMICOLON block .

    $end            reduce using rule 23 (t -> complex_id DOT T SEMICOLON block .)


state 121

    (24) f -> complex_id DOT F SEMICOLON block .

    $end            reduce using rule 24 (f -> complex_id DOT F SEMICOLON block .)


state 122

    (17) type -> TYPE LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 132
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 123

    (21) len -> LEN LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 133
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 124

    (18) content -> RANGE LPARENT INT COMMA . value RPARENT
    (57) value -> . FALSE
    (58) value -> . TRUE

    FALSE           shift and go to state 64
    TRUE            shift and go to state 65

    value                          shift and go to state 134

state 125

    (40) list_term -> value COMMA list_term .

    PARENTCR        reduce using rule 40 (list_term -> value COMMA list_term .)


state 126

    (7) assignment -> GLOBAL ID ASSIGN content SEMICOLON block .

    $end            reduce using rule 7 (assignment -> GLOBAL ID ASSIGN content SEMICOLON block .)


state 127

    (8) assignment -> ID COMMA ID ASSIGN value COMMA . value SEMICOLON block
    (57) value -> . FALSE
    (58) value -> . TRUE

    FALSE           shift and go to state 64
    TRUE            shift and go to state 65

    value                          shift and go to state 135

state 128

    (43) consult -> ID PARENTCL INT PARENTCR SEMICOLON block .

    $end            reduce using rule 43 (consult -> ID PARENTCL INT PARENTCR SEMICOLON block .)


state 129

    (44) consult -> ID PARENTCL INT TP INT PARENTCR . SEMICOLON block
    (68) complex_id -> ID PARENTCL INT TP INT PARENTCR .

    SEMICOLON       shift and go to state 136
    DOT             reduce using rule 68 (complex_id -> ID PARENTCL INT TP INT PARENTCR .)
    ASSIGN          reduce using rule 68 (complex_id -> ID PARENTCL INT TP INT PARENTCR .)


state 130

    (19) insert -> ID DOT INSERT LPARENT INT COMMA . value RPARENT SEMICOLON block
    (57) value -> . FALSE
    (58) value -> . TRUE

    FALSE           shift and go to state 64
    TRUE            shift and go to state 65

    value                          shift and go to state 137

state 131

    (20) del -> ID DOT DELETE LPARENT INT RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 138


state 132

    (17) type -> TYPE LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 17 (type -> TYPE LPARENT ID RPARENT SEMICOLON block .)


state 133

    (21) len -> LEN LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 21 (len -> LEN LPARENT ID RPARENT SEMICOLON block .)


state 134

    (18) content -> RANGE LPARENT INT COMMA value . RPARENT

    RPARENT         shift and go to state 139


state 135

    (8) assignment -> ID COMMA ID ASSIGN value COMMA value . SEMICOLON block

    SEMICOLON       shift and go to state 140


state 136

    (44) consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 141
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 137

    (19) insert -> ID DOT INSERT LPARENT INT COMMA value . RPARENT SEMICOLON block

    RPARENT         shift and go to state 142


state 138

    (20) del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 143
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 139

    (18) content -> RANGE LPARENT INT COMMA value RPARENT .

    SEMICOLON       reduce using rule 18 (content -> RANGE LPARENT INT COMMA value RPARENT .)


state 140

    (8) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 144
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 141

    (44) consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON block .

    $end            reduce using rule 44 (consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON block .)


state 142

    (19) insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 145


state 143

    (20) del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON block .

    $end            reduce using rule 20 (del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON block .)


state 144

    (8) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .

    $end            reduce using rule 8 (assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .)


state 145

    (19) insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult
    (6) assignment -> . identifier ASSIGN content SEMICOLON block
    (7) assignment -> . GLOBAL ID ASSIGN content SEMICOLON block
    (8) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (9) assignment -> . empty
    (10) function -> . type
    (11) function -> . insert
    (12) function -> . del
    (13) function -> . len
    (14) function -> . neg
    (15) function -> . t
    (16) function -> . f
    (43) consult -> . ID PARENTCL INT PARENTCR SEMICOLON block
    (44) consult -> . ID PARENTCL INT TP INT PARENTCR SEMICOLON block
    (65) identifier -> . ID
    (66) identifier -> . complex_id
    (69) empty -> .
    (17) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (19) insert -> . ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block
    (20) del -> . ID DOT DELETE LPARENT INT RPARENT SEMICOLON block
    (21) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (22) neg -> . complex_id DOT NEG SEMICOLON block
    (23) t -> . complex_id DOT T SEMICOLON block
    (24) f -> . complex_id DOT F SEMICOLON block
    (67) complex_id -> . ID PARENTCL INT PARENTCR
    (68) complex_id -> . ID PARENTCL INT TP INT PARENTCR

    GLOBAL          shift and go to state 35
    ID              shift and go to state 36
    $end            reduce using rule 69 (empty -> .)
    TYPE            shift and go to state 46
    LEN             shift and go to state 47

    block                          shift and go to state 146
    assignment                     shift and go to state 31
    function                       shift and go to state 32
    consult                        shift and go to state 33
    identifier                     shift and go to state 34
    empty                          shift and go to state 37
    type                           shift and go to state 38
    insert                         shift and go to state 39
    del                            shift and go to state 40
    len                            shift and go to state 41
    neg                            shift and go to state 42
    t                              shift and go to state 43
    f                              shift and go to state 44
    complex_id                     shift and go to state 45

state 146

    (19) insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block .

    $end            reduce using rule 19 (insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block .)

