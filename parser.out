Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOKED
    CALL
    CONST
    ELSE
    IF
    LENGHTERROR
    MAIN
    PROCEDURE
    SHAPEA
    VARERROR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> const_block
Rule 2     const_block -> const const const const const block
Rule 3     block -> assignment
Rule 4     block -> function
Rule 5     block -> consult SEMICOLON block
Rule 6     block -> cycle
Rule 7     assignment -> identifier ASSIGN a_content SEMICOLON block
Rule 8     assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block
Rule 9     assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block
Rule 10    assignment -> empty
Rule 11    function -> type
Rule 12    function -> insert
Rule 13    function -> del
Rule 14    function -> len
Rule 15    function -> neg
Rule 16    function -> t_f
Rule 17    function -> blink
Rule 18    function -> delay
Rule 19    function -> shape
Rule 20    function -> delete
Rule 21    type -> TYPE LPARENT ID RPARENT SEMICOLON block
Rule 22    a_content -> RANGE LPARENT INT COMMA value RPARENT
Rule 23    insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
Rule 24    del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block
Rule 25    len -> LEN LPARENT ID RPARENT SEMICOLON block
Rule 26    neg -> consult DOT NEG SEMICOLON block
Rule 27    t_f -> consult DOT tf SEMICOLON block
Rule 28    blink -> BLINK LPARENT b_content RPARENT SEMICOLON block
Rule 29    delay -> DELAY LPARENT d_content RPARENT SEMICOLON block
Rule 30    shape_arg -> SHAPEF
Rule 31    shape_arg -> SHAPEC
Rule 32    shape -> ID DOT shape_arg SEMICOLON block
Rule 33    delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
Rule 34    cycle -> for
Rule 35    for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
Rule 36    step -> STEP INT
Rule 37    step -> empty
Rule 38    arithmetic -> term
Rule 39    arithmetic -> adding_operator term
Rule 40    arithmetic -> arithmetic adding_operator term
Rule 41    term -> factor
Rule 42    term -> term multiplying_operator factor
Rule 43    factor -> INT
Rule 44    factor -> ID
Rule 45    factor -> LPARENT arithmetic RPARENT
Rule 46    const -> TIMER ASSIGN INT SEMICOLON
Rule 47    const -> RANGOTIMER ASSIGN time_mes SEMICOLON
Rule 48    const -> dimension ASSIGN INT SEMICOLON
Rule 49    const -> CUBO ASSIGN INT SEMICOLON
Rule 50    a_content -> value
Rule 51    a_content -> arithmetic
Rule 52    a_content -> list
Rule 53    a_content -> consult
Rule 54    b_content -> complex_id COMMA INT COMMA time_mes COMMA value
Rule 55    b_content -> complex_id COMMA value
Rule 56    d_content -> empty
Rule 57    d_content -> INT COMMA time_mes
Rule 58    tf -> T
Rule 59    tf -> F
Rule 60    i_content -> INT COMMA value
Rule 61    i_content -> list COMMA INT i_ind
Rule 62    list -> PARENTCL list_term PARENTCR
Rule 63    list -> PARENTCL empty PARENTCR
Rule 64    list_term -> list_value COMMA list_term
Rule 65    list_term -> list_value
Rule 66    list_value -> value
Rule 67    list_value -> list
Rule 68    consult -> list_consult
Rule 69    consult -> mat_consult
Rule 70    list_consult -> complex_id
Rule 71    mat_consult -> ID PARENTCL indice COMMA indice PARENTCR
Rule 72    mat_consult -> ID PARENTCL TP COMMA indice PARENTCR
Rule 73    indice -> INT
Rule 74    indice -> ID
Rule 75    i_ind -> COMMA INT
Rule 76    i_ind -> empty
Rule 77    dimension -> DIMFILAS
Rule 78    dimension -> DIMCOLUMNAS
Rule 79    time_mes -> QUOTES MIL QUOTES
Rule 80    time_mes -> QUOTES MIN QUOTES
Rule 81    time_mes -> QUOTES SEG QUOTES
Rule 82    adding_operator -> PLUS
Rule 83    adding_operator -> MINUS
Rule 84    multiplying_operator -> TIMES
Rule 85    multiplying_operator -> EXP
Rule 86    multiplying_operator -> DIVIDE
Rule 87    multiplying_operator -> DIVENT
Rule 88    multiplying_operator -> MOD
Rule 89    value -> FALSE
Rule 90    value -> TRUE
Rule 91    relation -> ASSIGN
Rule 92    relation -> NE
Rule 93    relation -> LT
Rule 94    relation -> GT
Rule 95    relation -> LTE
Rule 96    relation -> GTE
Rule 97    identifier -> ID
Rule 98    identifier -> consult
Rule 99    complex_id -> ID PARENTCL indice PARENTCR
Rule 100   complex_id -> ID PARENTCL indice TP indice PARENTCR
Rule 101   iterable -> identifier
Rule 102   iterable -> INT
Rule 103   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 7 8 9 46 47 48 49 91
BLINK                : 28
BOOKED               : 
CALL                 : 
COMMA                : 9 9 22 33 54 54 54 55 57 60 61 64 71 72 75
CONST                : 
CUBO                 : 49
DEL                  : 24
DELAY                : 29
DELETE               : 33
DIMCOLUMNAS          : 78
DIMFILAS             : 77
DIVENT               : 87
DIVIDE               : 86
DOT                  : 23 24 26 27 32 33
ELSE                 : 
EXP                  : 85
F                    : 59
FALSE                : 89
FOR                  : 35
GLOBAL               : 8
GT                   : 94
GTE                  : 96
ID                   : 8 9 9 21 23 24 25 32 33 35 44 71 72 74 97 99 100
IF                   : 
IN                   : 35
INSERT               : 23
INT                  : 22 24 33 36 43 46 48 49 54 57 60 61 73 75 102
LCORCH               : 35
LEN                  : 25
LENGHTERROR          : 
LPARENT              : 21 22 23 24 25 28 29 33 45
LT                   : 93
LTE                  : 95
MAIN                 : 
MIL                  : 79
MIN                  : 80
MINUS                : 83
MOD                  : 88
NE                   : 92
NEG                  : 26
PARENTCL             : 62 63 71 72 99 100
PARENTCR             : 62 63 71 72 99 100
PLUS                 : 82
PROCEDURE            : 
QUOTES               : 79 79 80 80 81 81
RANGE                : 22
RANGOTIMER           : 47
RCORCH               : 35
RPARENT              : 21 22 23 24 25 28 29 33 45
SEG                  : 81
SEMICOLON            : 5 7 8 9 21 23 24 25 26 27 28 29 32 33 35 46 47 48 49
SHAPEA               : 
SHAPEC               : 31
SHAPEF               : 30
STEP                 : 36
T                    : 58
TIMER                : 46
TIMES                : 84
TP                   : 72 100
TRUE                 : 90
TYPE                 : 21
VARERROR             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

a_content            : 7 8
adding_operator      : 39 40
arithmetic           : 40 45 51
assignment           : 3
b_content            : 28
blink                : 17
block                : 2 5 7 8 9 21 23 24 25 26 27 28 29 32 33 35 35
complex_id           : 54 55 70
const                : 2 2 2 2 2
const_block          : 1
consult              : 5 26 27 53 98
cycle                : 6
d_content            : 29
del                  : 13
delay                : 18
delete               : 20
dimension            : 48
empty                : 10 37 56 63 76
factor               : 41 42
for                  : 34
function             : 4
i_content            : 23
i_ind                : 61
identifier           : 7 101
indice               : 33 71 71 72 99 100 100
insert               : 12
iterable             : 35
len                  : 14
list                 : 52 61 67
list_consult         : 68
list_term            : 62 64
list_value           : 64 65
mat_consult          : 69
multiplying_operator : 42
neg                  : 15
program              : 0
relation             : 
shape                : 19
shape_arg            : 32
step                 : 35
t_f                  : 16
term                 : 38 39 40 42
tf                   : 27
time_mes             : 47 54 57
type                 : 11
value                : 9 9 22 50 54 55 60 66

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . const_block
    (2) const_block -> . const const const const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (77) dimension -> . DIMFILAS
    (78) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    program                        shift and go to state 1
    const_block                    shift and go to state 2
    const                          shift and go to state 3
    dimension                      shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> const_block .

    $end            reduce using rule 1 (program -> const_block .)


state 3

    (2) const_block -> const . const const const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (77) dimension -> . DIMFILAS
    (78) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 10
    dimension                      shift and go to state 6

state 4

    (46) const -> TIMER . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 11


state 5

    (47) const -> RANGOTIMER . ASSIGN time_mes SEMICOLON

    ASSIGN          shift and go to state 12


state 6

    (48) const -> dimension . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 13


state 7

    (49) const -> CUBO . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 14


state 8

    (77) dimension -> DIMFILAS .

    ASSIGN          reduce using rule 77 (dimension -> DIMFILAS .)


state 9

    (78) dimension -> DIMCOLUMNAS .

    ASSIGN          reduce using rule 78 (dimension -> DIMCOLUMNAS .)


state 10

    (2) const_block -> const const . const const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (77) dimension -> . DIMFILAS
    (78) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 15
    dimension                      shift and go to state 6

state 11

    (46) const -> TIMER ASSIGN . INT SEMICOLON

    INT             shift and go to state 16


state 12

    (47) const -> RANGOTIMER ASSIGN . time_mes SEMICOLON
    (79) time_mes -> . QUOTES MIL QUOTES
    (80) time_mes -> . QUOTES MIN QUOTES
    (81) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 17

state 13

    (48) const -> dimension ASSIGN . INT SEMICOLON

    INT             shift and go to state 19


state 14

    (49) const -> CUBO ASSIGN . INT SEMICOLON

    INT             shift and go to state 20


state 15

    (2) const_block -> const const const . const const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (77) dimension -> . DIMFILAS
    (78) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 21
    dimension                      shift and go to state 6

state 16

    (46) const -> TIMER ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 22


state 17

    (47) const -> RANGOTIMER ASSIGN time_mes . SEMICOLON

    SEMICOLON       shift and go to state 23


state 18

    (79) time_mes -> QUOTES . MIL QUOTES
    (80) time_mes -> QUOTES . MIN QUOTES
    (81) time_mes -> QUOTES . SEG QUOTES

    MIL             shift and go to state 24
    MIN             shift and go to state 25
    SEG             shift and go to state 26


state 19

    (48) const -> dimension ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 27


state 20

    (49) const -> CUBO ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 28


state 21

    (2) const_block -> const const const const . const block
    (46) const -> . TIMER ASSIGN INT SEMICOLON
    (47) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (48) const -> . dimension ASSIGN INT SEMICOLON
    (49) const -> . CUBO ASSIGN INT SEMICOLON
    (77) dimension -> . DIMFILAS
    (78) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 29
    dimension                      shift and go to state 6

state 22

    (46) const -> TIMER ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    ID              reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)
    $end            reduce using rule 46 (const -> TIMER ASSIGN INT SEMICOLON .)


state 23

    (47) const -> RANGOTIMER ASSIGN time_mes SEMICOLON .

    TIMER           reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    RANGOTIMER      reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    CUBO            reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMFILAS        reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    GLOBAL          reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    ID              reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    TYPE            reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    LEN             reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    BLINK           reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DELAY           reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    FOR             reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    $end            reduce using rule 47 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)


state 24

    (79) time_mes -> QUOTES MIL . QUOTES

    QUOTES          shift and go to state 30


state 25

    (80) time_mes -> QUOTES MIN . QUOTES

    QUOTES          shift and go to state 31


state 26

    (81) time_mes -> QUOTES SEG . QUOTES

    QUOTES          shift and go to state 32


state 27

    (48) const -> dimension ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    ID              reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)
    $end            reduce using rule 48 (const -> dimension ASSIGN INT SEMICOLON .)


state 28

    (49) const -> CUBO ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    GLOBAL          reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    ID              reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    TYPE            reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    LEN             reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    BLINK           reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    DELAY           reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    FOR             reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)
    $end            reduce using rule 49 (const -> CUBO ASSIGN INT SEMICOLON .)


state 29

    (2) const_block -> const const const const const . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 33
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 30

    (79) time_mes -> QUOTES MIL QUOTES .

    SEMICOLON       reduce using rule 79 (time_mes -> QUOTES MIL QUOTES .)
    RPARENT         reduce using rule 79 (time_mes -> QUOTES MIL QUOTES .)
    COMMA           reduce using rule 79 (time_mes -> QUOTES MIL QUOTES .)


state 31

    (80) time_mes -> QUOTES MIN QUOTES .

    SEMICOLON       reduce using rule 80 (time_mes -> QUOTES MIN QUOTES .)
    RPARENT         reduce using rule 80 (time_mes -> QUOTES MIN QUOTES .)
    COMMA           reduce using rule 80 (time_mes -> QUOTES MIN QUOTES .)


state 32

    (81) time_mes -> QUOTES SEG QUOTES .

    SEMICOLON       reduce using rule 81 (time_mes -> QUOTES SEG QUOTES .)
    RPARENT         reduce using rule 81 (time_mes -> QUOTES SEG QUOTES .)
    COMMA           reduce using rule 81 (time_mes -> QUOTES SEG QUOTES .)


state 33

    (2) const_block -> const const const const const block .

    $end            reduce using rule 2 (const_block -> const const const const const block .)


state 34

    (3) block -> assignment .

    $end            reduce using rule 3 (block -> assignment .)
    RCORCH          reduce using rule 3 (block -> assignment .)


state 35

    (4) block -> function .

    $end            reduce using rule 4 (block -> function .)
    RCORCH          reduce using rule 4 (block -> function .)


state 36

    (5) block -> consult . SEMICOLON block
    (98) identifier -> consult .
    (26) neg -> consult . DOT NEG SEMICOLON block
    (27) t_f -> consult . DOT tf SEMICOLON block

    SEMICOLON       shift and go to state 61
    ASSIGN          reduce using rule 98 (identifier -> consult .)
    DOT             shift and go to state 62


state 37

    (6) block -> cycle .

    $end            reduce using rule 6 (block -> cycle .)
    RCORCH          reduce using rule 6 (block -> cycle .)


state 38

    (7) assignment -> identifier . ASSIGN a_content SEMICOLON block

    ASSIGN          shift and go to state 63


state 39

    (8) assignment -> GLOBAL . ID ASSIGN a_content SEMICOLON block

    ID              shift and go to state 64


state 40

    (9) assignment -> ID . COMMA ID ASSIGN value COMMA value SEMICOLON block
    (97) identifier -> ID .
    (23) insert -> ID . DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> ID . DOT DEL LPARENT INT RPARENT SEMICOLON block
    (32) shape -> ID . DOT shape_arg SEMICOLON block
    (33) delete -> ID . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (71) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (99) complex_id -> ID . PARENTCL indice PARENTCR
    (100) complex_id -> ID . PARENTCL indice TP indice PARENTCR

    COMMA           shift and go to state 65
    ASSIGN          reduce using rule 97 (identifier -> ID .)
    DOT             shift and go to state 66
    PARENTCL        shift and go to state 67


state 41

    (10) assignment -> empty .

    $end            reduce using rule 10 (assignment -> empty .)
    RCORCH          reduce using rule 10 (assignment -> empty .)


state 42

    (11) function -> type .

    $end            reduce using rule 11 (function -> type .)
    RCORCH          reduce using rule 11 (function -> type .)


state 43

    (12) function -> insert .

    $end            reduce using rule 12 (function -> insert .)
    RCORCH          reduce using rule 12 (function -> insert .)


state 44

    (13) function -> del .

    $end            reduce using rule 13 (function -> del .)
    RCORCH          reduce using rule 13 (function -> del .)


state 45

    (14) function -> len .

    $end            reduce using rule 14 (function -> len .)
    RCORCH          reduce using rule 14 (function -> len .)


state 46

    (15) function -> neg .

    $end            reduce using rule 15 (function -> neg .)
    RCORCH          reduce using rule 15 (function -> neg .)


state 47

    (16) function -> t_f .

    $end            reduce using rule 16 (function -> t_f .)
    RCORCH          reduce using rule 16 (function -> t_f .)


state 48

    (17) function -> blink .

    $end            reduce using rule 17 (function -> blink .)
    RCORCH          reduce using rule 17 (function -> blink .)


state 49

    (18) function -> delay .

    $end            reduce using rule 18 (function -> delay .)
    RCORCH          reduce using rule 18 (function -> delay .)


state 50

    (19) function -> shape .

    $end            reduce using rule 19 (function -> shape .)
    RCORCH          reduce using rule 19 (function -> shape .)


state 51

    (20) function -> delete .

    $end            reduce using rule 20 (function -> delete .)
    RCORCH          reduce using rule 20 (function -> delete .)


state 52

    (68) consult -> list_consult .

    SEMICOLON       reduce using rule 68 (consult -> list_consult .)
    DOT             reduce using rule 68 (consult -> list_consult .)
    ASSIGN          reduce using rule 68 (consult -> list_consult .)
    STEP            reduce using rule 68 (consult -> list_consult .)
    LCORCH          reduce using rule 68 (consult -> list_consult .)


state 53

    (69) consult -> mat_consult .

    SEMICOLON       reduce using rule 69 (consult -> mat_consult .)
    DOT             reduce using rule 69 (consult -> mat_consult .)
    ASSIGN          reduce using rule 69 (consult -> mat_consult .)
    STEP            reduce using rule 69 (consult -> mat_consult .)
    LCORCH          reduce using rule 69 (consult -> mat_consult .)


state 54

    (34) cycle -> for .

    $end            reduce using rule 34 (cycle -> for .)
    RCORCH          reduce using rule 34 (cycle -> for .)


state 55

    (21) type -> TYPE . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 68


state 56

    (25) len -> LEN . LPARENT ID RPARENT SEMICOLON block

    LPARENT         shift and go to state 69


state 57

    (28) blink -> BLINK . LPARENT b_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 70


state 58

    (29) delay -> DELAY . LPARENT d_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 71


state 59

    (70) list_consult -> complex_id .

    SEMICOLON       reduce using rule 70 (list_consult -> complex_id .)
    DOT             reduce using rule 70 (list_consult -> complex_id .)
    ASSIGN          reduce using rule 70 (list_consult -> complex_id .)
    STEP            reduce using rule 70 (list_consult -> complex_id .)
    LCORCH          reduce using rule 70 (list_consult -> complex_id .)


state 60

    (35) for -> FOR . ID IN iterable step LCORCH block RCORCH SEMICOLON block

    ID              shift and go to state 72


state 61

    (5) block -> consult SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    consult                        shift and go to state 36
    block                          shift and go to state 73
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 62

    (26) neg -> consult DOT . NEG SEMICOLON block
    (27) t_f -> consult DOT . tf SEMICOLON block
    (58) tf -> . T
    (59) tf -> . F

    NEG             shift and go to state 74
    T               shift and go to state 76
    F               shift and go to state 77

    tf                             shift and go to state 75

state 63

    (7) assignment -> identifier ASSIGN . a_content SEMICOLON block
    (22) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (50) a_content -> . value
    (51) a_content -> . arithmetic
    (52) a_content -> . list
    (53) a_content -> . consult
    (89) value -> . FALSE
    (90) value -> . TRUE
    (38) arithmetic -> . term
    (39) arithmetic -> . adding_operator term
    (40) arithmetic -> . arithmetic adding_operator term
    (62) list -> . PARENTCL list_term PARENTCR
    (63) list -> . PARENTCL empty PARENTCR
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (82) adding_operator -> . PLUS
    (83) adding_operator -> . MINUS
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    RANGE           shift and go to state 79
    FALSE           shift and go to state 86
    TRUE            shift and go to state 87
    PARENTCL        shift and go to state 90
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    ID              shift and go to state 94
    INT             shift and go to state 81
    LPARENT         shift and go to state 80

    a_content                      shift and go to state 78
    value                          shift and go to state 82
    arithmetic                     shift and go to state 83
    list                           shift and go to state 84
    consult                        shift and go to state 85
    term                           shift and go to state 88
    adding_operator                shift and go to state 89
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    factor                         shift and go to state 91
    complex_id                     shift and go to state 59

state 64

    (8) assignment -> GLOBAL ID . ASSIGN a_content SEMICOLON block

    ASSIGN          shift and go to state 95


state 65

    (9) assignment -> ID COMMA . ID ASSIGN value COMMA value SEMICOLON block

    ID              shift and go to state 96


state 66

    (23) insert -> ID DOT . INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> ID DOT . DEL LPARENT INT RPARENT SEMICOLON block
    (32) shape -> ID DOT . shape_arg SEMICOLON block
    (33) delete -> ID DOT . DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (30) shape_arg -> . SHAPEF
    (31) shape_arg -> . SHAPEC

    INSERT          shift and go to state 97
    DEL             shift and go to state 98
    DELETE          shift and go to state 100
    SHAPEF          shift and go to state 101
    SHAPEC          shift and go to state 102

    shape_arg                      shift and go to state 99

state 67

    (71) mat_consult -> ID PARENTCL . indice COMMA indice PARENTCR
    (72) mat_consult -> ID PARENTCL . TP COMMA indice PARENTCR
    (99) complex_id -> ID PARENTCL . indice PARENTCR
    (100) complex_id -> ID PARENTCL . indice TP indice PARENTCR
    (73) indice -> . INT
    (74) indice -> . ID

    TP              shift and go to state 105
    INT             shift and go to state 106
    ID              shift and go to state 103

    indice                         shift and go to state 104

state 68

    (21) type -> TYPE LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 107


state 69

    (25) len -> LEN LPARENT . ID RPARENT SEMICOLON block

    ID              shift and go to state 108


state 70

    (28) blink -> BLINK LPARENT . b_content RPARENT SEMICOLON block
    (54) b_content -> . complex_id COMMA INT COMMA time_mes COMMA value
    (55) b_content -> . complex_id COMMA value
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    ID              shift and go to state 111

    b_content                      shift and go to state 109
    complex_id                     shift and go to state 110

state 71

    (29) delay -> DELAY LPARENT . d_content RPARENT SEMICOLON block
    (56) d_content -> . empty
    (57) d_content -> . INT COMMA time_mes
    (103) empty -> .

    INT             shift and go to state 114
    RPARENT         reduce using rule 103 (empty -> .)

    d_content                      shift and go to state 112
    empty                          shift and go to state 113

state 72

    (35) for -> FOR ID . IN iterable step LCORCH block RCORCH SEMICOLON block

    IN              shift and go to state 115


state 73

    (5) block -> consult SEMICOLON block .

    $end            reduce using rule 5 (block -> consult SEMICOLON block .)
    RCORCH          reduce using rule 5 (block -> consult SEMICOLON block .)


state 74

    (26) neg -> consult DOT NEG . SEMICOLON block

    SEMICOLON       shift and go to state 116


state 75

    (27) t_f -> consult DOT tf . SEMICOLON block

    SEMICOLON       shift and go to state 117


state 76

    (58) tf -> T .

    SEMICOLON       reduce using rule 58 (tf -> T .)


state 77

    (59) tf -> F .

    SEMICOLON       reduce using rule 59 (tf -> F .)


state 78

    (7) assignment -> identifier ASSIGN a_content . SEMICOLON block

    SEMICOLON       shift and go to state 118


state 79

    (22) a_content -> RANGE . LPARENT INT COMMA value RPARENT

    LPARENT         shift and go to state 119


state 80

    (45) factor -> LPARENT . arithmetic RPARENT
    (38) arithmetic -> . term
    (39) arithmetic -> . adding_operator term
    (40) arithmetic -> . arithmetic adding_operator term
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (82) adding_operator -> . PLUS
    (83) adding_operator -> . MINUS
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    INT             shift and go to state 81
    ID              shift and go to state 121
    LPARENT         shift and go to state 80

    arithmetic                     shift and go to state 120
    term                           shift and go to state 88
    adding_operator                shift and go to state 89
    factor                         shift and go to state 91

state 81

    (43) factor -> INT .

    TIMES           reduce using rule 43 (factor -> INT .)
    EXP             reduce using rule 43 (factor -> INT .)
    DIVIDE          reduce using rule 43 (factor -> INT .)
    DIVENT          reduce using rule 43 (factor -> INT .)
    MOD             reduce using rule 43 (factor -> INT .)
    PLUS            reduce using rule 43 (factor -> INT .)
    MINUS           reduce using rule 43 (factor -> INT .)
    SEMICOLON       reduce using rule 43 (factor -> INT .)
    RPARENT         reduce using rule 43 (factor -> INT .)


state 82

    (50) a_content -> value .

    SEMICOLON       reduce using rule 50 (a_content -> value .)


state 83

    (51) a_content -> arithmetic .
    (40) arithmetic -> arithmetic . adding_operator term
    (82) adding_operator -> . PLUS
    (83) adding_operator -> . MINUS

    SEMICOLON       reduce using rule 51 (a_content -> arithmetic .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93

    adding_operator                shift and go to state 122

state 84

    (52) a_content -> list .

    SEMICOLON       reduce using rule 52 (a_content -> list .)


state 85

    (53) a_content -> consult .

    SEMICOLON       reduce using rule 53 (a_content -> consult .)


state 86

    (89) value -> FALSE .

    SEMICOLON       reduce using rule 89 (value -> FALSE .)
    COMMA           reduce using rule 89 (value -> FALSE .)
    PARENTCR        reduce using rule 89 (value -> FALSE .)
    RPARENT         reduce using rule 89 (value -> FALSE .)


state 87

    (90) value -> TRUE .

    SEMICOLON       reduce using rule 90 (value -> TRUE .)
    COMMA           reduce using rule 90 (value -> TRUE .)
    PARENTCR        reduce using rule 90 (value -> TRUE .)
    RPARENT         reduce using rule 90 (value -> TRUE .)


state 88

    (38) arithmetic -> term .
    (42) term -> term . multiplying_operator factor
    (84) multiplying_operator -> . TIMES
    (85) multiplying_operator -> . EXP
    (86) multiplying_operator -> . DIVIDE
    (87) multiplying_operator -> . DIVENT
    (88) multiplying_operator -> . MOD

    PLUS            reduce using rule 38 (arithmetic -> term .)
    MINUS           reduce using rule 38 (arithmetic -> term .)
    SEMICOLON       reduce using rule 38 (arithmetic -> term .)
    RPARENT         reduce using rule 38 (arithmetic -> term .)
    TIMES           shift and go to state 124
    EXP             shift and go to state 125
    DIVIDE          shift and go to state 126
    DIVENT          shift and go to state 127
    MOD             shift and go to state 128

    multiplying_operator           shift and go to state 123

state 89

    (39) arithmetic -> adding_operator . term
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 81
    ID              shift and go to state 121
    LPARENT         shift and go to state 80

    term                           shift and go to state 129
    factor                         shift and go to state 91

state 90

    (62) list -> PARENTCL . list_term PARENTCR
    (63) list -> PARENTCL . empty PARENTCR
    (64) list_term -> . list_value COMMA list_term
    (65) list_term -> . list_value
    (103) empty -> .
    (66) list_value -> . value
    (67) list_value -> . list
    (89) value -> . FALSE
    (90) value -> . TRUE
    (62) list -> . PARENTCL list_term PARENTCR
    (63) list -> . PARENTCL empty PARENTCR

    PARENTCR        reduce using rule 103 (empty -> .)
    FALSE           shift and go to state 86
    TRUE            shift and go to state 87
    PARENTCL        shift and go to state 90

    list_term                      shift and go to state 130
    empty                          shift and go to state 131
    list_value                     shift and go to state 132
    value                          shift and go to state 133
    list                           shift and go to state 134

state 91

    (41) term -> factor .

    TIMES           reduce using rule 41 (term -> factor .)
    EXP             reduce using rule 41 (term -> factor .)
    DIVIDE          reduce using rule 41 (term -> factor .)
    DIVENT          reduce using rule 41 (term -> factor .)
    MOD             reduce using rule 41 (term -> factor .)
    PLUS            reduce using rule 41 (term -> factor .)
    MINUS           reduce using rule 41 (term -> factor .)
    SEMICOLON       reduce using rule 41 (term -> factor .)
    RPARENT         reduce using rule 41 (term -> factor .)


state 92

    (82) adding_operator -> PLUS .

    INT             reduce using rule 82 (adding_operator -> PLUS .)
    ID              reduce using rule 82 (adding_operator -> PLUS .)
    LPARENT         reduce using rule 82 (adding_operator -> PLUS .)


state 93

    (83) adding_operator -> MINUS .

    INT             reduce using rule 83 (adding_operator -> MINUS .)
    ID              reduce using rule 83 (adding_operator -> MINUS .)
    LPARENT         reduce using rule 83 (adding_operator -> MINUS .)


state 94

    (71) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (44) factor -> ID .
    (99) complex_id -> ID . PARENTCL indice PARENTCR
    (100) complex_id -> ID . PARENTCL indice TP indice PARENTCR

    PARENTCL        shift and go to state 67
    TIMES           reduce using rule 44 (factor -> ID .)
    EXP             reduce using rule 44 (factor -> ID .)
    DIVIDE          reduce using rule 44 (factor -> ID .)
    DIVENT          reduce using rule 44 (factor -> ID .)
    MOD             reduce using rule 44 (factor -> ID .)
    PLUS            reduce using rule 44 (factor -> ID .)
    MINUS           reduce using rule 44 (factor -> ID .)
    SEMICOLON       reduce using rule 44 (factor -> ID .)


state 95

    (8) assignment -> GLOBAL ID ASSIGN . a_content SEMICOLON block
    (22) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (50) a_content -> . value
    (51) a_content -> . arithmetic
    (52) a_content -> . list
    (53) a_content -> . consult
    (89) value -> . FALSE
    (90) value -> . TRUE
    (38) arithmetic -> . term
    (39) arithmetic -> . adding_operator term
    (40) arithmetic -> . arithmetic adding_operator term
    (62) list -> . PARENTCL list_term PARENTCR
    (63) list -> . PARENTCL empty PARENTCR
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (82) adding_operator -> . PLUS
    (83) adding_operator -> . MINUS
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    RANGE           shift and go to state 79
    FALSE           shift and go to state 86
    TRUE            shift and go to state 87
    PARENTCL        shift and go to state 90
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    ID              shift and go to state 94
    INT             shift and go to state 81
    LPARENT         shift and go to state 80

    a_content                      shift and go to state 135
    value                          shift and go to state 82
    arithmetic                     shift and go to state 83
    list                           shift and go to state 84
    consult                        shift and go to state 85
    term                           shift and go to state 88
    adding_operator                shift and go to state 89
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    factor                         shift and go to state 91
    complex_id                     shift and go to state 59

state 96

    (9) assignment -> ID COMMA ID . ASSIGN value COMMA value SEMICOLON block

    ASSIGN          shift and go to state 136


state 97

    (23) insert -> ID DOT INSERT . LPARENT i_content RPARENT SEMICOLON block

    LPARENT         shift and go to state 137


state 98

    (24) del -> ID DOT DEL . LPARENT INT RPARENT SEMICOLON block

    LPARENT         shift and go to state 138


state 99

    (32) shape -> ID DOT shape_arg . SEMICOLON block

    SEMICOLON       shift and go to state 139


state 100

    (33) delete -> ID DOT DELETE . LPARENT indice COMMA INT RPARENT SEMICOLON block

    LPARENT         shift and go to state 140


state 101

    (30) shape_arg -> SHAPEF .

    SEMICOLON       reduce using rule 30 (shape_arg -> SHAPEF .)


state 102

    (31) shape_arg -> SHAPEC .

    SEMICOLON       reduce using rule 31 (shape_arg -> SHAPEC .)


state 103

    (74) indice -> ID .

    COMMA           reduce using rule 74 (indice -> ID .)
    PARENTCR        reduce using rule 74 (indice -> ID .)
    TP              reduce using rule 74 (indice -> ID .)


state 104

    (71) mat_consult -> ID PARENTCL indice . COMMA indice PARENTCR
    (99) complex_id -> ID PARENTCL indice . PARENTCR
    (100) complex_id -> ID PARENTCL indice . TP indice PARENTCR

    COMMA           shift and go to state 141
    PARENTCR        shift and go to state 142
    TP              shift and go to state 143


state 105

    (72) mat_consult -> ID PARENTCL TP . COMMA indice PARENTCR

    COMMA           shift and go to state 144


state 106

    (73) indice -> INT .

    COMMA           reduce using rule 73 (indice -> INT .)
    PARENTCR        reduce using rule 73 (indice -> INT .)
    TP              reduce using rule 73 (indice -> INT .)


state 107

    (21) type -> TYPE LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 145


state 108

    (25) len -> LEN LPARENT ID . RPARENT SEMICOLON block

    RPARENT         shift and go to state 146


state 109

    (28) blink -> BLINK LPARENT b_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 147


state 110

    (54) b_content -> complex_id . COMMA INT COMMA time_mes COMMA value
    (55) b_content -> complex_id . COMMA value

    COMMA           shift and go to state 148


state 111

    (99) complex_id -> ID . PARENTCL indice PARENTCR
    (100) complex_id -> ID . PARENTCL indice TP indice PARENTCR

    PARENTCL        shift and go to state 149


state 112

    (29) delay -> DELAY LPARENT d_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 150


state 113

    (56) d_content -> empty .

    RPARENT         reduce using rule 56 (d_content -> empty .)


state 114

    (57) d_content -> INT . COMMA time_mes

    COMMA           shift and go to state 151


state 115

    (35) for -> FOR ID IN . iterable step LCORCH block RCORCH SEMICOLON block
    (101) iterable -> . identifier
    (102) iterable -> . INT
    (97) identifier -> . ID
    (98) identifier -> . consult
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    INT             shift and go to state 155
    ID              shift and go to state 152

    iterable                       shift and go to state 153
    identifier                     shift and go to state 154
    consult                        shift and go to state 156
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    complex_id                     shift and go to state 59

state 116

    (26) neg -> consult DOT NEG SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    consult                        shift and go to state 36
    block                          shift and go to state 157
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 117

    (27) t_f -> consult DOT tf SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    consult                        shift and go to state 36
    block                          shift and go to state 158
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 118

    (7) assignment -> identifier ASSIGN a_content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    identifier                     shift and go to state 38
    block                          shift and go to state 159
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 119

    (22) a_content -> RANGE LPARENT . INT COMMA value RPARENT

    INT             shift and go to state 160


state 120

    (45) factor -> LPARENT arithmetic . RPARENT
    (40) arithmetic -> arithmetic . adding_operator term
    (82) adding_operator -> . PLUS
    (83) adding_operator -> . MINUS

    RPARENT         shift and go to state 161
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93

    adding_operator                shift and go to state 122

state 121

    (44) factor -> ID .

    TIMES           reduce using rule 44 (factor -> ID .)
    EXP             reduce using rule 44 (factor -> ID .)
    DIVIDE          reduce using rule 44 (factor -> ID .)
    DIVENT          reduce using rule 44 (factor -> ID .)
    MOD             reduce using rule 44 (factor -> ID .)
    RPARENT         reduce using rule 44 (factor -> ID .)
    PLUS            reduce using rule 44 (factor -> ID .)
    MINUS           reduce using rule 44 (factor -> ID .)
    SEMICOLON       reduce using rule 44 (factor -> ID .)


state 122

    (40) arithmetic -> arithmetic adding_operator . term
    (41) term -> . factor
    (42) term -> . term multiplying_operator factor
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 81
    ID              shift and go to state 121
    LPARENT         shift and go to state 80

    term                           shift and go to state 162
    factor                         shift and go to state 91

state 123

    (42) term -> term multiplying_operator . factor
    (43) factor -> . INT
    (44) factor -> . ID
    (45) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 81
    ID              shift and go to state 121
    LPARENT         shift and go to state 80

    factor                         shift and go to state 163

state 124

    (84) multiplying_operator -> TIMES .

    INT             reduce using rule 84 (multiplying_operator -> TIMES .)
    ID              reduce using rule 84 (multiplying_operator -> TIMES .)
    LPARENT         reduce using rule 84 (multiplying_operator -> TIMES .)


state 125

    (85) multiplying_operator -> EXP .

    INT             reduce using rule 85 (multiplying_operator -> EXP .)
    ID              reduce using rule 85 (multiplying_operator -> EXP .)
    LPARENT         reduce using rule 85 (multiplying_operator -> EXP .)


state 126

    (86) multiplying_operator -> DIVIDE .

    INT             reduce using rule 86 (multiplying_operator -> DIVIDE .)
    ID              reduce using rule 86 (multiplying_operator -> DIVIDE .)
    LPARENT         reduce using rule 86 (multiplying_operator -> DIVIDE .)


state 127

    (87) multiplying_operator -> DIVENT .

    INT             reduce using rule 87 (multiplying_operator -> DIVENT .)
    ID              reduce using rule 87 (multiplying_operator -> DIVENT .)
    LPARENT         reduce using rule 87 (multiplying_operator -> DIVENT .)


state 128

    (88) multiplying_operator -> MOD .

    INT             reduce using rule 88 (multiplying_operator -> MOD .)
    ID              reduce using rule 88 (multiplying_operator -> MOD .)
    LPARENT         reduce using rule 88 (multiplying_operator -> MOD .)


state 129

    (39) arithmetic -> adding_operator term .
    (42) term -> term . multiplying_operator factor
    (84) multiplying_operator -> . TIMES
    (85) multiplying_operator -> . EXP
    (86) multiplying_operator -> . DIVIDE
    (87) multiplying_operator -> . DIVENT
    (88) multiplying_operator -> . MOD

    PLUS            reduce using rule 39 (arithmetic -> adding_operator term .)
    MINUS           reduce using rule 39 (arithmetic -> adding_operator term .)
    SEMICOLON       reduce using rule 39 (arithmetic -> adding_operator term .)
    RPARENT         reduce using rule 39 (arithmetic -> adding_operator term .)
    TIMES           shift and go to state 124
    EXP             shift and go to state 125
    DIVIDE          shift and go to state 126
    DIVENT          shift and go to state 127
    MOD             shift and go to state 128

    multiplying_operator           shift and go to state 123

state 130

    (62) list -> PARENTCL list_term . PARENTCR

    PARENTCR        shift and go to state 164


state 131

    (63) list -> PARENTCL empty . PARENTCR

    PARENTCR        shift and go to state 165


state 132

    (64) list_term -> list_value . COMMA list_term
    (65) list_term -> list_value .

    COMMA           shift and go to state 166
    PARENTCR        reduce using rule 65 (list_term -> list_value .)


state 133

    (66) list_value -> value .

    COMMA           reduce using rule 66 (list_value -> value .)
    PARENTCR        reduce using rule 66 (list_value -> value .)


state 134

    (67) list_value -> list .

    COMMA           reduce using rule 67 (list_value -> list .)
    PARENTCR        reduce using rule 67 (list_value -> list .)


state 135

    (8) assignment -> GLOBAL ID ASSIGN a_content . SEMICOLON block

    SEMICOLON       shift and go to state 167


state 136

    (9) assignment -> ID COMMA ID ASSIGN . value COMMA value SEMICOLON block
    (89) value -> . FALSE
    (90) value -> . TRUE

    FALSE           shift and go to state 86
    TRUE            shift and go to state 87

    value                          shift and go to state 168

state 137

    (23) insert -> ID DOT INSERT LPARENT . i_content RPARENT SEMICOLON block
    (60) i_content -> . INT COMMA value
    (61) i_content -> . list COMMA INT i_ind
    (62) list -> . PARENTCL list_term PARENTCR
    (63) list -> . PARENTCL empty PARENTCR

    INT             shift and go to state 170
    PARENTCL        shift and go to state 90

    i_content                      shift and go to state 169
    list                           shift and go to state 171

state 138

    (24) del -> ID DOT DEL LPARENT . INT RPARENT SEMICOLON block

    INT             shift and go to state 172


state 139

    (32) shape -> ID DOT shape_arg SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 173
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 140

    (33) delete -> ID DOT DELETE LPARENT . indice COMMA INT RPARENT SEMICOLON block
    (73) indice -> . INT
    (74) indice -> . ID

    INT             shift and go to state 106
    ID              shift and go to state 103

    indice                         shift and go to state 174

state 141

    (71) mat_consult -> ID PARENTCL indice COMMA . indice PARENTCR
    (73) indice -> . INT
    (74) indice -> . ID

    INT             shift and go to state 106
    ID              shift and go to state 103

    indice                         shift and go to state 175

state 142

    (99) complex_id -> ID PARENTCL indice PARENTCR .

    SEMICOLON       reduce using rule 99 (complex_id -> ID PARENTCL indice PARENTCR .)
    DOT             reduce using rule 99 (complex_id -> ID PARENTCL indice PARENTCR .)
    ASSIGN          reduce using rule 99 (complex_id -> ID PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 99 (complex_id -> ID PARENTCL indice PARENTCR .)
    STEP            reduce using rule 99 (complex_id -> ID PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 99 (complex_id -> ID PARENTCL indice PARENTCR .)


state 143

    (100) complex_id -> ID PARENTCL indice TP . indice PARENTCR
    (73) indice -> . INT
    (74) indice -> . ID

    INT             shift and go to state 106
    ID              shift and go to state 103

    indice                         shift and go to state 176

state 144

    (72) mat_consult -> ID PARENTCL TP COMMA . indice PARENTCR
    (73) indice -> . INT
    (74) indice -> . ID

    INT             shift and go to state 106
    ID              shift and go to state 103

    indice                         shift and go to state 177

state 145

    (21) type -> TYPE LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 178


state 146

    (25) len -> LEN LPARENT ID RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 179


state 147

    (28) blink -> BLINK LPARENT b_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 180


state 148

    (54) b_content -> complex_id COMMA . INT COMMA time_mes COMMA value
    (55) b_content -> complex_id COMMA . value
    (89) value -> . FALSE
    (90) value -> . TRUE

    INT             shift and go to state 181
    FALSE           shift and go to state 86
    TRUE            shift and go to state 87

    value                          shift and go to state 182

state 149

    (99) complex_id -> ID PARENTCL . indice PARENTCR
    (100) complex_id -> ID PARENTCL . indice TP indice PARENTCR
    (73) indice -> . INT
    (74) indice -> . ID

    INT             shift and go to state 106
    ID              shift and go to state 103

    indice                         shift and go to state 183

state 150

    (29) delay -> DELAY LPARENT d_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 184


state 151

    (57) d_content -> INT COMMA . time_mes
    (79) time_mes -> . QUOTES MIL QUOTES
    (80) time_mes -> . QUOTES MIN QUOTES
    (81) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 185

state 152

    (97) identifier -> ID .
    (71) mat_consult -> ID . PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> ID . PARENTCL TP COMMA indice PARENTCR
    (99) complex_id -> ID . PARENTCL indice PARENTCR
    (100) complex_id -> ID . PARENTCL indice TP indice PARENTCR

    STEP            reduce using rule 97 (identifier -> ID .)
    LCORCH          reduce using rule 97 (identifier -> ID .)
    PARENTCL        shift and go to state 67


state 153

    (35) for -> FOR ID IN iterable . step LCORCH block RCORCH SEMICOLON block
    (36) step -> . STEP INT
    (37) step -> . empty
    (103) empty -> .

    STEP            shift and go to state 187
    LCORCH          reduce using rule 103 (empty -> .)

    step                           shift and go to state 186
    empty                          shift and go to state 188

state 154

    (101) iterable -> identifier .

    STEP            reduce using rule 101 (iterable -> identifier .)
    LCORCH          reduce using rule 101 (iterable -> identifier .)


state 155

    (102) iterable -> INT .

    STEP            reduce using rule 102 (iterable -> INT .)
    LCORCH          reduce using rule 102 (iterable -> INT .)


state 156

    (98) identifier -> consult .

    STEP            reduce using rule 98 (identifier -> consult .)
    LCORCH          reduce using rule 98 (identifier -> consult .)


state 157

    (26) neg -> consult DOT NEG SEMICOLON block .

    $end            reduce using rule 26 (neg -> consult DOT NEG SEMICOLON block .)
    RCORCH          reduce using rule 26 (neg -> consult DOT NEG SEMICOLON block .)


state 158

    (27) t_f -> consult DOT tf SEMICOLON block .

    $end            reduce using rule 27 (t_f -> consult DOT tf SEMICOLON block .)
    RCORCH          reduce using rule 27 (t_f -> consult DOT tf SEMICOLON block .)


state 159

    (7) assignment -> identifier ASSIGN a_content SEMICOLON block .

    $end            reduce using rule 7 (assignment -> identifier ASSIGN a_content SEMICOLON block .)
    RCORCH          reduce using rule 7 (assignment -> identifier ASSIGN a_content SEMICOLON block .)


state 160

    (22) a_content -> RANGE LPARENT INT . COMMA value RPARENT

    COMMA           shift and go to state 189


state 161

    (45) factor -> LPARENT arithmetic RPARENT .

    TIMES           reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    EXP             reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    DIVIDE          reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    DIVENT          reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    MOD             reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    PLUS            reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    MINUS           reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    SEMICOLON       reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)
    RPARENT         reduce using rule 45 (factor -> LPARENT arithmetic RPARENT .)


state 162

    (40) arithmetic -> arithmetic adding_operator term .
    (42) term -> term . multiplying_operator factor
    (84) multiplying_operator -> . TIMES
    (85) multiplying_operator -> . EXP
    (86) multiplying_operator -> . DIVIDE
    (87) multiplying_operator -> . DIVENT
    (88) multiplying_operator -> . MOD

    PLUS            reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    MINUS           reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    SEMICOLON       reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    RPARENT         reduce using rule 40 (arithmetic -> arithmetic adding_operator term .)
    TIMES           shift and go to state 124
    EXP             shift and go to state 125
    DIVIDE          shift and go to state 126
    DIVENT          shift and go to state 127
    MOD             shift and go to state 128

    multiplying_operator           shift and go to state 123

state 163

    (42) term -> term multiplying_operator factor .

    TIMES           reduce using rule 42 (term -> term multiplying_operator factor .)
    EXP             reduce using rule 42 (term -> term multiplying_operator factor .)
    DIVIDE          reduce using rule 42 (term -> term multiplying_operator factor .)
    DIVENT          reduce using rule 42 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 42 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 42 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 42 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 42 (term -> term multiplying_operator factor .)
    RPARENT         reduce using rule 42 (term -> term multiplying_operator factor .)


state 164

    (62) list -> PARENTCL list_term PARENTCR .

    SEMICOLON       reduce using rule 62 (list -> PARENTCL list_term PARENTCR .)
    COMMA           reduce using rule 62 (list -> PARENTCL list_term PARENTCR .)
    PARENTCR        reduce using rule 62 (list -> PARENTCL list_term PARENTCR .)


state 165

    (63) list -> PARENTCL empty PARENTCR .

    SEMICOLON       reduce using rule 63 (list -> PARENTCL empty PARENTCR .)
    COMMA           reduce using rule 63 (list -> PARENTCL empty PARENTCR .)
    PARENTCR        reduce using rule 63 (list -> PARENTCL empty PARENTCR .)


state 166

    (64) list_term -> list_value COMMA . list_term
    (64) list_term -> . list_value COMMA list_term
    (65) list_term -> . list_value
    (66) list_value -> . value
    (67) list_value -> . list
    (89) value -> . FALSE
    (90) value -> . TRUE
    (62) list -> . PARENTCL list_term PARENTCR
    (63) list -> . PARENTCL empty PARENTCR

    FALSE           shift and go to state 86
    TRUE            shift and go to state 87
    PARENTCL        shift and go to state 90

    list_value                     shift and go to state 132
    list_term                      shift and go to state 190
    value                          shift and go to state 133
    list                           shift and go to state 134

state 167

    (8) assignment -> GLOBAL ID ASSIGN a_content SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 191
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 168

    (9) assignment -> ID COMMA ID ASSIGN value . COMMA value SEMICOLON block

    COMMA           shift and go to state 192


state 169

    (23) insert -> ID DOT INSERT LPARENT i_content . RPARENT SEMICOLON block

    RPARENT         shift and go to state 193


state 170

    (60) i_content -> INT . COMMA value

    COMMA           shift and go to state 194


state 171

    (61) i_content -> list . COMMA INT i_ind

    COMMA           shift and go to state 195


state 172

    (24) del -> ID DOT DEL LPARENT INT . RPARENT SEMICOLON block

    RPARENT         shift and go to state 196


state 173

    (32) shape -> ID DOT shape_arg SEMICOLON block .

    $end            reduce using rule 32 (shape -> ID DOT shape_arg SEMICOLON block .)
    RCORCH          reduce using rule 32 (shape -> ID DOT shape_arg SEMICOLON block .)


state 174

    (33) delete -> ID DOT DELETE LPARENT indice . COMMA INT RPARENT SEMICOLON block

    COMMA           shift and go to state 197


state 175

    (71) mat_consult -> ID PARENTCL indice COMMA indice . PARENTCR

    PARENTCR        shift and go to state 198


state 176

    (100) complex_id -> ID PARENTCL indice TP indice . PARENTCR

    PARENTCR        shift and go to state 199


state 177

    (72) mat_consult -> ID PARENTCL TP COMMA indice . PARENTCR

    PARENTCR        shift and go to state 200


state 178

    (21) type -> TYPE LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 201
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 179

    (25) len -> LEN LPARENT ID RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 202
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 180

    (28) blink -> BLINK LPARENT b_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 203
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 181

    (54) b_content -> complex_id COMMA INT . COMMA time_mes COMMA value

    COMMA           shift and go to state 204


state 182

    (55) b_content -> complex_id COMMA value .

    RPARENT         reduce using rule 55 (b_content -> complex_id COMMA value .)


state 183

    (99) complex_id -> ID PARENTCL indice . PARENTCR
    (100) complex_id -> ID PARENTCL indice . TP indice PARENTCR

    PARENTCR        shift and go to state 142
    TP              shift and go to state 143


state 184

    (29) delay -> DELAY LPARENT d_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 205
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 185

    (57) d_content -> INT COMMA time_mes .

    RPARENT         reduce using rule 57 (d_content -> INT COMMA time_mes .)


state 186

    (35) for -> FOR ID IN iterable step . LCORCH block RCORCH SEMICOLON block

    LCORCH          shift and go to state 206


state 187

    (36) step -> STEP . INT

    INT             shift and go to state 207


state 188

    (37) step -> empty .

    LCORCH          reduce using rule 37 (step -> empty .)


state 189

    (22) a_content -> RANGE LPARENT INT COMMA . value RPARENT
    (89) value -> . FALSE
    (90) value -> . TRUE

    FALSE           shift and go to state 86
    TRUE            shift and go to state 87

    value                          shift and go to state 208

state 190

    (64) list_term -> list_value COMMA list_term .

    PARENTCR        reduce using rule 64 (list_term -> list_value COMMA list_term .)


state 191

    (8) assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .

    $end            reduce using rule 8 (assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .)
    RCORCH          reduce using rule 8 (assignment -> GLOBAL ID ASSIGN a_content SEMICOLON block .)


state 192

    (9) assignment -> ID COMMA ID ASSIGN value COMMA . value SEMICOLON block
    (89) value -> . FALSE
    (90) value -> . TRUE

    FALSE           shift and go to state 86
    TRUE            shift and go to state 87

    value                          shift and go to state 209

state 193

    (23) insert -> ID DOT INSERT LPARENT i_content RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 210


state 194

    (60) i_content -> INT COMMA . value
    (89) value -> . FALSE
    (90) value -> . TRUE

    FALSE           shift and go to state 86
    TRUE            shift and go to state 87

    value                          shift and go to state 211

state 195

    (61) i_content -> list COMMA . INT i_ind

    INT             shift and go to state 212


state 196

    (24) del -> ID DOT DEL LPARENT INT RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 213


state 197

    (33) delete -> ID DOT DELETE LPARENT indice COMMA . INT RPARENT SEMICOLON block

    INT             shift and go to state 214


state 198

    (71) mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .

    SEMICOLON       reduce using rule 71 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    DOT             reduce using rule 71 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    ASSIGN          reduce using rule 71 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    STEP            reduce using rule 71 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)
    LCORCH          reduce using rule 71 (mat_consult -> ID PARENTCL indice COMMA indice PARENTCR .)


state 199

    (100) complex_id -> ID PARENTCL indice TP indice PARENTCR .

    SEMICOLON       reduce using rule 100 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    DOT             reduce using rule 100 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    ASSIGN          reduce using rule 100 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    COMMA           reduce using rule 100 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    STEP            reduce using rule 100 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)
    LCORCH          reduce using rule 100 (complex_id -> ID PARENTCL indice TP indice PARENTCR .)


state 200

    (72) mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .

    SEMICOLON       reduce using rule 72 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    DOT             reduce using rule 72 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    ASSIGN          reduce using rule 72 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    STEP            reduce using rule 72 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)
    LCORCH          reduce using rule 72 (mat_consult -> ID PARENTCL TP COMMA indice PARENTCR .)


state 201

    (21) type -> TYPE LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 21 (type -> TYPE LPARENT ID RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 21 (type -> TYPE LPARENT ID RPARENT SEMICOLON block .)


state 202

    (25) len -> LEN LPARENT ID RPARENT SEMICOLON block .

    $end            reduce using rule 25 (len -> LEN LPARENT ID RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 25 (len -> LEN LPARENT ID RPARENT SEMICOLON block .)


state 203

    (28) blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .

    $end            reduce using rule 28 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 28 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON block .)


state 204

    (54) b_content -> complex_id COMMA INT COMMA . time_mes COMMA value
    (79) time_mes -> . QUOTES MIL QUOTES
    (80) time_mes -> . QUOTES MIN QUOTES
    (81) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 18

    time_mes                       shift and go to state 215

state 205

    (29) delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .

    $end            reduce using rule 29 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 29 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON block .)


state 206

    (35) for -> FOR ID IN iterable step LCORCH . block RCORCH SEMICOLON block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 216
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 207

    (36) step -> STEP INT .

    LCORCH          reduce using rule 36 (step -> STEP INT .)


state 208

    (22) a_content -> RANGE LPARENT INT COMMA value . RPARENT

    RPARENT         shift and go to state 217


state 209

    (9) assignment -> ID COMMA ID ASSIGN value COMMA value . SEMICOLON block

    SEMICOLON       shift and go to state 218


state 210

    (23) insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 219
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 211

    (60) i_content -> INT COMMA value .

    RPARENT         reduce using rule 60 (i_content -> INT COMMA value .)


state 212

    (61) i_content -> list COMMA INT . i_ind
    (75) i_ind -> . COMMA INT
    (76) i_ind -> . empty
    (103) empty -> .

    COMMA           shift and go to state 220
    RPARENT         reduce using rule 103 (empty -> .)

    i_ind                          shift and go to state 221
    empty                          shift and go to state 222

state 213

    (24) del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 223
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 214

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT . RPARENT SEMICOLON block

    RPARENT         shift and go to state 224


state 215

    (54) b_content -> complex_id COMMA INT COMMA time_mes . COMMA value

    COMMA           shift and go to state 225


state 216

    (35) for -> FOR ID IN iterable step LCORCH block . RCORCH SEMICOLON block

    RCORCH          shift and go to state 226


state 217

    (22) a_content -> RANGE LPARENT INT COMMA value RPARENT .

    SEMICOLON       reduce using rule 22 (a_content -> RANGE LPARENT INT COMMA value RPARENT .)


state 218

    (9) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 227
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 219

    (23) insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block .

    $end            reduce using rule 23 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 23 (insert -> ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block .)


state 220

    (75) i_ind -> COMMA . INT

    INT             shift and go to state 228


state 221

    (61) i_content -> list COMMA INT i_ind .

    RPARENT         reduce using rule 61 (i_content -> list COMMA INT i_ind .)


state 222

    (76) i_ind -> empty .

    RPARENT         reduce using rule 76 (i_ind -> empty .)


state 223

    (24) del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block .

    $end            reduce using rule 24 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 24 (del -> ID DOT DEL LPARENT INT RPARENT SEMICOLON block .)


state 224

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT . SEMICOLON block

    SEMICOLON       shift and go to state 229


state 225

    (54) b_content -> complex_id COMMA INT COMMA time_mes COMMA . value
    (89) value -> . FALSE
    (90) value -> . TRUE

    FALSE           shift and go to state 86
    TRUE            shift and go to state 87

    value                          shift and go to state 230

state 226

    (35) for -> FOR ID IN iterable step LCORCH block RCORCH . SEMICOLON block

    SEMICOLON       shift and go to state 231


state 227

    (9) assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .

    $end            reduce using rule 9 (assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .)
    RCORCH          reduce using rule 9 (assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block .)


state 228

    (75) i_ind -> COMMA INT .

    RPARENT         reduce using rule 75 (i_ind -> COMMA INT .)


state 229

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 232
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 230

    (54) b_content -> complex_id COMMA INT COMMA time_mes COMMA value .

    RPARENT         reduce using rule 54 (b_content -> complex_id COMMA INT COMMA time_mes COMMA value .)


state 231

    (35) for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON . block
    (3) block -> . assignment
    (4) block -> . function
    (5) block -> . consult SEMICOLON block
    (6) block -> . cycle
    (7) assignment -> . identifier ASSIGN a_content SEMICOLON block
    (8) assignment -> . GLOBAL ID ASSIGN a_content SEMICOLON block
    (9) assignment -> . ID COMMA ID ASSIGN value COMMA value SEMICOLON block
    (10) assignment -> . empty
    (11) function -> . type
    (12) function -> . insert
    (13) function -> . del
    (14) function -> . len
    (15) function -> . neg
    (16) function -> . t_f
    (17) function -> . blink
    (18) function -> . delay
    (19) function -> . shape
    (20) function -> . delete
    (68) consult -> . list_consult
    (69) consult -> . mat_consult
    (34) cycle -> . for
    (97) identifier -> . ID
    (98) identifier -> . consult
    (103) empty -> .
    (21) type -> . TYPE LPARENT ID RPARENT SEMICOLON block
    (23) insert -> . ID DOT INSERT LPARENT i_content RPARENT SEMICOLON block
    (24) del -> . ID DOT DEL LPARENT INT RPARENT SEMICOLON block
    (25) len -> . LEN LPARENT ID RPARENT SEMICOLON block
    (26) neg -> . consult DOT NEG SEMICOLON block
    (27) t_f -> . consult DOT tf SEMICOLON block
    (28) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON block
    (29) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON block
    (32) shape -> . ID DOT shape_arg SEMICOLON block
    (33) delete -> . ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block
    (70) list_consult -> . complex_id
    (71) mat_consult -> . ID PARENTCL indice COMMA indice PARENTCR
    (72) mat_consult -> . ID PARENTCL TP COMMA indice PARENTCR
    (35) for -> . FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block
    (99) complex_id -> . ID PARENTCL indice PARENTCR
    (100) complex_id -> . ID PARENTCL indice TP indice PARENTCR

    GLOBAL          shift and go to state 39
    ID              shift and go to state 40
    $end            reduce using rule 103 (empty -> .)
    RCORCH          reduce using rule 103 (empty -> .)
    TYPE            shift and go to state 55
    LEN             shift and go to state 56
    BLINK           shift and go to state 57
    DELAY           shift and go to state 58
    FOR             shift and go to state 60

    block                          shift and go to state 233
    assignment                     shift and go to state 34
    function                       shift and go to state 35
    consult                        shift and go to state 36
    cycle                          shift and go to state 37
    identifier                     shift and go to state 38
    empty                          shift and go to state 41
    type                           shift and go to state 42
    insert                         shift and go to state 43
    del                            shift and go to state 44
    len                            shift and go to state 45
    neg                            shift and go to state 46
    t_f                            shift and go to state 47
    blink                          shift and go to state 48
    delay                          shift and go to state 49
    shape                          shift and go to state 50
    delete                         shift and go to state 51
    list_consult                   shift and go to state 52
    mat_consult                    shift and go to state 53
    for                            shift and go to state 54
    complex_id                     shift and go to state 59

state 232

    (33) delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block .

    $end            reduce using rule 33 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block .)
    RCORCH          reduce using rule 33 (delete -> ID DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON block .)


state 233

    (35) for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block .

    $end            reduce using rule 35 (for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block .)
    RCORCH          reduce using rule 35 (for -> FOR ID IN iterable step LCORCH block RCORCH SEMICOLON block .)

