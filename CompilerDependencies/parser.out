Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOKED
    CONST
    LENGHTERROR
    VARERROR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> const_block main_proc
Rule 2     const_block -> const const const const const block
Rule 3     block -> procedure block
Rule 4     block -> global block
Rule 5     block -> empty
Rule 6     alt_block -> alt_content alt_block
Rule 7     alt_block -> empty
Rule 8     alt_content -> instruction
Rule 9     alt_content -> assignment
Rule 10    instruction -> function
Rule 11    instruction -> consult SEMICOLON
Rule 12    instruction -> cycle
Rule 13    instruction -> statement
Rule 14    global -> assignment
Rule 15    global_call -> GLOBAL global_term SEMICOLON global_call
Rule 16    global_call -> empty
Rule 17    global_term -> ID COMMA global_term
Rule 18    global_term -> ID
Rule 19    assignment -> identifier ASSIGN a_content SEMICOLON
Rule 20    assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
Rule 21    function -> type
Rule 22    function -> insert
Rule 23    function -> del
Rule 24    function -> len
Rule 25    function -> neg
Rule 26    function -> t_f
Rule 27    function -> blink
Rule 28    function -> delay
Rule 29    function -> shape
Rule 30    function -> delete
Rule 31    function -> call
Rule 32    type -> TYPE LPARENT identifier RPARENT SEMICOLON
Rule 33    a_content -> RANGE LPARENT INT COMMA value RPARENT
Rule 34    insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
Rule 35    del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON
Rule 36    len -> LEN LPARENT identifier RPARENT SEMICOLON
Rule 37    neg -> identifier DOT NEG SEMICOLON
Rule 38    t_f -> identifier DOT tf SEMICOLON
Rule 39    blink -> BLINK LPARENT b_content RPARENT SEMICOLON
Rule 40    delay -> DELAY LPARENT d_content RPARENT SEMICOLON
Rule 41    shape_arg -> SHAPEF
Rule 42    shape_arg -> SHAPEC
Rule 43    shape_arg -> SHAPEA
Rule 44    shape -> identifier DOT shape_arg SEMICOLON
Rule 45    delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
Rule 46    call -> CALL proc_dec SEMICOLON
Rule 47    cycle -> for
Rule 48    for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON
Rule 49    step -> STEP INT
Rule 50    step -> empty
Rule 51    statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
Rule 52    opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON
Rule 53    opt_statement -> empty
Rule 54    procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
Rule 55    proc_dec -> proc_name LPARENT parameter RPARENT
Rule 56    proc_name -> ID
Rule 57    parameter -> proc_param
Rule 58    parameter -> proc_param COMMA parameter
Rule 59    parameter -> empty
Rule 60    proc_param -> ID
Rule 61    body -> global_call BEGIN alt_block END SEMICOLON
Rule 62    main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block
Rule 63    main_body -> BEGIN main_block END SEMICOLON
Rule 64    main_block -> instruction main_block
Rule 65    main_block -> empty
Rule 66    arithmetic -> term
Rule 67    arithmetic -> adding_operator term
Rule 68    arithmetic -> arithmetic adding_operator term
Rule 69    term -> factor
Rule 70    term -> term multiplying_operator factor
Rule 71    factor -> INT
Rule 72    factor -> ID
Rule 73    factor -> LPARENT arithmetic RPARENT
Rule 74    const -> TIMER ASSIGN INT SEMICOLON
Rule 75    const -> RANGOTIMER ASSIGN time_mes SEMICOLON
Rule 76    const -> dimension ASSIGN INT SEMICOLON
Rule 77    const -> CUBO ASSIGN INT SEMICOLON
Rule 78    a_content -> value
Rule 79    a_content -> arithmetic
Rule 80    a_content -> list
Rule 81    a_content -> mat
Rule 82    a_content -> 3dmat
Rule 83    a_content -> consult
Rule 84    b_content -> identifier COMMA INT COMMA time_mes COMMA value
Rule 85    b_content -> identifier COMMA value
Rule 86    d_content -> empty
Rule 87    d_content -> INT COMMA time_mes
Rule 88    tf -> T
Rule 89    tf -> F
Rule 90    i_content -> INT COMMA value
Rule 91    i_content -> list COMMA INT i_ind
Rule 92    list -> PARENTCL list_term PARENTCR
Rule 93    list -> PARENTCL empty PARENTCR
Rule 94    list_term -> list_value COMMA list_term
Rule 95    list_term -> list_value
Rule 96    list_value -> value
Rule 97    mat -> PARENTCL mat_term PARENTCR
Rule 98    mat_term -> mat_value COMMA mat_term
Rule 99    mat_term -> mat_value
Rule 100   mat_value -> list
Rule 101   3dmat -> PARENTCL 3dmat_term PARENTCR
Rule 102   3dmat_term -> 3dmat_value COMMA 3dmat_term
Rule 103   3dmat_term -> 3dmat_value
Rule 104   3dmat_value -> mat
Rule 105   consult -> list_consult
Rule 106   consult -> mat_consult
Rule 107   consult -> 3dmat_consult
Rule 108   list_consult -> ID list_consultT
Rule 109   list_consultT -> PARENTCL indice PARENTCR
Rule 110   list_consultT -> PARENTCL indice TP indice PARENTCR
Rule 111   mat_consult -> ID mat_consultT
Rule 112   mat_consultT -> PARENTCL indice COMMA indice PARENTCR
Rule 113   mat_consultT -> PARENTCL TP COMMA indice PARENTCR
Rule 114   mat_consultT -> PARENTCL TP PARENTCR list_consultT
Rule 115   mat_consultT -> PARENTCL indice PARENTCR list_consultT
Rule 116   3dmat_consult -> ID 3dmat_consultT
Rule 117   3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR
Rule 118   3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT
Rule 119   indice -> INT
Rule 120   indice -> ID
Rule 121   i_ind -> COMMA INT
Rule 122   i_ind -> empty
Rule 123   dimension -> DIMFILAS
Rule 124   dimension -> DIMCOLUMNAS
Rule 125   time_mes -> QUOTES MIL QUOTES
Rule 126   time_mes -> QUOTES MIN QUOTES
Rule 127   time_mes -> QUOTES SEG QUOTES
Rule 128   adding_operator -> PLUS
Rule 129   adding_operator -> MINUS
Rule 130   multiplying_operator -> TIMES
Rule 131   multiplying_operator -> EXP
Rule 132   multiplying_operator -> DIVIDE
Rule 133   multiplying_operator -> DIVENT
Rule 134   multiplying_operator -> MOD
Rule 135   value -> FALSE
Rule 136   value -> TRUE
Rule 137   bif_value -> value
Rule 138   bif_value -> arithmetic
Rule 139   relation -> ASSIGN
Rule 140   relation -> NE
Rule 141   relation -> LT
Rule 142   relation -> GT
Rule 143   relation -> LTE
Rule 144   relation -> GTE
Rule 145   relation -> COMPARE
Rule 146   identifier -> ID
Rule 147   identifier -> consult
Rule 148   iterable -> identifier
Rule 149   iterable -> INT
Rule 150   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 19 20 74 75 76 77 139
BEGIN                : 61 63
BLINK                : 39
BOOKED               : 
CALL                 : 46
COMMA                : 17 20 20 33 45 58 84 84 84 85 87 90 91 94 98 102 112 113 117 117 121
COMPARE              : 145
CONST                : 
CUBO                 : 77
DEL                  : 35
DELAY                : 40
DELETE               : 45
DIMCOLUMNAS          : 124
DIMFILAS             : 123
DIVENT               : 133
DIVIDE               : 132
DOT                  : 34 35 37 38 44 45
ELSE                 : 52
END                  : 61 63
EXP                  : 131
F                    : 89
FALSE                : 135
FOR                  : 48
GLOBAL               : 15
GT                   : 142
GTE                  : 144
ID                   : 17 18 48 56 60 72 108 111 116 120 146
IF                   : 51
IN                   : 48
INSERT               : 34
INT                  : 33 35 45 49 71 74 76 77 84 87 90 91 119 121 149
LCORCH               : 48 51 52 54 62
LEN                  : 36
LENGHTERROR          : 
LPARENT              : 32 33 34 35 36 39 40 45 51 55 62 73
LT                   : 141
LTE                  : 143
MAIN                 : 62
MIL                  : 125
MIN                  : 126
MINUS                : 129
MOD                  : 134
NE                   : 140
NEG                  : 37
PARENTCL             : 92 93 97 101 109 110 112 113 114 115 117 118
PARENTCR             : 92 93 97 101 109 110 112 113 114 115 117 118
PLUS                 : 128
PROCEDURE            : 54
QUOTES               : 125 125 126 126 127 127
RANGE                : 33
RANGOTIMER           : 75
RCORCH               : 48 51 52 54 62
RPARENT              : 32 33 34 35 36 39 40 45 51 55 62 73
SEG                  : 127
SEMICOLON            : 11 15 19 20 32 34 35 36 37 38 39 40 44 45 46 48 51 52 54 61 62 63 74 75 76 77
SHAPEA               : 43
SHAPEC               : 42
SHAPEF               : 41
STEP                 : 49
T                    : 88
TIMER                : 74
TIMES                : 130
TP                   : 110 113 114
TRUE                 : 136
TYPE                 : 32
VARERROR             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

3dmat                : 82
3dmat_consult        : 107
3dmat_consultT       : 116
3dmat_term           : 101 102
3dmat_value          : 102 103
a_content            : 19 20 20
adding_operator      : 67 68
alt_block            : 6 48 51 52 61
alt_content          : 6
arithmetic           : 68 73 79 138
assignment           : 9 14
b_content            : 39
bif_value            : 51
blink                : 27
block                : 2 3 4 62
body                 : 54
call                 : 31
const                : 2 2 2 2 2
const_block          : 1
consult              : 11 83 147
cycle                : 12
d_content            : 40
del                  : 23
delay                : 28
delete               : 30
dimension            : 76
empty                : 5 7 16 50 53 59 65 86 93 122
factor               : 69 70
for                  : 47
function             : 10
global               : 4
global_call          : 15 61
global_term          : 15 17
i_content            : 34
i_ind                : 91
identifier           : 19 20 20 32 34 35 36 37 38 44 45 84 85 148
indice               : 45 109 110 110 112 112 113 115 117 117 117 118
insert               : 22
instruction          : 8 64
iterable             : 48 51
len                  : 24
list                 : 80 91 100
list_consult         : 105
list_consultT        : 108 114 115
list_term            : 92 94
list_value           : 94 95
main_block           : 63 64
main_body            : 62
main_proc            : 1
mat                  : 81 104
mat_consult          : 106
mat_consultT         : 111 118
mat_term             : 97 98
mat_value            : 98 99
multiplying_operator : 70
neg                  : 25
opt_statement        : 51
parameter            : 55 58
proc_dec             : 46 54
proc_name            : 55
proc_param           : 57 58
procedure            : 3
program              : 0
relation             : 51
shape                : 29
shape_arg            : 44
statement            : 13
step                 : 48
t_f                  : 26
term                 : 66 67 68 70
tf                   : 38
time_mes             : 75 84 87
type                 : 21
value                : 33 78 84 85 90 96 137

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . const_block main_proc
    (2) const_block -> . const const const const const block
    (74) const -> . TIMER ASSIGN INT SEMICOLON
    (75) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (76) const -> . dimension ASSIGN INT SEMICOLON
    (77) const -> . CUBO ASSIGN INT SEMICOLON
    (123) dimension -> . DIMFILAS
    (124) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    program                        shift and go to state 1
    const_block                    shift and go to state 2
    const                          shift and go to state 3
    dimension                      shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> const_block . main_proc
    (62) main_proc -> . MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block

    MAIN            shift and go to state 11

    main_proc                      shift and go to state 10

state 3

    (2) const_block -> const . const const const const block
    (74) const -> . TIMER ASSIGN INT SEMICOLON
    (75) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (76) const -> . dimension ASSIGN INT SEMICOLON
    (77) const -> . CUBO ASSIGN INT SEMICOLON
    (123) dimension -> . DIMFILAS
    (124) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 12
    dimension                      shift and go to state 6

state 4

    (74) const -> TIMER . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 13


state 5

    (75) const -> RANGOTIMER . ASSIGN time_mes SEMICOLON

    ASSIGN          shift and go to state 14


state 6

    (76) const -> dimension . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 15


state 7

    (77) const -> CUBO . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 16


state 8

    (123) dimension -> DIMFILAS .

    ASSIGN          reduce using rule 123 (dimension -> DIMFILAS .)


state 9

    (124) dimension -> DIMCOLUMNAS .

    ASSIGN          reduce using rule 124 (dimension -> DIMCOLUMNAS .)


state 10

    (1) program -> const_block main_proc .

    $end            reduce using rule 1 (program -> const_block main_proc .)


state 11

    (62) main_proc -> MAIN . LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block

    LPARENT         shift and go to state 17


state 12

    (2) const_block -> const const . const const const block
    (74) const -> . TIMER ASSIGN INT SEMICOLON
    (75) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (76) const -> . dimension ASSIGN INT SEMICOLON
    (77) const -> . CUBO ASSIGN INT SEMICOLON
    (123) dimension -> . DIMFILAS
    (124) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 18
    dimension                      shift and go to state 6

state 13

    (74) const -> TIMER ASSIGN . INT SEMICOLON

    INT             shift and go to state 19


state 14

    (75) const -> RANGOTIMER ASSIGN . time_mes SEMICOLON
    (125) time_mes -> . QUOTES MIL QUOTES
    (126) time_mes -> . QUOTES MIN QUOTES
    (127) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 20

state 15

    (76) const -> dimension ASSIGN . INT SEMICOLON

    INT             shift and go to state 22


state 16

    (77) const -> CUBO ASSIGN . INT SEMICOLON

    INT             shift and go to state 23


state 17

    (62) main_proc -> MAIN LPARENT . RPARENT LCORCH main_body RCORCH SEMICOLON block

    RPARENT         shift and go to state 24


state 18

    (2) const_block -> const const const . const const block
    (74) const -> . TIMER ASSIGN INT SEMICOLON
    (75) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (76) const -> . dimension ASSIGN INT SEMICOLON
    (77) const -> . CUBO ASSIGN INT SEMICOLON
    (123) dimension -> . DIMFILAS
    (124) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 25
    dimension                      shift and go to state 6

state 19

    (74) const -> TIMER ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 26


state 20

    (75) const -> RANGOTIMER ASSIGN time_mes . SEMICOLON

    SEMICOLON       shift and go to state 27


state 21

    (125) time_mes -> QUOTES . MIL QUOTES
    (126) time_mes -> QUOTES . MIN QUOTES
    (127) time_mes -> QUOTES . SEG QUOTES

    MIL             shift and go to state 28
    MIN             shift and go to state 29
    SEG             shift and go to state 30


state 22

    (76) const -> dimension ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 31


state 23

    (77) const -> CUBO ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 32


state 24

    (62) main_proc -> MAIN LPARENT RPARENT . LCORCH main_body RCORCH SEMICOLON block

    LCORCH          shift and go to state 33


state 25

    (2) const_block -> const const const const . const block
    (74) const -> . TIMER ASSIGN INT SEMICOLON
    (75) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (76) const -> . dimension ASSIGN INT SEMICOLON
    (77) const -> . CUBO ASSIGN INT SEMICOLON
    (123) dimension -> . DIMFILAS
    (124) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 34
    dimension                      shift and go to state 6

state 26

    (74) const -> TIMER ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)
    ID              reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 74 (const -> TIMER ASSIGN INT SEMICOLON .)


state 27

    (75) const -> RANGOTIMER ASSIGN time_mes SEMICOLON .

    TIMER           reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    RANGOTIMER      reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    CUBO            reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMFILAS        reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    PROCEDURE       reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    ID              reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    MAIN            reduce using rule 75 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)


state 28

    (125) time_mes -> QUOTES MIL . QUOTES

    QUOTES          shift and go to state 35


state 29

    (126) time_mes -> QUOTES MIN . QUOTES

    QUOTES          shift and go to state 36


state 30

    (127) time_mes -> QUOTES SEG . QUOTES

    QUOTES          shift and go to state 37


state 31

    (76) const -> dimension ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)
    ID              reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 76 (const -> dimension ASSIGN INT SEMICOLON .)


state 32

    (77) const -> CUBO ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)
    ID              reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 77 (const -> CUBO ASSIGN INT SEMICOLON .)


state 33

    (62) main_proc -> MAIN LPARENT RPARENT LCORCH . main_body RCORCH SEMICOLON block
    (63) main_body -> . BEGIN main_block END SEMICOLON

    BEGIN           shift and go to state 39

    main_body                      shift and go to state 38

state 34

    (2) const_block -> const const const const const . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (150) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    MAIN            reduce using rule 150 (empty -> .)
    ID              shift and go to state 47

    block                          shift and go to state 40
    procedure                      shift and go to state 41
    global                         shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 35

    (125) time_mes -> QUOTES MIL QUOTES .

    SEMICOLON       reduce using rule 125 (time_mes -> QUOTES MIL QUOTES .)
    RPARENT         reduce using rule 125 (time_mes -> QUOTES MIL QUOTES .)
    COMMA           reduce using rule 125 (time_mes -> QUOTES MIL QUOTES .)


state 36

    (126) time_mes -> QUOTES MIN QUOTES .

    SEMICOLON       reduce using rule 126 (time_mes -> QUOTES MIN QUOTES .)
    RPARENT         reduce using rule 126 (time_mes -> QUOTES MIN QUOTES .)
    COMMA           reduce using rule 126 (time_mes -> QUOTES MIN QUOTES .)


state 37

    (127) time_mes -> QUOTES SEG QUOTES .

    SEMICOLON       reduce using rule 127 (time_mes -> QUOTES SEG QUOTES .)
    RPARENT         reduce using rule 127 (time_mes -> QUOTES SEG QUOTES .)
    COMMA           reduce using rule 127 (time_mes -> QUOTES SEG QUOTES .)


state 38

    (62) main_proc -> MAIN LPARENT RPARENT LCORCH main_body . RCORCH SEMICOLON block

    RCORCH          shift and go to state 52


state 39

    (63) main_body -> BEGIN . main_block END SEMICOLON
    (64) main_block -> . instruction main_block
    (65) main_block -> . empty
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (150) empty -> .
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_dec SEMICOLON
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult

    END             reduce using rule 150 (empty -> .)
    IF              shift and go to state 72
    TYPE            shift and go to state 73
    LEN             shift and go to state 75
    BLINK           shift and go to state 76
    DELAY           shift and go to state 77
    CALL            shift and go to state 78
    ID              shift and go to state 79
    FOR             shift and go to state 80

    main_block                     shift and go to state 53
    instruction                    shift and go to state 54
    empty                          shift and go to state 55
    function                       shift and go to state 56
    consult                        shift and go to state 57
    cycle                          shift and go to state 58
    statement                      shift and go to state 59
    type                           shift and go to state 60
    insert                         shift and go to state 61
    del                            shift and go to state 62
    len                            shift and go to state 63
    neg                            shift and go to state 64
    t_f                            shift and go to state 65
    blink                          shift and go to state 66
    delay                          shift and go to state 67
    shape                          shift and go to state 68
    delete                         shift and go to state 69
    call                           shift and go to state 70
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 71
    identifier                     shift and go to state 74

state 40

    (2) const_block -> const const const const const block .

    MAIN            reduce using rule 2 (const_block -> const const const const const block .)


state 41

    (3) block -> procedure . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (150) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    MAIN            reduce using rule 150 (empty -> .)
    $end            reduce using rule 150 (empty -> .)
    ID              shift and go to state 47

    procedure                      shift and go to state 41
    block                          shift and go to state 81
    global                         shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 42

    (4) block -> global . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (150) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    MAIN            reduce using rule 150 (empty -> .)
    $end            reduce using rule 150 (empty -> .)
    ID              shift and go to state 47

    global                         shift and go to state 42
    block                          shift and go to state 82
    procedure                      shift and go to state 41
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 43

    (5) block -> empty .

    MAIN            reduce using rule 5 (block -> empty .)
    $end            reduce using rule 5 (block -> empty .)


state 44

    (54) procedure -> PROCEDURE . proc_dec LCORCH body RCORCH SEMICOLON
    (55) proc_dec -> . proc_name LPARENT parameter RPARENT
    (56) proc_name -> . ID

    ID              shift and go to state 85

    proc_dec                       shift and go to state 83
    proc_name                      shift and go to state 84

state 45

    (14) global -> assignment .

    PROCEDURE       reduce using rule 14 (global -> assignment .)
    ID              reduce using rule 14 (global -> assignment .)
    MAIN            reduce using rule 14 (global -> assignment .)
    $end            reduce using rule 14 (global -> assignment .)


state 46

    (19) assignment -> identifier . ASSIGN a_content SEMICOLON
    (20) assignment -> identifier . COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON

    ASSIGN          shift and go to state 86
    COMMA           shift and go to state 87


state 47

    (146) identifier -> ID .
    (108) list_consult -> ID . list_consultT
    (111) mat_consult -> ID . mat_consultT
    (116) 3dmat_consult -> ID . 3dmat_consultT
    (109) list_consultT -> . PARENTCL indice PARENTCR
    (110) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (112) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (113) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (114) mat_consultT -> . PARENTCL TP PARENTCR list_consultT
    (115) mat_consultT -> . PARENTCL indice PARENTCR list_consultT
    (117) 3dmat_consultT -> . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (118) 3dmat_consultT -> . PARENTCL indice PARENTCR mat_consultT

    ASSIGN          reduce using rule 146 (identifier -> ID .)
    COMMA           reduce using rule 146 (identifier -> ID .)
    NE              reduce using rule 146 (identifier -> ID .)
    LT              reduce using rule 146 (identifier -> ID .)
    GT              reduce using rule 146 (identifier -> ID .)
    LTE             reduce using rule 146 (identifier -> ID .)
    GTE             reduce using rule 146 (identifier -> ID .)
    COMPARE         reduce using rule 146 (identifier -> ID .)
    RPARENT         reduce using rule 146 (identifier -> ID .)
    STEP            reduce using rule 146 (identifier -> ID .)
    LCORCH          reduce using rule 146 (identifier -> ID .)
    DOT             reduce using rule 146 (identifier -> ID .)
    PARENTCL        shift and go to state 91

    list_consultT                  shift and go to state 88
    mat_consultT                   shift and go to state 89
    3dmat_consultT                 shift and go to state 90

state 48

    (147) identifier -> consult .

    ASSIGN          reduce using rule 147 (identifier -> consult .)
    COMMA           reduce using rule 147 (identifier -> consult .)
    NE              reduce using rule 147 (identifier -> consult .)
    LT              reduce using rule 147 (identifier -> consult .)
    GT              reduce using rule 147 (identifier -> consult .)
    LTE             reduce using rule 147 (identifier -> consult .)
    GTE             reduce using rule 147 (identifier -> consult .)
    COMPARE         reduce using rule 147 (identifier -> consult .)
    RPARENT         reduce using rule 147 (identifier -> consult .)
    STEP            reduce using rule 147 (identifier -> consult .)
    LCORCH          reduce using rule 147 (identifier -> consult .)


state 49

    (105) consult -> list_consult .

    ASSIGN          reduce using rule 105 (consult -> list_consult .)
    COMMA           reduce using rule 105 (consult -> list_consult .)
    SEMICOLON       reduce using rule 105 (consult -> list_consult .)
    DOT             reduce using rule 105 (consult -> list_consult .)
    NE              reduce using rule 105 (consult -> list_consult .)
    LT              reduce using rule 105 (consult -> list_consult .)
    GT              reduce using rule 105 (consult -> list_consult .)
    LTE             reduce using rule 105 (consult -> list_consult .)
    GTE             reduce using rule 105 (consult -> list_consult .)
    COMPARE         reduce using rule 105 (consult -> list_consult .)
    RPARENT         reduce using rule 105 (consult -> list_consult .)
    STEP            reduce using rule 105 (consult -> list_consult .)
    LCORCH          reduce using rule 105 (consult -> list_consult .)


state 50

    (106) consult -> mat_consult .

    ASSIGN          reduce using rule 106 (consult -> mat_consult .)
    COMMA           reduce using rule 106 (consult -> mat_consult .)
    SEMICOLON       reduce using rule 106 (consult -> mat_consult .)
    DOT             reduce using rule 106 (consult -> mat_consult .)
    NE              reduce using rule 106 (consult -> mat_consult .)
    LT              reduce using rule 106 (consult -> mat_consult .)
    GT              reduce using rule 106 (consult -> mat_consult .)
    LTE             reduce using rule 106 (consult -> mat_consult .)
    GTE             reduce using rule 106 (consult -> mat_consult .)
    COMPARE         reduce using rule 106 (consult -> mat_consult .)
    RPARENT         reduce using rule 106 (consult -> mat_consult .)
    STEP            reduce using rule 106 (consult -> mat_consult .)
    LCORCH          reduce using rule 106 (consult -> mat_consult .)


state 51

    (107) consult -> 3dmat_consult .

    ASSIGN          reduce using rule 107 (consult -> 3dmat_consult .)
    COMMA           reduce using rule 107 (consult -> 3dmat_consult .)
    SEMICOLON       reduce using rule 107 (consult -> 3dmat_consult .)
    DOT             reduce using rule 107 (consult -> 3dmat_consult .)
    NE              reduce using rule 107 (consult -> 3dmat_consult .)
    LT              reduce using rule 107 (consult -> 3dmat_consult .)
    GT              reduce using rule 107 (consult -> 3dmat_consult .)
    LTE             reduce using rule 107 (consult -> 3dmat_consult .)
    GTE             reduce using rule 107 (consult -> 3dmat_consult .)
    COMPARE         reduce using rule 107 (consult -> 3dmat_consult .)
    RPARENT         reduce using rule 107 (consult -> 3dmat_consult .)
    STEP            reduce using rule 107 (consult -> 3dmat_consult .)
    LCORCH          reduce using rule 107 (consult -> 3dmat_consult .)


state 52

    (62) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH . SEMICOLON block

    SEMICOLON       shift and go to state 92


state 53

    (63) main_body -> BEGIN main_block . END SEMICOLON

    END             shift and go to state 93


state 54

    (64) main_block -> instruction . main_block
    (64) main_block -> . instruction main_block
    (65) main_block -> . empty
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (150) empty -> .
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_dec SEMICOLON
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult

    END             reduce using rule 150 (empty -> .)
    IF              shift and go to state 72
    TYPE            shift and go to state 73
    LEN             shift and go to state 75
    BLINK           shift and go to state 76
    DELAY           shift and go to state 77
    CALL            shift and go to state 78
    ID              shift and go to state 79
    FOR             shift and go to state 80

    instruction                    shift and go to state 54
    main_block                     shift and go to state 94
    empty                          shift and go to state 55
    function                       shift and go to state 56
    consult                        shift and go to state 57
    cycle                          shift and go to state 58
    statement                      shift and go to state 59
    type                           shift and go to state 60
    insert                         shift and go to state 61
    del                            shift and go to state 62
    len                            shift and go to state 63
    neg                            shift and go to state 64
    t_f                            shift and go to state 65
    blink                          shift and go to state 66
    delay                          shift and go to state 67
    shape                          shift and go to state 68
    delete                         shift and go to state 69
    call                           shift and go to state 70
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 71
    identifier                     shift and go to state 74

state 55

    (65) main_block -> empty .

    END             reduce using rule 65 (main_block -> empty .)


state 56

    (10) instruction -> function .

    IF              reduce using rule 10 (instruction -> function .)
    TYPE            reduce using rule 10 (instruction -> function .)
    LEN             reduce using rule 10 (instruction -> function .)
    BLINK           reduce using rule 10 (instruction -> function .)
    DELAY           reduce using rule 10 (instruction -> function .)
    CALL            reduce using rule 10 (instruction -> function .)
    ID              reduce using rule 10 (instruction -> function .)
    FOR             reduce using rule 10 (instruction -> function .)
    END             reduce using rule 10 (instruction -> function .)
    RCORCH          reduce using rule 10 (instruction -> function .)


state 57

    (11) instruction -> consult . SEMICOLON
    (147) identifier -> consult .

    SEMICOLON       shift and go to state 95
    DOT             reduce using rule 147 (identifier -> consult .)
    ASSIGN          reduce using rule 147 (identifier -> consult .)
    COMMA           reduce using rule 147 (identifier -> consult .)


state 58

    (12) instruction -> cycle .

    IF              reduce using rule 12 (instruction -> cycle .)
    TYPE            reduce using rule 12 (instruction -> cycle .)
    LEN             reduce using rule 12 (instruction -> cycle .)
    BLINK           reduce using rule 12 (instruction -> cycle .)
    DELAY           reduce using rule 12 (instruction -> cycle .)
    CALL            reduce using rule 12 (instruction -> cycle .)
    ID              reduce using rule 12 (instruction -> cycle .)
    FOR             reduce using rule 12 (instruction -> cycle .)
    END             reduce using rule 12 (instruction -> cycle .)
    RCORCH          reduce using rule 12 (instruction -> cycle .)


state 59

    (13) instruction -> statement .

    IF              reduce using rule 13 (instruction -> statement .)
    TYPE            reduce using rule 13 (instruction -> statement .)
    LEN             reduce using rule 13 (instruction -> statement .)
    BLINK           reduce using rule 13 (instruction -> statement .)
    DELAY           reduce using rule 13 (instruction -> statement .)
    CALL            reduce using rule 13 (instruction -> statement .)
    ID              reduce using rule 13 (instruction -> statement .)
    FOR             reduce using rule 13 (instruction -> statement .)
    END             reduce using rule 13 (instruction -> statement .)
    RCORCH          reduce using rule 13 (instruction -> statement .)


state 60

    (21) function -> type .

    IF              reduce using rule 21 (function -> type .)
    TYPE            reduce using rule 21 (function -> type .)
    LEN             reduce using rule 21 (function -> type .)
    BLINK           reduce using rule 21 (function -> type .)
    DELAY           reduce using rule 21 (function -> type .)
    CALL            reduce using rule 21 (function -> type .)
    ID              reduce using rule 21 (function -> type .)
    FOR             reduce using rule 21 (function -> type .)
    END             reduce using rule 21 (function -> type .)
    RCORCH          reduce using rule 21 (function -> type .)


state 61

    (22) function -> insert .

    IF              reduce using rule 22 (function -> insert .)
    TYPE            reduce using rule 22 (function -> insert .)
    LEN             reduce using rule 22 (function -> insert .)
    BLINK           reduce using rule 22 (function -> insert .)
    DELAY           reduce using rule 22 (function -> insert .)
    CALL            reduce using rule 22 (function -> insert .)
    ID              reduce using rule 22 (function -> insert .)
    FOR             reduce using rule 22 (function -> insert .)
    END             reduce using rule 22 (function -> insert .)
    RCORCH          reduce using rule 22 (function -> insert .)


state 62

    (23) function -> del .

    IF              reduce using rule 23 (function -> del .)
    TYPE            reduce using rule 23 (function -> del .)
    LEN             reduce using rule 23 (function -> del .)
    BLINK           reduce using rule 23 (function -> del .)
    DELAY           reduce using rule 23 (function -> del .)
    CALL            reduce using rule 23 (function -> del .)
    ID              reduce using rule 23 (function -> del .)
    FOR             reduce using rule 23 (function -> del .)
    END             reduce using rule 23 (function -> del .)
    RCORCH          reduce using rule 23 (function -> del .)


state 63

    (24) function -> len .

    IF              reduce using rule 24 (function -> len .)
    TYPE            reduce using rule 24 (function -> len .)
    LEN             reduce using rule 24 (function -> len .)
    BLINK           reduce using rule 24 (function -> len .)
    DELAY           reduce using rule 24 (function -> len .)
    CALL            reduce using rule 24 (function -> len .)
    ID              reduce using rule 24 (function -> len .)
    FOR             reduce using rule 24 (function -> len .)
    END             reduce using rule 24 (function -> len .)
    RCORCH          reduce using rule 24 (function -> len .)


state 64

    (25) function -> neg .

    IF              reduce using rule 25 (function -> neg .)
    TYPE            reduce using rule 25 (function -> neg .)
    LEN             reduce using rule 25 (function -> neg .)
    BLINK           reduce using rule 25 (function -> neg .)
    DELAY           reduce using rule 25 (function -> neg .)
    CALL            reduce using rule 25 (function -> neg .)
    ID              reduce using rule 25 (function -> neg .)
    FOR             reduce using rule 25 (function -> neg .)
    END             reduce using rule 25 (function -> neg .)
    RCORCH          reduce using rule 25 (function -> neg .)


state 65

    (26) function -> t_f .

    IF              reduce using rule 26 (function -> t_f .)
    TYPE            reduce using rule 26 (function -> t_f .)
    LEN             reduce using rule 26 (function -> t_f .)
    BLINK           reduce using rule 26 (function -> t_f .)
    DELAY           reduce using rule 26 (function -> t_f .)
    CALL            reduce using rule 26 (function -> t_f .)
    ID              reduce using rule 26 (function -> t_f .)
    FOR             reduce using rule 26 (function -> t_f .)
    END             reduce using rule 26 (function -> t_f .)
    RCORCH          reduce using rule 26 (function -> t_f .)


state 66

    (27) function -> blink .

    IF              reduce using rule 27 (function -> blink .)
    TYPE            reduce using rule 27 (function -> blink .)
    LEN             reduce using rule 27 (function -> blink .)
    BLINK           reduce using rule 27 (function -> blink .)
    DELAY           reduce using rule 27 (function -> blink .)
    CALL            reduce using rule 27 (function -> blink .)
    ID              reduce using rule 27 (function -> blink .)
    FOR             reduce using rule 27 (function -> blink .)
    END             reduce using rule 27 (function -> blink .)
    RCORCH          reduce using rule 27 (function -> blink .)


state 67

    (28) function -> delay .

    IF              reduce using rule 28 (function -> delay .)
    TYPE            reduce using rule 28 (function -> delay .)
    LEN             reduce using rule 28 (function -> delay .)
    BLINK           reduce using rule 28 (function -> delay .)
    DELAY           reduce using rule 28 (function -> delay .)
    CALL            reduce using rule 28 (function -> delay .)
    ID              reduce using rule 28 (function -> delay .)
    FOR             reduce using rule 28 (function -> delay .)
    END             reduce using rule 28 (function -> delay .)
    RCORCH          reduce using rule 28 (function -> delay .)


state 68

    (29) function -> shape .

    IF              reduce using rule 29 (function -> shape .)
    TYPE            reduce using rule 29 (function -> shape .)
    LEN             reduce using rule 29 (function -> shape .)
    BLINK           reduce using rule 29 (function -> shape .)
    DELAY           reduce using rule 29 (function -> shape .)
    CALL            reduce using rule 29 (function -> shape .)
    ID              reduce using rule 29 (function -> shape .)
    FOR             reduce using rule 29 (function -> shape .)
    END             reduce using rule 29 (function -> shape .)
    RCORCH          reduce using rule 29 (function -> shape .)


state 69

    (30) function -> delete .

    IF              reduce using rule 30 (function -> delete .)
    TYPE            reduce using rule 30 (function -> delete .)
    LEN             reduce using rule 30 (function -> delete .)
    BLINK           reduce using rule 30 (function -> delete .)
    DELAY           reduce using rule 30 (function -> delete .)
    CALL            reduce using rule 30 (function -> delete .)
    ID              reduce using rule 30 (function -> delete .)
    FOR             reduce using rule 30 (function -> delete .)
    END             reduce using rule 30 (function -> delete .)
    RCORCH          reduce using rule 30 (function -> delete .)


state 70

    (31) function -> call .

    IF              reduce using rule 31 (function -> call .)
    TYPE            reduce using rule 31 (function -> call .)
    LEN             reduce using rule 31 (function -> call .)
    BLINK           reduce using rule 31 (function -> call .)
    DELAY           reduce using rule 31 (function -> call .)
    CALL            reduce using rule 31 (function -> call .)
    ID              reduce using rule 31 (function -> call .)
    FOR             reduce using rule 31 (function -> call .)
    END             reduce using rule 31 (function -> call .)
    RCORCH          reduce using rule 31 (function -> call .)


state 71

    (47) cycle -> for .

    IF              reduce using rule 47 (cycle -> for .)
    TYPE            reduce using rule 47 (cycle -> for .)
    LEN             reduce using rule 47 (cycle -> for .)
    BLINK           reduce using rule 47 (cycle -> for .)
    DELAY           reduce using rule 47 (cycle -> for .)
    CALL            reduce using rule 47 (cycle -> for .)
    ID              reduce using rule 47 (cycle -> for .)
    FOR             reduce using rule 47 (cycle -> for .)
    END             reduce using rule 47 (cycle -> for .)
    RCORCH          reduce using rule 47 (cycle -> for .)


state 72

    (51) statement -> IF . LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement

    LPARENT         shift and go to state 96


state 73

    (32) type -> TYPE . LPARENT identifier RPARENT SEMICOLON

    LPARENT         shift and go to state 97


state 74

    (34) insert -> identifier . DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> identifier . DOT DEL LPARENT INT RPARENT SEMICOLON
    (37) neg -> identifier . DOT NEG SEMICOLON
    (38) t_f -> identifier . DOT tf SEMICOLON
    (44) shape -> identifier . DOT shape_arg SEMICOLON
    (45) delete -> identifier . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON

    DOT             shift and go to state 98


state 75

    (36) len -> LEN . LPARENT identifier RPARENT SEMICOLON

    LPARENT         shift and go to state 99


state 76

    (39) blink -> BLINK . LPARENT b_content RPARENT SEMICOLON

    LPARENT         shift and go to state 100


state 77

    (40) delay -> DELAY . LPARENT d_content RPARENT SEMICOLON

    LPARENT         shift and go to state 101


state 78

    (46) call -> CALL . proc_dec SEMICOLON
    (55) proc_dec -> . proc_name LPARENT parameter RPARENT
    (56) proc_name -> . ID

    ID              shift and go to state 85

    proc_dec                       shift and go to state 102
    proc_name                      shift and go to state 84

state 79

    (108) list_consult -> ID . list_consultT
    (111) mat_consult -> ID . mat_consultT
    (116) 3dmat_consult -> ID . 3dmat_consultT
    (146) identifier -> ID .
    (109) list_consultT -> . PARENTCL indice PARENTCR
    (110) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (112) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (113) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (114) mat_consultT -> . PARENTCL TP PARENTCR list_consultT
    (115) mat_consultT -> . PARENTCL indice PARENTCR list_consultT
    (117) 3dmat_consultT -> . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (118) 3dmat_consultT -> . PARENTCL indice PARENTCR mat_consultT

    DOT             reduce using rule 146 (identifier -> ID .)
    PARENTCL        shift and go to state 91

    list_consultT                  shift and go to state 88
    mat_consultT                   shift and go to state 89
    3dmat_consultT                 shift and go to state 90

state 80

    (48) for -> FOR . ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    ID              shift and go to state 103


state 81

    (3) block -> procedure block .

    MAIN            reduce using rule 3 (block -> procedure block .)
    $end            reduce using rule 3 (block -> procedure block .)


state 82

    (4) block -> global block .

    MAIN            reduce using rule 4 (block -> global block .)
    $end            reduce using rule 4 (block -> global block .)


state 83

    (54) procedure -> PROCEDURE proc_dec . LCORCH body RCORCH SEMICOLON

    LCORCH          shift and go to state 104


state 84

    (55) proc_dec -> proc_name . LPARENT parameter RPARENT

    LPARENT         shift and go to state 105


state 85

    (56) proc_name -> ID .

    LPARENT         reduce using rule 56 (proc_name -> ID .)


state 86

    (19) assignment -> identifier ASSIGN . a_content SEMICOLON
    (33) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (78) a_content -> . value
    (79) a_content -> . arithmetic
    (80) a_content -> . list
    (81) a_content -> . mat
    (82) a_content -> . 3dmat
    (83) a_content -> . consult
    (135) value -> . FALSE
    (136) value -> . TRUE
    (66) arithmetic -> . term
    (67) arithmetic -> . adding_operator term
    (68) arithmetic -> . arithmetic adding_operator term
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR
    (97) mat -> . PARENTCL mat_term PARENTCR
    (101) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (69) term -> . factor
    (70) term -> . term multiplying_operator factor
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 107
    FALSE           shift and go to state 116
    TRUE            shift and go to state 117
    PARENTCL        shift and go to state 120
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    ID              shift and go to state 124
    INT             shift and go to state 109
    LPARENT         shift and go to state 108

    a_content                      shift and go to state 106
    value                          shift and go to state 110
    arithmetic                     shift and go to state 111
    list                           shift and go to state 112
    mat                            shift and go to state 113
    3dmat                          shift and go to state 114
    consult                        shift and go to state 115
    term                           shift and go to state 118
    adding_operator                shift and go to state 119
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    factor                         shift and go to state 121

state 87

    (20) assignment -> identifier COMMA . identifier ASSIGN a_content COMMA a_content SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    identifier                     shift and go to state 125
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 88

    (108) list_consult -> ID list_consultT .

    ASSIGN          reduce using rule 108 (list_consult -> ID list_consultT .)
    COMMA           reduce using rule 108 (list_consult -> ID list_consultT .)
    SEMICOLON       reduce using rule 108 (list_consult -> ID list_consultT .)
    DOT             reduce using rule 108 (list_consult -> ID list_consultT .)
    NE              reduce using rule 108 (list_consult -> ID list_consultT .)
    LT              reduce using rule 108 (list_consult -> ID list_consultT .)
    GT              reduce using rule 108 (list_consult -> ID list_consultT .)
    LTE             reduce using rule 108 (list_consult -> ID list_consultT .)
    GTE             reduce using rule 108 (list_consult -> ID list_consultT .)
    COMPARE         reduce using rule 108 (list_consult -> ID list_consultT .)
    RPARENT         reduce using rule 108 (list_consult -> ID list_consultT .)
    STEP            reduce using rule 108 (list_consult -> ID list_consultT .)
    LCORCH          reduce using rule 108 (list_consult -> ID list_consultT .)


state 89

    (111) mat_consult -> ID mat_consultT .

    ASSIGN          reduce using rule 111 (mat_consult -> ID mat_consultT .)
    COMMA           reduce using rule 111 (mat_consult -> ID mat_consultT .)
    SEMICOLON       reduce using rule 111 (mat_consult -> ID mat_consultT .)
    DOT             reduce using rule 111 (mat_consult -> ID mat_consultT .)
    NE              reduce using rule 111 (mat_consult -> ID mat_consultT .)
    LT              reduce using rule 111 (mat_consult -> ID mat_consultT .)
    GT              reduce using rule 111 (mat_consult -> ID mat_consultT .)
    LTE             reduce using rule 111 (mat_consult -> ID mat_consultT .)
    GTE             reduce using rule 111 (mat_consult -> ID mat_consultT .)
    COMPARE         reduce using rule 111 (mat_consult -> ID mat_consultT .)
    RPARENT         reduce using rule 111 (mat_consult -> ID mat_consultT .)
    STEP            reduce using rule 111 (mat_consult -> ID mat_consultT .)
    LCORCH          reduce using rule 111 (mat_consult -> ID mat_consultT .)


state 90

    (116) 3dmat_consult -> ID 3dmat_consultT .

    ASSIGN          reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    COMMA           reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    SEMICOLON       reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    DOT             reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    NE              reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    LT              reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    GT              reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    LTE             reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    GTE             reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    COMPARE         reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    RPARENT         reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    STEP            reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)
    LCORCH          reduce using rule 116 (3dmat_consult -> ID 3dmat_consultT .)


state 91

    (109) list_consultT -> PARENTCL . indice PARENTCR
    (110) list_consultT -> PARENTCL . indice TP indice PARENTCR
    (112) mat_consultT -> PARENTCL . indice COMMA indice PARENTCR
    (113) mat_consultT -> PARENTCL . TP COMMA indice PARENTCR
    (114) mat_consultT -> PARENTCL . TP PARENTCR list_consultT
    (115) mat_consultT -> PARENTCL . indice PARENTCR list_consultT
    (117) 3dmat_consultT -> PARENTCL . indice COMMA indice COMMA indice PARENTCR
    (118) 3dmat_consultT -> PARENTCL . indice PARENTCR mat_consultT
    (119) indice -> . INT
    (120) indice -> . ID

    TP              shift and go to state 127
    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 126

state 92

    (62) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (150) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    $end            reduce using rule 150 (empty -> .)
    ID              shift and go to state 47

    block                          shift and go to state 130
    procedure                      shift and go to state 41
    global                         shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 93

    (63) main_body -> BEGIN main_block END . SEMICOLON

    SEMICOLON       shift and go to state 131


state 94

    (64) main_block -> instruction main_block .

    END             reduce using rule 64 (main_block -> instruction main_block .)


state 95

    (11) instruction -> consult SEMICOLON .

    IF              reduce using rule 11 (instruction -> consult SEMICOLON .)
    TYPE            reduce using rule 11 (instruction -> consult SEMICOLON .)
    LEN             reduce using rule 11 (instruction -> consult SEMICOLON .)
    BLINK           reduce using rule 11 (instruction -> consult SEMICOLON .)
    DELAY           reduce using rule 11 (instruction -> consult SEMICOLON .)
    CALL            reduce using rule 11 (instruction -> consult SEMICOLON .)
    ID              reduce using rule 11 (instruction -> consult SEMICOLON .)
    FOR             reduce using rule 11 (instruction -> consult SEMICOLON .)
    END             reduce using rule 11 (instruction -> consult SEMICOLON .)
    RCORCH          reduce using rule 11 (instruction -> consult SEMICOLON .)


state 96

    (51) statement -> IF LPARENT . iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (148) iterable -> . identifier
    (149) iterable -> . INT
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 134
    ID              shift and go to state 47

    iterable                       shift and go to state 132
    identifier                     shift and go to state 133
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 97

    (32) type -> TYPE LPARENT . identifier RPARENT SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    identifier                     shift and go to state 135
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 98

    (34) insert -> identifier DOT . INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> identifier DOT . DEL LPARENT INT RPARENT SEMICOLON
    (37) neg -> identifier DOT . NEG SEMICOLON
    (38) t_f -> identifier DOT . tf SEMICOLON
    (44) shape -> identifier DOT . shape_arg SEMICOLON
    (45) delete -> identifier DOT . DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (88) tf -> . T
    (89) tf -> . F
    (41) shape_arg -> . SHAPEF
    (42) shape_arg -> . SHAPEC
    (43) shape_arg -> . SHAPEA

    INSERT          shift and go to state 136
    DEL             shift and go to state 137
    NEG             shift and go to state 138
    DELETE          shift and go to state 141
    T               shift and go to state 142
    F               shift and go to state 143
    SHAPEF          shift and go to state 144
    SHAPEC          shift and go to state 145
    SHAPEA          shift and go to state 146

    tf                             shift and go to state 139
    shape_arg                      shift and go to state 140

state 99

    (36) len -> LEN LPARENT . identifier RPARENT SEMICOLON
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    identifier                     shift and go to state 147
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 100

    (39) blink -> BLINK LPARENT . b_content RPARENT SEMICOLON
    (84) b_content -> . identifier COMMA INT COMMA time_mes COMMA value
    (85) b_content -> . identifier COMMA value
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    b_content                      shift and go to state 148
    identifier                     shift and go to state 149
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 101

    (40) delay -> DELAY LPARENT . d_content RPARENT SEMICOLON
    (86) d_content -> . empty
    (87) d_content -> . INT COMMA time_mes
    (150) empty -> .

    INT             shift and go to state 152
    RPARENT         reduce using rule 150 (empty -> .)

    d_content                      shift and go to state 150
    empty                          shift and go to state 151

state 102

    (46) call -> CALL proc_dec . SEMICOLON

    SEMICOLON       shift and go to state 153


state 103

    (48) for -> FOR ID . IN iterable step LCORCH alt_block RCORCH SEMICOLON

    IN              shift and go to state 154


state 104

    (54) procedure -> PROCEDURE proc_dec LCORCH . body RCORCH SEMICOLON
    (61) body -> . global_call BEGIN alt_block END SEMICOLON
    (15) global_call -> . GLOBAL global_term SEMICOLON global_call
    (16) global_call -> . empty
    (150) empty -> .

    GLOBAL          shift and go to state 157
    BEGIN           reduce using rule 150 (empty -> .)

    body                           shift and go to state 155
    global_call                    shift and go to state 156
    empty                          shift and go to state 158

state 105

    (55) proc_dec -> proc_name LPARENT . parameter RPARENT
    (57) parameter -> . proc_param
    (58) parameter -> . proc_param COMMA parameter
    (59) parameter -> . empty
    (60) proc_param -> . ID
    (150) empty -> .

    ID              shift and go to state 162
    RPARENT         reduce using rule 150 (empty -> .)

    parameter                      shift and go to state 159
    proc_param                     shift and go to state 160
    empty                          shift and go to state 161

state 106

    (19) assignment -> identifier ASSIGN a_content . SEMICOLON

    SEMICOLON       shift and go to state 163


state 107

    (33) a_content -> RANGE . LPARENT INT COMMA value RPARENT

    LPARENT         shift and go to state 164


state 108

    (73) factor -> LPARENT . arithmetic RPARENT
    (66) arithmetic -> . term
    (67) arithmetic -> . adding_operator term
    (68) arithmetic -> . arithmetic adding_operator term
    (69) term -> . factor
    (70) term -> . term multiplying_operator factor
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    INT             shift and go to state 109
    ID              shift and go to state 166
    LPARENT         shift and go to state 108

    arithmetic                     shift and go to state 165
    term                           shift and go to state 118
    adding_operator                shift and go to state 119
    factor                         shift and go to state 121

state 109

    (71) factor -> INT .

    TIMES           reduce using rule 71 (factor -> INT .)
    EXP             reduce using rule 71 (factor -> INT .)
    DIVIDE          reduce using rule 71 (factor -> INT .)
    DIVENT          reduce using rule 71 (factor -> INT .)
    MOD             reduce using rule 71 (factor -> INT .)
    PLUS            reduce using rule 71 (factor -> INT .)
    MINUS           reduce using rule 71 (factor -> INT .)
    SEMICOLON       reduce using rule 71 (factor -> INT .)
    RPARENT         reduce using rule 71 (factor -> INT .)
    COMMA           reduce using rule 71 (factor -> INT .)


state 110

    (78) a_content -> value .

    SEMICOLON       reduce using rule 78 (a_content -> value .)
    COMMA           reduce using rule 78 (a_content -> value .)


state 111

    (79) a_content -> arithmetic .
    (68) arithmetic -> arithmetic . adding_operator term
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS

    SEMICOLON       reduce using rule 79 (a_content -> arithmetic .)
    COMMA           reduce using rule 79 (a_content -> arithmetic .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123

    adding_operator                shift and go to state 167

state 112

    (80) a_content -> list .

    SEMICOLON       reduce using rule 80 (a_content -> list .)
    COMMA           reduce using rule 80 (a_content -> list .)


state 113

    (81) a_content -> mat .

    SEMICOLON       reduce using rule 81 (a_content -> mat .)
    COMMA           reduce using rule 81 (a_content -> mat .)


state 114

    (82) a_content -> 3dmat .

    SEMICOLON       reduce using rule 82 (a_content -> 3dmat .)
    COMMA           reduce using rule 82 (a_content -> 3dmat .)


state 115

    (83) a_content -> consult .

    SEMICOLON       reduce using rule 83 (a_content -> consult .)
    COMMA           reduce using rule 83 (a_content -> consult .)


state 116

    (135) value -> FALSE .

    SEMICOLON       reduce using rule 135 (value -> FALSE .)
    COMMA           reduce using rule 135 (value -> FALSE .)
    PARENTCR        reduce using rule 135 (value -> FALSE .)
    RPARENT         reduce using rule 135 (value -> FALSE .)


state 117

    (136) value -> TRUE .

    SEMICOLON       reduce using rule 136 (value -> TRUE .)
    COMMA           reduce using rule 136 (value -> TRUE .)
    PARENTCR        reduce using rule 136 (value -> TRUE .)
    RPARENT         reduce using rule 136 (value -> TRUE .)


state 118

    (66) arithmetic -> term .
    (70) term -> term . multiplying_operator factor
    (130) multiplying_operator -> . TIMES
    (131) multiplying_operator -> . EXP
    (132) multiplying_operator -> . DIVIDE
    (133) multiplying_operator -> . DIVENT
    (134) multiplying_operator -> . MOD

    PLUS            reduce using rule 66 (arithmetic -> term .)
    MINUS           reduce using rule 66 (arithmetic -> term .)
    SEMICOLON       reduce using rule 66 (arithmetic -> term .)
    RPARENT         reduce using rule 66 (arithmetic -> term .)
    COMMA           reduce using rule 66 (arithmetic -> term .)
    TIMES           shift and go to state 169
    EXP             shift and go to state 170
    DIVIDE          shift and go to state 171
    DIVENT          shift and go to state 172
    MOD             shift and go to state 173

    multiplying_operator           shift and go to state 168

state 119

    (67) arithmetic -> adding_operator . term
    (69) term -> . factor
    (70) term -> . term multiplying_operator factor
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 109
    ID              shift and go to state 166
    LPARENT         shift and go to state 108

    term                           shift and go to state 174
    factor                         shift and go to state 121

state 120

    (92) list -> PARENTCL . list_term PARENTCR
    (93) list -> PARENTCL . empty PARENTCR
    (97) mat -> PARENTCL . mat_term PARENTCR
    (101) 3dmat -> PARENTCL . 3dmat_term PARENTCR
    (94) list_term -> . list_value COMMA list_term
    (95) list_term -> . list_value
    (150) empty -> .
    (98) mat_term -> . mat_value COMMA mat_term
    (99) mat_term -> . mat_value
    (102) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (103) 3dmat_term -> . 3dmat_value
    (96) list_value -> . value
    (100) mat_value -> . list
    (104) 3dmat_value -> . mat
    (135) value -> . FALSE
    (136) value -> . TRUE
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR
    (97) mat -> . PARENTCL mat_term PARENTCR

    PARENTCR        reduce using rule 150 (empty -> .)
    FALSE           shift and go to state 116
    TRUE            shift and go to state 117
    PARENTCL        shift and go to state 175

    list_term                      shift and go to state 176
    empty                          shift and go to state 177
    mat_term                       shift and go to state 178
    3dmat_term                     shift and go to state 179
    list_value                     shift and go to state 180
    mat_value                      shift and go to state 181
    3dmat_value                    shift and go to state 182
    value                          shift and go to state 183
    list                           shift and go to state 184
    mat                            shift and go to state 185

state 121

    (69) term -> factor .

    TIMES           reduce using rule 69 (term -> factor .)
    EXP             reduce using rule 69 (term -> factor .)
    DIVIDE          reduce using rule 69 (term -> factor .)
    DIVENT          reduce using rule 69 (term -> factor .)
    MOD             reduce using rule 69 (term -> factor .)
    PLUS            reduce using rule 69 (term -> factor .)
    MINUS           reduce using rule 69 (term -> factor .)
    SEMICOLON       reduce using rule 69 (term -> factor .)
    RPARENT         reduce using rule 69 (term -> factor .)
    COMMA           reduce using rule 69 (term -> factor .)


state 122

    (128) adding_operator -> PLUS .

    INT             reduce using rule 128 (adding_operator -> PLUS .)
    ID              reduce using rule 128 (adding_operator -> PLUS .)
    LPARENT         reduce using rule 128 (adding_operator -> PLUS .)


state 123

    (129) adding_operator -> MINUS .

    INT             reduce using rule 129 (adding_operator -> MINUS .)
    ID              reduce using rule 129 (adding_operator -> MINUS .)
    LPARENT         reduce using rule 129 (adding_operator -> MINUS .)


state 124

    (108) list_consult -> ID . list_consultT
    (111) mat_consult -> ID . mat_consultT
    (116) 3dmat_consult -> ID . 3dmat_consultT
    (72) factor -> ID .
    (109) list_consultT -> . PARENTCL indice PARENTCR
    (110) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (112) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (113) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (114) mat_consultT -> . PARENTCL TP PARENTCR list_consultT
    (115) mat_consultT -> . PARENTCL indice PARENTCR list_consultT
    (117) 3dmat_consultT -> . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (118) 3dmat_consultT -> . PARENTCL indice PARENTCR mat_consultT

    TIMES           reduce using rule 72 (factor -> ID .)
    EXP             reduce using rule 72 (factor -> ID .)
    DIVIDE          reduce using rule 72 (factor -> ID .)
    DIVENT          reduce using rule 72 (factor -> ID .)
    MOD             reduce using rule 72 (factor -> ID .)
    PLUS            reduce using rule 72 (factor -> ID .)
    MINUS           reduce using rule 72 (factor -> ID .)
    SEMICOLON       reduce using rule 72 (factor -> ID .)
    COMMA           reduce using rule 72 (factor -> ID .)
    PARENTCL        shift and go to state 91

    list_consultT                  shift and go to state 88
    mat_consultT                   shift and go to state 89
    3dmat_consultT                 shift and go to state 90

state 125

    (20) assignment -> identifier COMMA identifier . ASSIGN a_content COMMA a_content SEMICOLON

    ASSIGN          shift and go to state 186


state 126

    (109) list_consultT -> PARENTCL indice . PARENTCR
    (110) list_consultT -> PARENTCL indice . TP indice PARENTCR
    (112) mat_consultT -> PARENTCL indice . COMMA indice PARENTCR
    (115) mat_consultT -> PARENTCL indice . PARENTCR list_consultT
    (117) 3dmat_consultT -> PARENTCL indice . COMMA indice COMMA indice PARENTCR
    (118) 3dmat_consultT -> PARENTCL indice . PARENTCR mat_consultT

    PARENTCR        shift and go to state 187
    TP              shift and go to state 188
    COMMA           shift and go to state 189


state 127

    (113) mat_consultT -> PARENTCL TP . COMMA indice PARENTCR
    (114) mat_consultT -> PARENTCL TP . PARENTCR list_consultT

    COMMA           shift and go to state 190
    PARENTCR        shift and go to state 191


state 128

    (119) indice -> INT .

    PARENTCR        reduce using rule 119 (indice -> INT .)
    TP              reduce using rule 119 (indice -> INT .)
    COMMA           reduce using rule 119 (indice -> INT .)


state 129

    (120) indice -> ID .

    PARENTCR        reduce using rule 120 (indice -> ID .)
    TP              reduce using rule 120 (indice -> ID .)
    COMMA           reduce using rule 120 (indice -> ID .)


state 130

    (62) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block .

    $end            reduce using rule 62 (main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block .)


state 131

    (63) main_body -> BEGIN main_block END SEMICOLON .

    RCORCH          reduce using rule 63 (main_body -> BEGIN main_block END SEMICOLON .)


state 132

    (51) statement -> IF LPARENT iterable . relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (139) relation -> . ASSIGN
    (140) relation -> . NE
    (141) relation -> . LT
    (142) relation -> . GT
    (143) relation -> . LTE
    (144) relation -> . GTE
    (145) relation -> . COMPARE

    ASSIGN          shift and go to state 193
    NE              shift and go to state 194
    LT              shift and go to state 195
    GT              shift and go to state 196
    LTE             shift and go to state 197
    GTE             shift and go to state 198
    COMPARE         shift and go to state 199

    relation                       shift and go to state 192

state 133

    (148) iterable -> identifier .

    ASSIGN          reduce using rule 148 (iterable -> identifier .)
    NE              reduce using rule 148 (iterable -> identifier .)
    LT              reduce using rule 148 (iterable -> identifier .)
    GT              reduce using rule 148 (iterable -> identifier .)
    LTE             reduce using rule 148 (iterable -> identifier .)
    GTE             reduce using rule 148 (iterable -> identifier .)
    COMPARE         reduce using rule 148 (iterable -> identifier .)
    STEP            reduce using rule 148 (iterable -> identifier .)
    LCORCH          reduce using rule 148 (iterable -> identifier .)


state 134

    (149) iterable -> INT .

    ASSIGN          reduce using rule 149 (iterable -> INT .)
    NE              reduce using rule 149 (iterable -> INT .)
    LT              reduce using rule 149 (iterable -> INT .)
    GT              reduce using rule 149 (iterable -> INT .)
    LTE             reduce using rule 149 (iterable -> INT .)
    GTE             reduce using rule 149 (iterable -> INT .)
    COMPARE         reduce using rule 149 (iterable -> INT .)
    STEP            reduce using rule 149 (iterable -> INT .)
    LCORCH          reduce using rule 149 (iterable -> INT .)


state 135

    (32) type -> TYPE LPARENT identifier . RPARENT SEMICOLON

    RPARENT         shift and go to state 200


state 136

    (34) insert -> identifier DOT INSERT . LPARENT i_content RPARENT SEMICOLON

    LPARENT         shift and go to state 201


state 137

    (35) del -> identifier DOT DEL . LPARENT INT RPARENT SEMICOLON

    LPARENT         shift and go to state 202


state 138

    (37) neg -> identifier DOT NEG . SEMICOLON

    SEMICOLON       shift and go to state 203


state 139

    (38) t_f -> identifier DOT tf . SEMICOLON

    SEMICOLON       shift and go to state 204


state 140

    (44) shape -> identifier DOT shape_arg . SEMICOLON

    SEMICOLON       shift and go to state 205


state 141

    (45) delete -> identifier DOT DELETE . LPARENT indice COMMA INT RPARENT SEMICOLON

    LPARENT         shift and go to state 206


state 142

    (88) tf -> T .

    SEMICOLON       reduce using rule 88 (tf -> T .)


state 143

    (89) tf -> F .

    SEMICOLON       reduce using rule 89 (tf -> F .)


state 144

    (41) shape_arg -> SHAPEF .

    SEMICOLON       reduce using rule 41 (shape_arg -> SHAPEF .)


state 145

    (42) shape_arg -> SHAPEC .

    SEMICOLON       reduce using rule 42 (shape_arg -> SHAPEC .)


state 146

    (43) shape_arg -> SHAPEA .

    SEMICOLON       reduce using rule 43 (shape_arg -> SHAPEA .)


state 147

    (36) len -> LEN LPARENT identifier . RPARENT SEMICOLON

    RPARENT         shift and go to state 207


state 148

    (39) blink -> BLINK LPARENT b_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 208


state 149

    (84) b_content -> identifier . COMMA INT COMMA time_mes COMMA value
    (85) b_content -> identifier . COMMA value

    COMMA           shift and go to state 209


state 150

    (40) delay -> DELAY LPARENT d_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 210


state 151

    (86) d_content -> empty .

    RPARENT         reduce using rule 86 (d_content -> empty .)


state 152

    (87) d_content -> INT . COMMA time_mes

    COMMA           shift and go to state 211


state 153

    (46) call -> CALL proc_dec SEMICOLON .

    IF              reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    TYPE            reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    LEN             reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    BLINK           reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    DELAY           reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    CALL            reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    ID              reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    FOR             reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    END             reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)
    RCORCH          reduce using rule 46 (call -> CALL proc_dec SEMICOLON .)


state 154

    (48) for -> FOR ID IN . iterable step LCORCH alt_block RCORCH SEMICOLON
    (148) iterable -> . identifier
    (149) iterable -> . INT
    (146) identifier -> . ID
    (147) identifier -> . consult
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 134
    ID              shift and go to state 47

    iterable                       shift and go to state 212
    identifier                     shift and go to state 133
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 155

    (54) procedure -> PROCEDURE proc_dec LCORCH body . RCORCH SEMICOLON

    RCORCH          shift and go to state 213


state 156

    (61) body -> global_call . BEGIN alt_block END SEMICOLON

    BEGIN           shift and go to state 214


state 157

    (15) global_call -> GLOBAL . global_term SEMICOLON global_call
    (17) global_term -> . ID COMMA global_term
    (18) global_term -> . ID

    ID              shift and go to state 216

    global_term                    shift and go to state 215

state 158

    (16) global_call -> empty .

    BEGIN           reduce using rule 16 (global_call -> empty .)


state 159

    (55) proc_dec -> proc_name LPARENT parameter . RPARENT

    RPARENT         shift and go to state 217


state 160

    (57) parameter -> proc_param .
    (58) parameter -> proc_param . COMMA parameter

    RPARENT         reduce using rule 57 (parameter -> proc_param .)
    COMMA           shift and go to state 218


state 161

    (59) parameter -> empty .

    RPARENT         reduce using rule 59 (parameter -> empty .)


state 162

    (60) proc_param -> ID .

    COMMA           reduce using rule 60 (proc_param -> ID .)
    RPARENT         reduce using rule 60 (proc_param -> ID .)


state 163

    (19) assignment -> identifier ASSIGN a_content SEMICOLON .

    PROCEDURE       reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    ID              reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    MAIN            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    $end            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    IF              reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    TYPE            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    LEN             reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    BLINK           reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    DELAY           reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    CALL            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    FOR             reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    END             reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    RCORCH          reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)


state 164

    (33) a_content -> RANGE LPARENT . INT COMMA value RPARENT

    INT             shift and go to state 219


state 165

    (73) factor -> LPARENT arithmetic . RPARENT
    (68) arithmetic -> arithmetic . adding_operator term
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS

    RPARENT         shift and go to state 220
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123

    adding_operator                shift and go to state 167

state 166

    (72) factor -> ID .

    TIMES           reduce using rule 72 (factor -> ID .)
    EXP             reduce using rule 72 (factor -> ID .)
    DIVIDE          reduce using rule 72 (factor -> ID .)
    DIVENT          reduce using rule 72 (factor -> ID .)
    MOD             reduce using rule 72 (factor -> ID .)
    RPARENT         reduce using rule 72 (factor -> ID .)
    PLUS            reduce using rule 72 (factor -> ID .)
    MINUS           reduce using rule 72 (factor -> ID .)
    SEMICOLON       reduce using rule 72 (factor -> ID .)
    COMMA           reduce using rule 72 (factor -> ID .)


state 167

    (68) arithmetic -> arithmetic adding_operator . term
    (69) term -> . factor
    (70) term -> . term multiplying_operator factor
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 109
    ID              shift and go to state 166
    LPARENT         shift and go to state 108

    term                           shift and go to state 221
    factor                         shift and go to state 121

state 168

    (70) term -> term multiplying_operator . factor
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 109
    ID              shift and go to state 166
    LPARENT         shift and go to state 108

    factor                         shift and go to state 222

state 169

    (130) multiplying_operator -> TIMES .

    INT             reduce using rule 130 (multiplying_operator -> TIMES .)
    ID              reduce using rule 130 (multiplying_operator -> TIMES .)
    LPARENT         reduce using rule 130 (multiplying_operator -> TIMES .)


state 170

    (131) multiplying_operator -> EXP .

    INT             reduce using rule 131 (multiplying_operator -> EXP .)
    ID              reduce using rule 131 (multiplying_operator -> EXP .)
    LPARENT         reduce using rule 131 (multiplying_operator -> EXP .)


state 171

    (132) multiplying_operator -> DIVIDE .

    INT             reduce using rule 132 (multiplying_operator -> DIVIDE .)
    ID              reduce using rule 132 (multiplying_operator -> DIVIDE .)
    LPARENT         reduce using rule 132 (multiplying_operator -> DIVIDE .)


state 172

    (133) multiplying_operator -> DIVENT .

    INT             reduce using rule 133 (multiplying_operator -> DIVENT .)
    ID              reduce using rule 133 (multiplying_operator -> DIVENT .)
    LPARENT         reduce using rule 133 (multiplying_operator -> DIVENT .)


state 173

    (134) multiplying_operator -> MOD .

    INT             reduce using rule 134 (multiplying_operator -> MOD .)
    ID              reduce using rule 134 (multiplying_operator -> MOD .)
    LPARENT         reduce using rule 134 (multiplying_operator -> MOD .)


state 174

    (67) arithmetic -> adding_operator term .
    (70) term -> term . multiplying_operator factor
    (130) multiplying_operator -> . TIMES
    (131) multiplying_operator -> . EXP
    (132) multiplying_operator -> . DIVIDE
    (133) multiplying_operator -> . DIVENT
    (134) multiplying_operator -> . MOD

    PLUS            reduce using rule 67 (arithmetic -> adding_operator term .)
    MINUS           reduce using rule 67 (arithmetic -> adding_operator term .)
    SEMICOLON       reduce using rule 67 (arithmetic -> adding_operator term .)
    RPARENT         reduce using rule 67 (arithmetic -> adding_operator term .)
    COMMA           reduce using rule 67 (arithmetic -> adding_operator term .)
    TIMES           shift and go to state 169
    EXP             shift and go to state 170
    DIVIDE          shift and go to state 171
    DIVENT          shift and go to state 172
    MOD             shift and go to state 173

    multiplying_operator           shift and go to state 168

state 175

    (92) list -> PARENTCL . list_term PARENTCR
    (93) list -> PARENTCL . empty PARENTCR
    (97) mat -> PARENTCL . mat_term PARENTCR
    (94) list_term -> . list_value COMMA list_term
    (95) list_term -> . list_value
    (150) empty -> .
    (98) mat_term -> . mat_value COMMA mat_term
    (99) mat_term -> . mat_value
    (96) list_value -> . value
    (100) mat_value -> . list
    (135) value -> . FALSE
    (136) value -> . TRUE
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR

    PARENTCR        reduce using rule 150 (empty -> .)
    FALSE           shift and go to state 116
    TRUE            shift and go to state 117
    PARENTCL        shift and go to state 223

    list_term                      shift and go to state 176
    empty                          shift and go to state 177
    mat_term                       shift and go to state 178
    list_value                     shift and go to state 180
    mat_value                      shift and go to state 181
    value                          shift and go to state 183
    list                           shift and go to state 184

state 176

    (92) list -> PARENTCL list_term . PARENTCR

    PARENTCR        shift and go to state 224


state 177

    (93) list -> PARENTCL empty . PARENTCR

    PARENTCR        shift and go to state 225


state 178

    (97) mat -> PARENTCL mat_term . PARENTCR

    PARENTCR        shift and go to state 226


state 179

    (101) 3dmat -> PARENTCL 3dmat_term . PARENTCR

    PARENTCR        shift and go to state 227


state 180

    (94) list_term -> list_value . COMMA list_term
    (95) list_term -> list_value .

    COMMA           shift and go to state 228
    PARENTCR        reduce using rule 95 (list_term -> list_value .)


state 181

    (98) mat_term -> mat_value . COMMA mat_term
    (99) mat_term -> mat_value .

    COMMA           shift and go to state 229
    PARENTCR        reduce using rule 99 (mat_term -> mat_value .)


state 182

    (102) 3dmat_term -> 3dmat_value . COMMA 3dmat_term
    (103) 3dmat_term -> 3dmat_value .

    COMMA           shift and go to state 230
    PARENTCR        reduce using rule 103 (3dmat_term -> 3dmat_value .)


state 183

    (96) list_value -> value .

    COMMA           reduce using rule 96 (list_value -> value .)
    PARENTCR        reduce using rule 96 (list_value -> value .)


state 184

    (100) mat_value -> list .

    COMMA           reduce using rule 100 (mat_value -> list .)
    PARENTCR        reduce using rule 100 (mat_value -> list .)


state 185

    (104) 3dmat_value -> mat .

    COMMA           reduce using rule 104 (3dmat_value -> mat .)
    PARENTCR        reduce using rule 104 (3dmat_value -> mat .)


state 186

    (20) assignment -> identifier COMMA identifier ASSIGN . a_content COMMA a_content SEMICOLON
    (33) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (78) a_content -> . value
    (79) a_content -> . arithmetic
    (80) a_content -> . list
    (81) a_content -> . mat
    (82) a_content -> . 3dmat
    (83) a_content -> . consult
    (135) value -> . FALSE
    (136) value -> . TRUE
    (66) arithmetic -> . term
    (67) arithmetic -> . adding_operator term
    (68) arithmetic -> . arithmetic adding_operator term
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR
    (97) mat -> . PARENTCL mat_term PARENTCR
    (101) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (69) term -> . factor
    (70) term -> . term multiplying_operator factor
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 107
    FALSE           shift and go to state 116
    TRUE            shift and go to state 117
    PARENTCL        shift and go to state 120
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    ID              shift and go to state 124
    INT             shift and go to state 109
    LPARENT         shift and go to state 108

    a_content                      shift and go to state 231
    value                          shift and go to state 110
    arithmetic                     shift and go to state 111
    list                           shift and go to state 112
    mat                            shift and go to state 113
    3dmat                          shift and go to state 114
    consult                        shift and go to state 115
    term                           shift and go to state 118
    adding_operator                shift and go to state 119
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    factor                         shift and go to state 121

state 187

    (109) list_consultT -> PARENTCL indice PARENTCR .
    (115) mat_consultT -> PARENTCL indice PARENTCR . list_consultT
    (118) 3dmat_consultT -> PARENTCL indice PARENTCR . mat_consultT
    (109) list_consultT -> . PARENTCL indice PARENTCR
    (110) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (112) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (113) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (114) mat_consultT -> . PARENTCL TP PARENTCR list_consultT
    (115) mat_consultT -> . PARENTCL indice PARENTCR list_consultT

    ASSIGN          reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    NE              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LT              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    GT              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LTE             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    GTE             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    RPARENT         reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    STEP            reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    SEMICOLON       reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    DOT             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    PARENTCL        shift and go to state 232

    list_consultT                  shift and go to state 233
    mat_consultT                   shift and go to state 234

state 188

    (110) list_consultT -> PARENTCL indice TP . indice PARENTCR
    (119) indice -> . INT
    (120) indice -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 235

state 189

    (112) mat_consultT -> PARENTCL indice COMMA . indice PARENTCR
    (117) 3dmat_consultT -> PARENTCL indice COMMA . indice COMMA indice PARENTCR
    (119) indice -> . INT
    (120) indice -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 236

state 190

    (113) mat_consultT -> PARENTCL TP COMMA . indice PARENTCR
    (119) indice -> . INT
    (120) indice -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 237

state 191

    (114) mat_consultT -> PARENTCL TP PARENTCR . list_consultT
    (109) list_consultT -> . PARENTCL indice PARENTCR
    (110) list_consultT -> . PARENTCL indice TP indice PARENTCR

    PARENTCL        shift and go to state 238

    list_consultT                  shift and go to state 239

state 192

    (51) statement -> IF LPARENT iterable relation . bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (137) bif_value -> . value
    (138) bif_value -> . arithmetic
    (135) value -> . FALSE
    (136) value -> . TRUE
    (66) arithmetic -> . term
    (67) arithmetic -> . adding_operator term
    (68) arithmetic -> . arithmetic adding_operator term
    (69) term -> . factor
    (70) term -> . term multiplying_operator factor
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    FALSE           shift and go to state 116
    TRUE            shift and go to state 117
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    INT             shift and go to state 109
    ID              shift and go to state 166
    LPARENT         shift and go to state 108

    bif_value                      shift and go to state 240
    value                          shift and go to state 241
    arithmetic                     shift and go to state 242
    term                           shift and go to state 118
    adding_operator                shift and go to state 119
    factor                         shift and go to state 121

state 193

    (139) relation -> ASSIGN .

    FALSE           reduce using rule 139 (relation -> ASSIGN .)
    TRUE            reduce using rule 139 (relation -> ASSIGN .)
    PLUS            reduce using rule 139 (relation -> ASSIGN .)
    MINUS           reduce using rule 139 (relation -> ASSIGN .)
    INT             reduce using rule 139 (relation -> ASSIGN .)
    ID              reduce using rule 139 (relation -> ASSIGN .)
    LPARENT         reduce using rule 139 (relation -> ASSIGN .)


state 194

    (140) relation -> NE .

    FALSE           reduce using rule 140 (relation -> NE .)
    TRUE            reduce using rule 140 (relation -> NE .)
    PLUS            reduce using rule 140 (relation -> NE .)
    MINUS           reduce using rule 140 (relation -> NE .)
    INT             reduce using rule 140 (relation -> NE .)
    ID              reduce using rule 140 (relation -> NE .)
    LPARENT         reduce using rule 140 (relation -> NE .)


state 195

    (141) relation -> LT .

    FALSE           reduce using rule 141 (relation -> LT .)
    TRUE            reduce using rule 141 (relation -> LT .)
    PLUS            reduce using rule 141 (relation -> LT .)
    MINUS           reduce using rule 141 (relation -> LT .)
    INT             reduce using rule 141 (relation -> LT .)
    ID              reduce using rule 141 (relation -> LT .)
    LPARENT         reduce using rule 141 (relation -> LT .)


state 196

    (142) relation -> GT .

    FALSE           reduce using rule 142 (relation -> GT .)
    TRUE            reduce using rule 142 (relation -> GT .)
    PLUS            reduce using rule 142 (relation -> GT .)
    MINUS           reduce using rule 142 (relation -> GT .)
    INT             reduce using rule 142 (relation -> GT .)
    ID              reduce using rule 142 (relation -> GT .)
    LPARENT         reduce using rule 142 (relation -> GT .)


state 197

    (143) relation -> LTE .

    FALSE           reduce using rule 143 (relation -> LTE .)
    TRUE            reduce using rule 143 (relation -> LTE .)
    PLUS            reduce using rule 143 (relation -> LTE .)
    MINUS           reduce using rule 143 (relation -> LTE .)
    INT             reduce using rule 143 (relation -> LTE .)
    ID              reduce using rule 143 (relation -> LTE .)
    LPARENT         reduce using rule 143 (relation -> LTE .)


state 198

    (144) relation -> GTE .

    FALSE           reduce using rule 144 (relation -> GTE .)
    TRUE            reduce using rule 144 (relation -> GTE .)
    PLUS            reduce using rule 144 (relation -> GTE .)
    MINUS           reduce using rule 144 (relation -> GTE .)
    INT             reduce using rule 144 (relation -> GTE .)
    ID              reduce using rule 144 (relation -> GTE .)
    LPARENT         reduce using rule 144 (relation -> GTE .)


state 199

    (145) relation -> COMPARE .

    FALSE           reduce using rule 145 (relation -> COMPARE .)
    TRUE            reduce using rule 145 (relation -> COMPARE .)
    PLUS            reduce using rule 145 (relation -> COMPARE .)
    MINUS           reduce using rule 145 (relation -> COMPARE .)
    INT             reduce using rule 145 (relation -> COMPARE .)
    ID              reduce using rule 145 (relation -> COMPARE .)
    LPARENT         reduce using rule 145 (relation -> COMPARE .)


state 200

    (32) type -> TYPE LPARENT identifier RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 243


state 201

    (34) insert -> identifier DOT INSERT LPARENT . i_content RPARENT SEMICOLON
    (90) i_content -> . INT COMMA value
    (91) i_content -> . list COMMA INT i_ind
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR

    INT             shift and go to state 245
    PARENTCL        shift and go to state 223

    i_content                      shift and go to state 244
    list                           shift and go to state 246

state 202

    (35) del -> identifier DOT DEL LPARENT . INT RPARENT SEMICOLON

    INT             shift and go to state 247


state 203

    (37) neg -> identifier DOT NEG SEMICOLON .

    IF              reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    TYPE            reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    LEN             reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    BLINK           reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    DELAY           reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    CALL            reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    ID              reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    FOR             reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    END             reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    RCORCH          reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)


state 204

    (38) t_f -> identifier DOT tf SEMICOLON .

    IF              reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    TYPE            reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    LEN             reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    BLINK           reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    DELAY           reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    CALL            reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    ID              reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    FOR             reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    END             reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    RCORCH          reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)


state 205

    (44) shape -> identifier DOT shape_arg SEMICOLON .

    IF              reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    TYPE            reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    LEN             reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    BLINK           reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    DELAY           reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    CALL            reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    ID              reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    FOR             reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    END             reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    RCORCH          reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)


state 206

    (45) delete -> identifier DOT DELETE LPARENT . indice COMMA INT RPARENT SEMICOLON
    (119) indice -> . INT
    (120) indice -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 248

state 207

    (36) len -> LEN LPARENT identifier RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 249


state 208

    (39) blink -> BLINK LPARENT b_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 250


state 209

    (84) b_content -> identifier COMMA . INT COMMA time_mes COMMA value
    (85) b_content -> identifier COMMA . value
    (135) value -> . FALSE
    (136) value -> . TRUE

    INT             shift and go to state 251
    FALSE           shift and go to state 116
    TRUE            shift and go to state 117

    value                          shift and go to state 252

state 210

    (40) delay -> DELAY LPARENT d_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 253


state 211

    (87) d_content -> INT COMMA . time_mes
    (125) time_mes -> . QUOTES MIL QUOTES
    (126) time_mes -> . QUOTES MIN QUOTES
    (127) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 254

state 212

    (48) for -> FOR ID IN iterable . step LCORCH alt_block RCORCH SEMICOLON
    (49) step -> . STEP INT
    (50) step -> . empty
    (150) empty -> .

    STEP            shift and go to state 256
    LCORCH          reduce using rule 150 (empty -> .)

    step                           shift and go to state 255
    empty                          shift and go to state 257

state 213

    (54) procedure -> PROCEDURE proc_dec LCORCH body RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 258


state 214

    (61) body -> global_call BEGIN . alt_block END SEMICOLON
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (150) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (146) identifier -> . ID
    (147) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_dec SEMICOLON
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    END             reduce using rule 150 (empty -> .)
    IF              shift and go to state 72
    ID              shift and go to state 47
    TYPE            shift and go to state 73
    LEN             shift and go to state 75
    BLINK           shift and go to state 76
    DELAY           shift and go to state 77
    CALL            shift and go to state 78
    FOR             shift and go to state 80

    alt_block                      shift and go to state 259
    alt_content                    shift and go to state 260
    empty                          shift and go to state 261
    instruction                    shift and go to state 262
    assignment                     shift and go to state 263
    function                       shift and go to state 56
    consult                        shift and go to state 57
    cycle                          shift and go to state 58
    statement                      shift and go to state 59
    identifier                     shift and go to state 264
    type                           shift and go to state 60
    insert                         shift and go to state 61
    del                            shift and go to state 62
    len                            shift and go to state 63
    neg                            shift and go to state 64
    t_f                            shift and go to state 65
    blink                          shift and go to state 66
    delay                          shift and go to state 67
    shape                          shift and go to state 68
    delete                         shift and go to state 69
    call                           shift and go to state 70
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 71

state 215

    (15) global_call -> GLOBAL global_term . SEMICOLON global_call

    SEMICOLON       shift and go to state 265


state 216

    (17) global_term -> ID . COMMA global_term
    (18) global_term -> ID .

    COMMA           shift and go to state 266
    SEMICOLON       reduce using rule 18 (global_term -> ID .)


state 217

    (55) proc_dec -> proc_name LPARENT parameter RPARENT .

    LCORCH          reduce using rule 55 (proc_dec -> proc_name LPARENT parameter RPARENT .)
    SEMICOLON       reduce using rule 55 (proc_dec -> proc_name LPARENT parameter RPARENT .)


state 218

    (58) parameter -> proc_param COMMA . parameter
    (57) parameter -> . proc_param
    (58) parameter -> . proc_param COMMA parameter
    (59) parameter -> . empty
    (60) proc_param -> . ID
    (150) empty -> .

    ID              shift and go to state 162
    RPARENT         reduce using rule 150 (empty -> .)

    proc_param                     shift and go to state 160
    parameter                      shift and go to state 267
    empty                          shift and go to state 161

state 219

    (33) a_content -> RANGE LPARENT INT . COMMA value RPARENT

    COMMA           shift and go to state 268


state 220

    (73) factor -> LPARENT arithmetic RPARENT .

    TIMES           reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    EXP             reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    DIVIDE          reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    DIVENT          reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    MOD             reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    PLUS            reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    MINUS           reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    SEMICOLON       reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    RPARENT         reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)
    COMMA           reduce using rule 73 (factor -> LPARENT arithmetic RPARENT .)


state 221

    (68) arithmetic -> arithmetic adding_operator term .
    (70) term -> term . multiplying_operator factor
    (130) multiplying_operator -> . TIMES
    (131) multiplying_operator -> . EXP
    (132) multiplying_operator -> . DIVIDE
    (133) multiplying_operator -> . DIVENT
    (134) multiplying_operator -> . MOD

    PLUS            reduce using rule 68 (arithmetic -> arithmetic adding_operator term .)
    MINUS           reduce using rule 68 (arithmetic -> arithmetic adding_operator term .)
    SEMICOLON       reduce using rule 68 (arithmetic -> arithmetic adding_operator term .)
    RPARENT         reduce using rule 68 (arithmetic -> arithmetic adding_operator term .)
    COMMA           reduce using rule 68 (arithmetic -> arithmetic adding_operator term .)
    TIMES           shift and go to state 169
    EXP             shift and go to state 170
    DIVIDE          shift and go to state 171
    DIVENT          shift and go to state 172
    MOD             shift and go to state 173

    multiplying_operator           shift and go to state 168

state 222

    (70) term -> term multiplying_operator factor .

    TIMES           reduce using rule 70 (term -> term multiplying_operator factor .)
    EXP             reduce using rule 70 (term -> term multiplying_operator factor .)
    DIVIDE          reduce using rule 70 (term -> term multiplying_operator factor .)
    DIVENT          reduce using rule 70 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 70 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 70 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 70 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 70 (term -> term multiplying_operator factor .)
    RPARENT         reduce using rule 70 (term -> term multiplying_operator factor .)
    COMMA           reduce using rule 70 (term -> term multiplying_operator factor .)


state 223

    (92) list -> PARENTCL . list_term PARENTCR
    (93) list -> PARENTCL . empty PARENTCR
    (94) list_term -> . list_value COMMA list_term
    (95) list_term -> . list_value
    (150) empty -> .
    (96) list_value -> . value
    (135) value -> . FALSE
    (136) value -> . TRUE

    PARENTCR        reduce using rule 150 (empty -> .)
    FALSE           shift and go to state 116
    TRUE            shift and go to state 117

    list_term                      shift and go to state 176
    empty                          shift and go to state 177
    list_value                     shift and go to state 180
    value                          shift and go to state 183

state 224

    (92) list -> PARENTCL list_term PARENTCR .

    SEMICOLON       reduce using rule 92 (list -> PARENTCL list_term PARENTCR .)
    COMMA           reduce using rule 92 (list -> PARENTCL list_term PARENTCR .)
    PARENTCR        reduce using rule 92 (list -> PARENTCL list_term PARENTCR .)


state 225

    (93) list -> PARENTCL empty PARENTCR .

    SEMICOLON       reduce using rule 93 (list -> PARENTCL empty PARENTCR .)
    COMMA           reduce using rule 93 (list -> PARENTCL empty PARENTCR .)
    PARENTCR        reduce using rule 93 (list -> PARENTCL empty PARENTCR .)


state 226

    (97) mat -> PARENTCL mat_term PARENTCR .

    SEMICOLON       reduce using rule 97 (mat -> PARENTCL mat_term PARENTCR .)
    COMMA           reduce using rule 97 (mat -> PARENTCL mat_term PARENTCR .)
    PARENTCR        reduce using rule 97 (mat -> PARENTCL mat_term PARENTCR .)


state 227

    (101) 3dmat -> PARENTCL 3dmat_term PARENTCR .

    SEMICOLON       reduce using rule 101 (3dmat -> PARENTCL 3dmat_term PARENTCR .)
    COMMA           reduce using rule 101 (3dmat -> PARENTCL 3dmat_term PARENTCR .)


state 228

    (94) list_term -> list_value COMMA . list_term
    (94) list_term -> . list_value COMMA list_term
    (95) list_term -> . list_value
    (96) list_value -> . value
    (135) value -> . FALSE
    (136) value -> . TRUE

    FALSE           shift and go to state 116
    TRUE            shift and go to state 117

    list_value                     shift and go to state 180
    list_term                      shift and go to state 269
    value                          shift and go to state 183

state 229

    (98) mat_term -> mat_value COMMA . mat_term
    (98) mat_term -> . mat_value COMMA mat_term
    (99) mat_term -> . mat_value
    (100) mat_value -> . list
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR

    PARENTCL        shift and go to state 223

    mat_value                      shift and go to state 181
    mat_term                       shift and go to state 270
    list                           shift and go to state 184

state 230

    (102) 3dmat_term -> 3dmat_value COMMA . 3dmat_term
    (102) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (103) 3dmat_term -> . 3dmat_value
    (104) 3dmat_value -> . mat
    (97) mat -> . PARENTCL mat_term PARENTCR

    PARENTCL        shift and go to state 272

    3dmat_value                    shift and go to state 182
    3dmat_term                     shift and go to state 271
    mat                            shift and go to state 185

state 231

    (20) assignment -> identifier COMMA identifier ASSIGN a_content . COMMA a_content SEMICOLON

    COMMA           shift and go to state 273


state 232

    (109) list_consultT -> PARENTCL . indice PARENTCR
    (110) list_consultT -> PARENTCL . indice TP indice PARENTCR
    (112) mat_consultT -> PARENTCL . indice COMMA indice PARENTCR
    (113) mat_consultT -> PARENTCL . TP COMMA indice PARENTCR
    (114) mat_consultT -> PARENTCL . TP PARENTCR list_consultT
    (115) mat_consultT -> PARENTCL . indice PARENTCR list_consultT
    (119) indice -> . INT
    (120) indice -> . ID

    TP              shift and go to state 127
    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 274

state 233

    (115) mat_consultT -> PARENTCL indice PARENTCR list_consultT .

    ASSIGN          reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    COMMA           reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    NE              reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    LT              reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    GT              reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    LTE             reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    GTE             reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    COMPARE         reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    RPARENT         reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    STEP            reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    LCORCH          reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    SEMICOLON       reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    DOT             reduce using rule 115 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)


state 234

    (118) 3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .

    ASSIGN          reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    COMMA           reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    NE              reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    LT              reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    GT              reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    LTE             reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    GTE             reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    COMPARE         reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    RPARENT         reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    STEP            reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    LCORCH          reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    SEMICOLON       reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    DOT             reduce using rule 118 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)


state 235

    (110) list_consultT -> PARENTCL indice TP indice . PARENTCR

    PARENTCR        shift and go to state 275


state 236

    (112) mat_consultT -> PARENTCL indice COMMA indice . PARENTCR
    (117) 3dmat_consultT -> PARENTCL indice COMMA indice . COMMA indice PARENTCR

    PARENTCR        shift and go to state 277
    COMMA           shift and go to state 276


state 237

    (113) mat_consultT -> PARENTCL TP COMMA indice . PARENTCR

    PARENTCR        shift and go to state 278


state 238

    (109) list_consultT -> PARENTCL . indice PARENTCR
    (110) list_consultT -> PARENTCL . indice TP indice PARENTCR
    (119) indice -> . INT
    (120) indice -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 279

state 239

    (114) mat_consultT -> PARENTCL TP PARENTCR list_consultT .

    ASSIGN          reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    COMMA           reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    NE              reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    LT              reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    GT              reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    LTE             reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    GTE             reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    COMPARE         reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    RPARENT         reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    STEP            reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    LCORCH          reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    SEMICOLON       reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)
    DOT             reduce using rule 114 (mat_consultT -> PARENTCL TP PARENTCR list_consultT .)


state 240

    (51) statement -> IF LPARENT iterable relation bif_value . RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement

    RPARENT         shift and go to state 280


state 241

    (137) bif_value -> value .

    RPARENT         reduce using rule 137 (bif_value -> value .)


state 242

    (138) bif_value -> arithmetic .
    (68) arithmetic -> arithmetic . adding_operator term
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS

    RPARENT         reduce using rule 138 (bif_value -> arithmetic .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123

    adding_operator                shift and go to state 167

state 243

    (32) type -> TYPE LPARENT identifier RPARENT SEMICOLON .

    IF              reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    TYPE            reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    LEN             reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    BLINK           reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    DELAY           reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    CALL            reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    ID              reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    FOR             reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    END             reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    RCORCH          reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)


state 244

    (34) insert -> identifier DOT INSERT LPARENT i_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 281


state 245

    (90) i_content -> INT . COMMA value

    COMMA           shift and go to state 282


state 246

    (91) i_content -> list . COMMA INT i_ind

    COMMA           shift and go to state 283


state 247

    (35) del -> identifier DOT DEL LPARENT INT . RPARENT SEMICOLON

    RPARENT         shift and go to state 284


state 248

    (45) delete -> identifier DOT DELETE LPARENT indice . COMMA INT RPARENT SEMICOLON

    COMMA           shift and go to state 285


state 249

    (36) len -> LEN LPARENT identifier RPARENT SEMICOLON .

    IF              reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    TYPE            reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    LEN             reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    BLINK           reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    DELAY           reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    CALL            reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    ID              reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    FOR             reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    END             reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    RCORCH          reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)


state 250

    (39) blink -> BLINK LPARENT b_content RPARENT SEMICOLON .

    IF              reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    LEN             reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    CALL            reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    ID              reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    FOR             reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    END             reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)


state 251

    (84) b_content -> identifier COMMA INT . COMMA time_mes COMMA value

    COMMA           shift and go to state 286


state 252

    (85) b_content -> identifier COMMA value .

    RPARENT         reduce using rule 85 (b_content -> identifier COMMA value .)


state 253

    (40) delay -> DELAY LPARENT d_content RPARENT SEMICOLON .

    IF              reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    LEN             reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    CALL            reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    ID              reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    FOR             reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    END             reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)


state 254

    (87) d_content -> INT COMMA time_mes .

    RPARENT         reduce using rule 87 (d_content -> INT COMMA time_mes .)


state 255

    (48) for -> FOR ID IN iterable step . LCORCH alt_block RCORCH SEMICOLON

    LCORCH          shift and go to state 287


state 256

    (49) step -> STEP . INT

    INT             shift and go to state 288


state 257

    (50) step -> empty .

    LCORCH          reduce using rule 50 (step -> empty .)


state 258

    (54) procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .

    PROCEDURE       reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    ID              reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    MAIN            reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    $end            reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)


state 259

    (61) body -> global_call BEGIN alt_block . END SEMICOLON

    END             shift and go to state 289


state 260

    (6) alt_block -> alt_content . alt_block
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (150) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (146) identifier -> . ID
    (147) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_dec SEMICOLON
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    END             reduce using rule 150 (empty -> .)
    RCORCH          reduce using rule 150 (empty -> .)
    IF              shift and go to state 72
    ID              shift and go to state 47
    TYPE            shift and go to state 73
    LEN             shift and go to state 75
    BLINK           shift and go to state 76
    DELAY           shift and go to state 77
    CALL            shift and go to state 78
    FOR             shift and go to state 80

    alt_content                    shift and go to state 260
    alt_block                      shift and go to state 290
    empty                          shift and go to state 261
    instruction                    shift and go to state 262
    assignment                     shift and go to state 263
    function                       shift and go to state 56
    consult                        shift and go to state 57
    cycle                          shift and go to state 58
    statement                      shift and go to state 59
    identifier                     shift and go to state 264
    type                           shift and go to state 60
    insert                         shift and go to state 61
    del                            shift and go to state 62
    len                            shift and go to state 63
    neg                            shift and go to state 64
    t_f                            shift and go to state 65
    blink                          shift and go to state 66
    delay                          shift and go to state 67
    shape                          shift and go to state 68
    delete                         shift and go to state 69
    call                           shift and go to state 70
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 71

state 261

    (7) alt_block -> empty .

    END             reduce using rule 7 (alt_block -> empty .)
    RCORCH          reduce using rule 7 (alt_block -> empty .)


state 262

    (8) alt_content -> instruction .

    IF              reduce using rule 8 (alt_content -> instruction .)
    ID              reduce using rule 8 (alt_content -> instruction .)
    TYPE            reduce using rule 8 (alt_content -> instruction .)
    LEN             reduce using rule 8 (alt_content -> instruction .)
    BLINK           reduce using rule 8 (alt_content -> instruction .)
    DELAY           reduce using rule 8 (alt_content -> instruction .)
    CALL            reduce using rule 8 (alt_content -> instruction .)
    FOR             reduce using rule 8 (alt_content -> instruction .)
    END             reduce using rule 8 (alt_content -> instruction .)
    RCORCH          reduce using rule 8 (alt_content -> instruction .)


state 263

    (9) alt_content -> assignment .

    IF              reduce using rule 9 (alt_content -> assignment .)
    ID              reduce using rule 9 (alt_content -> assignment .)
    TYPE            reduce using rule 9 (alt_content -> assignment .)
    LEN             reduce using rule 9 (alt_content -> assignment .)
    BLINK           reduce using rule 9 (alt_content -> assignment .)
    DELAY           reduce using rule 9 (alt_content -> assignment .)
    CALL            reduce using rule 9 (alt_content -> assignment .)
    FOR             reduce using rule 9 (alt_content -> assignment .)
    END             reduce using rule 9 (alt_content -> assignment .)
    RCORCH          reduce using rule 9 (alt_content -> assignment .)


state 264

    (19) assignment -> identifier . ASSIGN a_content SEMICOLON
    (20) assignment -> identifier . COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (34) insert -> identifier . DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> identifier . DOT DEL LPARENT INT RPARENT SEMICOLON
    (37) neg -> identifier . DOT NEG SEMICOLON
    (38) t_f -> identifier . DOT tf SEMICOLON
    (44) shape -> identifier . DOT shape_arg SEMICOLON
    (45) delete -> identifier . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON

    ASSIGN          shift and go to state 86
    COMMA           shift and go to state 87
    DOT             shift and go to state 98


state 265

    (15) global_call -> GLOBAL global_term SEMICOLON . global_call
    (15) global_call -> . GLOBAL global_term SEMICOLON global_call
    (16) global_call -> . empty
    (150) empty -> .

    GLOBAL          shift and go to state 157
    BEGIN           reduce using rule 150 (empty -> .)

    global_call                    shift and go to state 291
    empty                          shift and go to state 158

state 266

    (17) global_term -> ID COMMA . global_term
    (17) global_term -> . ID COMMA global_term
    (18) global_term -> . ID

    ID              shift and go to state 216

    global_term                    shift and go to state 292

state 267

    (58) parameter -> proc_param COMMA parameter .

    RPARENT         reduce using rule 58 (parameter -> proc_param COMMA parameter .)


state 268

    (33) a_content -> RANGE LPARENT INT COMMA . value RPARENT
    (135) value -> . FALSE
    (136) value -> . TRUE

    FALSE           shift and go to state 116
    TRUE            shift and go to state 117

    value                          shift and go to state 293

state 269

    (94) list_term -> list_value COMMA list_term .

    PARENTCR        reduce using rule 94 (list_term -> list_value COMMA list_term .)


state 270

    (98) mat_term -> mat_value COMMA mat_term .

    PARENTCR        reduce using rule 98 (mat_term -> mat_value COMMA mat_term .)


state 271

    (102) 3dmat_term -> 3dmat_value COMMA 3dmat_term .

    PARENTCR        reduce using rule 102 (3dmat_term -> 3dmat_value COMMA 3dmat_term .)


state 272

    (97) mat -> PARENTCL . mat_term PARENTCR
    (98) mat_term -> . mat_value COMMA mat_term
    (99) mat_term -> . mat_value
    (100) mat_value -> . list
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR

    PARENTCL        shift and go to state 223

    mat_term                       shift and go to state 178
    mat_value                      shift and go to state 181
    list                           shift and go to state 184

state 273

    (20) assignment -> identifier COMMA identifier ASSIGN a_content COMMA . a_content SEMICOLON
    (33) a_content -> . RANGE LPARENT INT COMMA value RPARENT
    (78) a_content -> . value
    (79) a_content -> . arithmetic
    (80) a_content -> . list
    (81) a_content -> . mat
    (82) a_content -> . 3dmat
    (83) a_content -> . consult
    (135) value -> . FALSE
    (136) value -> . TRUE
    (66) arithmetic -> . term
    (67) arithmetic -> . adding_operator term
    (68) arithmetic -> . arithmetic adding_operator term
    (92) list -> . PARENTCL list_term PARENTCR
    (93) list -> . PARENTCL empty PARENTCR
    (97) mat -> . PARENTCL mat_term PARENTCR
    (101) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (69) term -> . factor
    (70) term -> . term multiplying_operator factor
    (128) adding_operator -> . PLUS
    (129) adding_operator -> . MINUS
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (71) factor -> . INT
    (72) factor -> . ID
    (73) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 107
    FALSE           shift and go to state 116
    TRUE            shift and go to state 117
    PARENTCL        shift and go to state 120
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    ID              shift and go to state 124
    INT             shift and go to state 109
    LPARENT         shift and go to state 108

    a_content                      shift and go to state 294
    value                          shift and go to state 110
    arithmetic                     shift and go to state 111
    list                           shift and go to state 112
    mat                            shift and go to state 113
    3dmat                          shift and go to state 114
    consult                        shift and go to state 115
    term                           shift and go to state 118
    adding_operator                shift and go to state 119
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    factor                         shift and go to state 121

state 274

    (109) list_consultT -> PARENTCL indice . PARENTCR
    (110) list_consultT -> PARENTCL indice . TP indice PARENTCR
    (112) mat_consultT -> PARENTCL indice . COMMA indice PARENTCR
    (115) mat_consultT -> PARENTCL indice . PARENTCR list_consultT

    PARENTCR        shift and go to state 295
    TP              shift and go to state 188
    COMMA           shift and go to state 296


state 275

    (110) list_consultT -> PARENTCL indice TP indice PARENTCR .

    ASSIGN          reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    COMMA           reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    NE              reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    LT              reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    GT              reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    LTE             reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    GTE             reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    COMPARE         reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    RPARENT         reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    STEP            reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    LCORCH          reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    SEMICOLON       reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    DOT             reduce using rule 110 (list_consultT -> PARENTCL indice TP indice PARENTCR .)


state 276

    (117) 3dmat_consultT -> PARENTCL indice COMMA indice COMMA . indice PARENTCR
    (119) indice -> . INT
    (120) indice -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 297

state 277

    (112) mat_consultT -> PARENTCL indice COMMA indice PARENTCR .

    ASSIGN          reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    COMMA           reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    NE              reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    LT              reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    GT              reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    LTE             reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    GTE             reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    COMPARE         reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    RPARENT         reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    STEP            reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    LCORCH          reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    SEMICOLON       reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    DOT             reduce using rule 112 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)


state 278

    (113) mat_consultT -> PARENTCL TP COMMA indice PARENTCR .

    ASSIGN          reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    COMMA           reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    NE              reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    LT              reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    GT              reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    LTE             reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    GTE             reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    COMPARE         reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    RPARENT         reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    STEP            reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    LCORCH          reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    SEMICOLON       reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    DOT             reduce using rule 113 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)


state 279

    (109) list_consultT -> PARENTCL indice . PARENTCR
    (110) list_consultT -> PARENTCL indice . TP indice PARENTCR

    PARENTCR        shift and go to state 298
    TP              shift and go to state 188


state 280

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT . LCORCH alt_block RCORCH SEMICOLON opt_statement

    LCORCH          shift and go to state 299


state 281

    (34) insert -> identifier DOT INSERT LPARENT i_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 300


state 282

    (90) i_content -> INT COMMA . value
    (135) value -> . FALSE
    (136) value -> . TRUE

    FALSE           shift and go to state 116
    TRUE            shift and go to state 117

    value                          shift and go to state 301

state 283

    (91) i_content -> list COMMA . INT i_ind

    INT             shift and go to state 302


state 284

    (35) del -> identifier DOT DEL LPARENT INT RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 303


state 285

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA . INT RPARENT SEMICOLON

    INT             shift and go to state 304


state 286

    (84) b_content -> identifier COMMA INT COMMA . time_mes COMMA value
    (125) time_mes -> . QUOTES MIL QUOTES
    (126) time_mes -> . QUOTES MIN QUOTES
    (127) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 305

state 287

    (48) for -> FOR ID IN iterable step LCORCH . alt_block RCORCH SEMICOLON
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (150) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (146) identifier -> . ID
    (147) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_dec SEMICOLON
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    RCORCH          reduce using rule 150 (empty -> .)
    IF              shift and go to state 72
    ID              shift and go to state 47
    TYPE            shift and go to state 73
    LEN             shift and go to state 75
    BLINK           shift and go to state 76
    DELAY           shift and go to state 77
    CALL            shift and go to state 78
    FOR             shift and go to state 80

    alt_block                      shift and go to state 306
    alt_content                    shift and go to state 260
    empty                          shift and go to state 261
    instruction                    shift and go to state 262
    assignment                     shift and go to state 263
    function                       shift and go to state 56
    consult                        shift and go to state 57
    cycle                          shift and go to state 58
    statement                      shift and go to state 59
    identifier                     shift and go to state 264
    type                           shift and go to state 60
    insert                         shift and go to state 61
    del                            shift and go to state 62
    len                            shift and go to state 63
    neg                            shift and go to state 64
    t_f                            shift and go to state 65
    blink                          shift and go to state 66
    delay                          shift and go to state 67
    shape                          shift and go to state 68
    delete                         shift and go to state 69
    call                           shift and go to state 70
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 71

state 288

    (49) step -> STEP INT .

    LCORCH          reduce using rule 49 (step -> STEP INT .)


state 289

    (61) body -> global_call BEGIN alt_block END . SEMICOLON

    SEMICOLON       shift and go to state 307


state 290

    (6) alt_block -> alt_content alt_block .

    END             reduce using rule 6 (alt_block -> alt_content alt_block .)
    RCORCH          reduce using rule 6 (alt_block -> alt_content alt_block .)


state 291

    (15) global_call -> GLOBAL global_term SEMICOLON global_call .

    BEGIN           reduce using rule 15 (global_call -> GLOBAL global_term SEMICOLON global_call .)


state 292

    (17) global_term -> ID COMMA global_term .

    SEMICOLON       reduce using rule 17 (global_term -> ID COMMA global_term .)


state 293

    (33) a_content -> RANGE LPARENT INT COMMA value . RPARENT

    RPARENT         shift and go to state 308


state 294

    (20) assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content . SEMICOLON

    SEMICOLON       shift and go to state 309


state 295

    (109) list_consultT -> PARENTCL indice PARENTCR .
    (115) mat_consultT -> PARENTCL indice PARENTCR . list_consultT
    (109) list_consultT -> . PARENTCL indice PARENTCR
    (110) list_consultT -> . PARENTCL indice TP indice PARENTCR

    ASSIGN          reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    NE              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LT              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    GT              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LTE             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    GTE             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    RPARENT         reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    STEP            reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    SEMICOLON       reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    DOT             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    PARENTCL        shift and go to state 238

    list_consultT                  shift and go to state 233

state 296

    (112) mat_consultT -> PARENTCL indice COMMA . indice PARENTCR
    (119) indice -> . INT
    (120) indice -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 129

    indice                         shift and go to state 310

state 297

    (117) 3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice . PARENTCR

    PARENTCR        shift and go to state 311


state 298

    (109) list_consultT -> PARENTCL indice PARENTCR .

    ASSIGN          reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    NE              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LT              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    GT              reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LTE             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    GTE             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    RPARENT         reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    STEP            reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    SEMICOLON       reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)
    DOT             reduce using rule 109 (list_consultT -> PARENTCL indice PARENTCR .)


state 299

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH . alt_block RCORCH SEMICOLON opt_statement
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (150) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (146) identifier -> . ID
    (147) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_dec SEMICOLON
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    RCORCH          reduce using rule 150 (empty -> .)
    IF              shift and go to state 72
    ID              shift and go to state 47
    TYPE            shift and go to state 73
    LEN             shift and go to state 75
    BLINK           shift and go to state 76
    DELAY           shift and go to state 77
    CALL            shift and go to state 78
    FOR             shift and go to state 80

    alt_block                      shift and go to state 312
    alt_content                    shift and go to state 260
    empty                          shift and go to state 261
    instruction                    shift and go to state 262
    assignment                     shift and go to state 263
    function                       shift and go to state 56
    consult                        shift and go to state 57
    cycle                          shift and go to state 58
    statement                      shift and go to state 59
    identifier                     shift and go to state 264
    type                           shift and go to state 60
    insert                         shift and go to state 61
    del                            shift and go to state 62
    len                            shift and go to state 63
    neg                            shift and go to state 64
    t_f                            shift and go to state 65
    blink                          shift and go to state 66
    delay                          shift and go to state 67
    shape                          shift and go to state 68
    delete                         shift and go to state 69
    call                           shift and go to state 70
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 71

state 300

    (34) insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .

    IF              reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    LEN             reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    CALL            reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    ID              reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    FOR             reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    END             reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)


state 301

    (90) i_content -> INT COMMA value .

    RPARENT         reduce using rule 90 (i_content -> INT COMMA value .)


state 302

    (91) i_content -> list COMMA INT . i_ind
    (121) i_ind -> . COMMA INT
    (122) i_ind -> . empty
    (150) empty -> .

    COMMA           shift and go to state 313
    RPARENT         reduce using rule 150 (empty -> .)

    i_ind                          shift and go to state 314
    empty                          shift and go to state 315

state 303

    (35) del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .

    IF              reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    TYPE            reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    LEN             reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    BLINK           reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    DELAY           reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    CALL            reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    ID              reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    FOR             reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    END             reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)
    RCORCH          reduce using rule 35 (del -> identifier DOT DEL LPARENT INT RPARENT SEMICOLON .)


state 304

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA INT . RPARENT SEMICOLON

    RPARENT         shift and go to state 316


state 305

    (84) b_content -> identifier COMMA INT COMMA time_mes . COMMA value

    COMMA           shift and go to state 317


state 306

    (48) for -> FOR ID IN iterable step LCORCH alt_block . RCORCH SEMICOLON

    RCORCH          shift and go to state 318


state 307

    (61) body -> global_call BEGIN alt_block END SEMICOLON .

    RCORCH          reduce using rule 61 (body -> global_call BEGIN alt_block END SEMICOLON .)


state 308

    (33) a_content -> RANGE LPARENT INT COMMA value RPARENT .

    SEMICOLON       reduce using rule 33 (a_content -> RANGE LPARENT INT COMMA value RPARENT .)
    COMMA           reduce using rule 33 (a_content -> RANGE LPARENT INT COMMA value RPARENT .)


state 309

    (20) assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .

    PROCEDURE       reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    ID              reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    MAIN            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    $end            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    IF              reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    TYPE            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    LEN             reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    BLINK           reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    DELAY           reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    CALL            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    FOR             reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    END             reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    RCORCH          reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)


state 310

    (112) mat_consultT -> PARENTCL indice COMMA indice . PARENTCR

    PARENTCR        shift and go to state 277


state 311

    (117) 3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .

    ASSIGN          reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    COMMA           reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    NE              reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LT              reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    GT              reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LTE             reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    GTE             reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    COMPARE         reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    RPARENT         reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    STEP            reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LCORCH          reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    SEMICOLON       reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    DOT             reduce using rule 117 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)


state 312

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block . RCORCH SEMICOLON opt_statement

    RCORCH          shift and go to state 319


state 313

    (121) i_ind -> COMMA . INT

    INT             shift and go to state 320


state 314

    (91) i_content -> list COMMA INT i_ind .

    RPARENT         reduce using rule 91 (i_content -> list COMMA INT i_ind .)


state 315

    (122) i_ind -> empty .

    RPARENT         reduce using rule 122 (i_ind -> empty .)


state 316

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 321


state 317

    (84) b_content -> identifier COMMA INT COMMA time_mes COMMA . value
    (135) value -> . FALSE
    (136) value -> . TRUE

    FALSE           shift and go to state 116
    TRUE            shift and go to state 117

    value                          shift and go to state 322

state 318

    (48) for -> FOR ID IN iterable step LCORCH alt_block RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 323


state 319

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH . SEMICOLON opt_statement

    SEMICOLON       shift and go to state 324


state 320

    (121) i_ind -> COMMA INT .

    RPARENT         reduce using rule 121 (i_ind -> COMMA INT .)


state 321

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .

    IF              reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    TYPE            reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    LEN             reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    BLINK           reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    DELAY           reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    CALL            reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    ID              reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    FOR             reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    END             reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    RCORCH          reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)


state 322

    (84) b_content -> identifier COMMA INT COMMA time_mes COMMA value .

    RPARENT         reduce using rule 84 (b_content -> identifier COMMA INT COMMA time_mes COMMA value .)


state 323

    (48) for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .

    IF              reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    TYPE            reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    LEN             reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    BLINK           reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    DELAY           reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    CALL            reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    ID              reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    FOR             reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    END             reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    RCORCH          reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)


state 324

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON . opt_statement
    (52) opt_statement -> . ELSE LCORCH alt_block RCORCH SEMICOLON
    (53) opt_statement -> . empty
    (150) empty -> .

    ELSE            shift and go to state 326
    IF              reduce using rule 150 (empty -> .)
    TYPE            reduce using rule 150 (empty -> .)
    LEN             reduce using rule 150 (empty -> .)
    BLINK           reduce using rule 150 (empty -> .)
    DELAY           reduce using rule 150 (empty -> .)
    CALL            reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    END             reduce using rule 150 (empty -> .)
    RCORCH          reduce using rule 150 (empty -> .)

    opt_statement                  shift and go to state 325
    empty                          shift and go to state 327

state 325

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .

    IF              reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    TYPE            reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    LEN             reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    BLINK           reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    DELAY           reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    CALL            reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    ID              reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    FOR             reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    END             reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    RCORCH          reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)


state 326

    (52) opt_statement -> ELSE . LCORCH alt_block RCORCH SEMICOLON

    LCORCH          shift and go to state 328


state 327

    (53) opt_statement -> empty .

    IF              reduce using rule 53 (opt_statement -> empty .)
    TYPE            reduce using rule 53 (opt_statement -> empty .)
    LEN             reduce using rule 53 (opt_statement -> empty .)
    BLINK           reduce using rule 53 (opt_statement -> empty .)
    DELAY           reduce using rule 53 (opt_statement -> empty .)
    CALL            reduce using rule 53 (opt_statement -> empty .)
    ID              reduce using rule 53 (opt_statement -> empty .)
    FOR             reduce using rule 53 (opt_statement -> empty .)
    END             reduce using rule 53 (opt_statement -> empty .)
    RCORCH          reduce using rule 53 (opt_statement -> empty .)


state 328

    (52) opt_statement -> ELSE LCORCH . alt_block RCORCH SEMICOLON
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (150) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (105) consult -> . list_consult
    (106) consult -> . mat_consult
    (107) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (146) identifier -> . ID
    (147) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT INT RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_dec SEMICOLON
    (108) list_consult -> . ID list_consultT
    (111) mat_consult -> . ID mat_consultT
    (116) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    RCORCH          reduce using rule 150 (empty -> .)
    IF              shift and go to state 72
    ID              shift and go to state 47
    TYPE            shift and go to state 73
    LEN             shift and go to state 75
    BLINK           shift and go to state 76
    DELAY           shift and go to state 77
    CALL            shift and go to state 78
    FOR             shift and go to state 80

    alt_block                      shift and go to state 329
    alt_content                    shift and go to state 260
    empty                          shift and go to state 261
    instruction                    shift and go to state 262
    assignment                     shift and go to state 263
    function                       shift and go to state 56
    consult                        shift and go to state 57
    cycle                          shift and go to state 58
    statement                      shift and go to state 59
    identifier                     shift and go to state 264
    type                           shift and go to state 60
    insert                         shift and go to state 61
    del                            shift and go to state 62
    len                            shift and go to state 63
    neg                            shift and go to state 64
    t_f                            shift and go to state 65
    blink                          shift and go to state 66
    delay                          shift and go to state 67
    shape                          shift and go to state 68
    delete                         shift and go to state 69
    call                           shift and go to state 70
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 71

state 329

    (52) opt_statement -> ELSE LCORCH alt_block . RCORCH SEMICOLON

    RCORCH          shift and go to state 330


state 330

    (52) opt_statement -> ELSE LCORCH alt_block RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 331


state 331

    (52) opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .

    IF              reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    TYPE            reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    LEN             reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    BLINK           reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    DELAY           reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    CALL            reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    ID              reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    FOR             reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    END             reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    RCORCH          reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)

