Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOKED
    CONST
    LENGHTERROR
    VARERROR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> const_block main_proc
Rule 2     const_block -> const const const const const block
Rule 3     block -> procedure block
Rule 4     block -> global block
Rule 5     block -> empty
Rule 6     alt_block -> alt_content alt_block
Rule 7     alt_block -> empty
Rule 8     alt_content -> instruction
Rule 9     alt_content -> assignment
Rule 10    instruction -> function
Rule 11    instruction -> consult SEMICOLON
Rule 12    instruction -> cycle
Rule 13    instruction -> statement
Rule 14    global -> assignment
Rule 15    global_call -> GLOBAL global_term SEMICOLON global_call
Rule 16    global_call -> empty
Rule 17    global_term -> ID COMMA global_term
Rule 18    global_term -> ID
Rule 19    assignment -> identifier ASSIGN a_content SEMICOLON
Rule 20    assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
Rule 21    function -> type
Rule 22    function -> insert
Rule 23    function -> del
Rule 24    function -> len
Rule 25    function -> neg
Rule 26    function -> t_f
Rule 27    function -> blink
Rule 28    function -> delay
Rule 29    function -> shape
Rule 30    function -> delete
Rule 31    function -> call
Rule 32    type -> TYPE LPARENT identifier RPARENT SEMICOLON
Rule 33    a_content -> RANGE LPARENT iterable COMMA value RPARENT
Rule 34    insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
Rule 35    del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
Rule 36    len -> LEN LPARENT identifier RPARENT SEMICOLON
Rule 37    neg -> identifier DOT NEG SEMICOLON
Rule 38    t_f -> identifier DOT tf SEMICOLON
Rule 39    blink -> BLINK LPARENT b_content RPARENT SEMICOLON
Rule 40    delay -> DELAY LPARENT d_content RPARENT SEMICOLON
Rule 41    shape_arg -> SHAPEF
Rule 42    shape_arg -> SHAPEC
Rule 43    shape_arg -> SHAPEA
Rule 44    shape -> identifier DOT shape_arg SEMICOLON
Rule 45    delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
Rule 46    call -> CALL proc_call SEMICOLON
Rule 47    cycle -> for
Rule 48    for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON
Rule 49    step -> STEP INT
Rule 50    step -> empty
Rule 51    statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
Rule 52    opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON
Rule 53    opt_statement -> empty
Rule 54    procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
Rule 55    proc_dec -> proc_name LPARENT parameter RPARENT
Rule 56    proc_call -> proc_name LPARENT param RPARENT
Rule 57    proc_name -> ID
Rule 58    parameter -> proc_param
Rule 59    parameter -> proc_param COMMA parameter
Rule 60    parameter -> empty
Rule 61    proc_param -> ID
Rule 62    param -> call_param
Rule 63    param -> call_param COMMA param
Rule 64    param -> empty
Rule 65    call_param -> ass_param
Rule 66    ass_param -> iterable
Rule 67    ass_param -> mat
Rule 68    ass_param -> 3dmat
Rule 69    ass_param -> value
Rule 70    body -> global_call BEGIN alt_block END SEMICOLON
Rule 71    main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block
Rule 72    main_body -> BEGIN main_block END SEMICOLON
Rule 73    main_block -> main_content main_block
Rule 74    main_content -> instruction
Rule 75    main_content -> compile
Rule 76    compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON
Rule 77    compile_cube -> ID
Rule 78    compile_cube -> 3dmat
Rule 79    main_block -> empty
Rule 80    arithmetic -> term
Rule 81    arithmetic -> adding_operator term
Rule 82    arithmetic -> arithmetic adding_operator term
Rule 83    term -> factor
Rule 84    term -> term multiplying_operator factor
Rule 85    factor -> INT
Rule 86    factor -> ID
Rule 87    factor -> LPARENT arithmetic RPARENT
Rule 88    const -> TIMER ASSIGN INT SEMICOLON
Rule 89    const -> RANGOTIMER ASSIGN time_mes SEMICOLON
Rule 90    const -> dimension ASSIGN INT SEMICOLON
Rule 91    const -> CUBO ASSIGN INT SEMICOLON
Rule 92    a_content -> value
Rule 93    a_content -> arithmetic
Rule 94    a_content -> list
Rule 95    a_content -> mat
Rule 96    a_content -> 3dmat
Rule 97    a_content -> consult
Rule 98    b_content -> identifier COMMA INT COMMA time_mes COMMA value
Rule 99    b_content -> identifier COMMA value
Rule 100   d_content -> empty
Rule 101   d_content -> iterable COMMA time_mes
Rule 102   tf -> T
Rule 103   tf -> F
Rule 104   i_content -> iterable COMMA insertable
Rule 105   i_content -> iterable COMMA INT i_ind
Rule 106   list -> PARENTCL list_term PARENTCR
Rule 107   list -> PARENTCL empty PARENTCR
Rule 108   list_term -> list_value COMMA list_term
Rule 109   list_term -> list_value
Rule 110   list_value -> value
Rule 111   mat -> PARENTCL mat_term PARENTCR
Rule 112   mat_term -> mat_value COMMA mat_term
Rule 113   mat_term -> mat_value
Rule 114   mat_value -> list
Rule 115   3dmat -> PARENTCL 3dmat_term PARENTCR
Rule 116   3dmat_term -> 3dmat_value COMMA 3dmat_term
Rule 117   3dmat_term -> 3dmat_value
Rule 118   3dmat_value -> mat
Rule 119   consult -> list_consult
Rule 120   consult -> mat_consult
Rule 121   consult -> 3dmat_consult
Rule 122   list_consult -> ID list_consultT
Rule 123   list_consultT -> PARENTCL indice PARENTCR
Rule 124   list_consultT -> PARENTCL indice TP indice PARENTCR
Rule 125   mat_consult -> ID mat_consultT
Rule 126   mat_consultT -> PARENTCL indice COMMA indice PARENTCR
Rule 127   mat_consultT -> PARENTCL TP COMMA indice PARENTCR
Rule 128   mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT
Rule 129   mat_consultT -> PARENTCL indice PARENTCR list_consultT
Rule 130   3dmat_consult -> ID 3dmat_consultT
Rule 131   3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR
Rule 132   3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT
Rule 133   indice -> INT
Rule 134   indice -> ID
Rule 135   i_ind -> COMMA iterable
Rule 136   i_ind -> empty
Rule 137   dimension -> DIMFILAS
Rule 138   dimension -> DIMCOLUMNAS
Rule 139   time_mes -> QUOTES MIL QUOTES
Rule 140   time_mes -> QUOTES MIN QUOTES
Rule 141   time_mes -> QUOTES SEG QUOTES
Rule 142   adding_operator -> PLUS
Rule 143   adding_operator -> MINUS
Rule 144   multiplying_operator -> TIMES
Rule 145   multiplying_operator -> EXP
Rule 146   multiplying_operator -> DIVIDE
Rule 147   multiplying_operator -> DIVENT
Rule 148   multiplying_operator -> MOD
Rule 149   value -> FALSE
Rule 150   value -> TRUE
Rule 151   bif_value -> value
Rule 152   bif_value -> arithmetic
Rule 153   relation -> NE
Rule 154   relation -> LT
Rule 155   relation -> GT
Rule 156   relation -> LTE
Rule 157   relation -> GTE
Rule 158   relation -> COMPARE
Rule 159   identifier -> ID
Rule 160   identifier -> consult
Rule 161   iterable -> identifier
Rule 162   iterable -> INT
Rule 163   iterable -> list
Rule 164   insertable -> value
Rule 165   insertable -> identifier
Rule 166   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 19 20 88 89 90 91
BEGIN                : 70 72
BLINK                : 39
BOOKED               : 
CALL                 : 46
COMMA                : 17 20 20 33 45 59 63 98 98 98 99 101 104 105 108 112 116 126 127 128 131 131 135
COMPARE              : 158
COMPILE              : 76
CONST                : 
CUBO                 : 91
DEL                  : 35
DELAY                : 40
DELETE               : 45
DIMCOLUMNAS          : 138
DIMFILAS             : 137
DIVENT               : 147
DIVIDE               : 146
DOT                  : 34 35 37 38 44 45
ELSE                 : 52
END                  : 70 72
EXP                  : 145
F                    : 103
FALSE                : 149
FOR                  : 48
GLOBAL               : 15
GT                   : 155
GTE                  : 157
ID                   : 17 18 48 57 61 77 86 122 125 130 134 159
IF                   : 51
IN                   : 48
INSERT               : 34
INT                  : 45 49 85 88 90 91 98 105 133 162
LCORCH               : 48 51 52 54 71
LEN                  : 36
LENGHTERROR          : 
LPARENT              : 32 33 34 35 36 39 40 45 51 55 56 71 76 87
LT                   : 154
LTE                  : 156
MAIN                 : 71
MIL                  : 139
MIN                  : 140
MINUS                : 143
MOD                  : 148
NE                   : 153
NEG                  : 37
PARENTCL             : 106 107 111 115 123 124 126 127 128 129 131 132
PARENTCR             : 106 107 111 115 123 124 126 127 128 129 131 132
PLUS                 : 142
PROCEDURE            : 54
QUOTES               : 139 139 140 140 141 141
RANGE                : 33
RANGOTIMER           : 89
RCORCH               : 48 51 52 54 71
RPARENT              : 32 33 34 35 36 39 40 45 51 55 56 71 76 87
SEG                  : 141
SEMICOLON            : 11 15 19 20 32 34 35 36 37 38 39 40 44 45 46 48 51 52 54 70 71 72 76 88 89 90 91
SHAPEA               : 43
SHAPEC               : 42
SHAPEF               : 41
STEP                 : 49
T                    : 102
TIMER                : 88
TIMES                : 144
TP                   : 124 127 128
TRUE                 : 150
TYPE                 : 32
VARERROR             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

3dmat                : 68 78 96
3dmat_consult        : 121
3dmat_consultT       : 130
3dmat_term           : 115 116
3dmat_value          : 116 117
a_content            : 19 20 20
adding_operator      : 81 82
alt_block            : 6 48 51 52 70
alt_content          : 6
arithmetic           : 82 87 93 152
ass_param            : 65
assignment           : 9 14
b_content            : 39
bif_value            : 51
blink                : 27
block                : 2 3 4 71
body                 : 54
call                 : 31
call_param           : 62 63
compile              : 75
compile_cube         : 76
const                : 2 2 2 2 2
const_block          : 1
consult              : 11 97 160
cycle                : 12
d_content            : 40
del                  : 23
delay                : 28
delete               : 30
dimension            : 90
empty                : 5 7 16 50 53 60 64 79 100 107 136
factor               : 83 84
for                  : 47
function             : 10
global               : 4
global_call          : 15 70
global_term          : 15 17
i_content            : 34
i_ind                : 105
identifier           : 19 20 20 32 34 35 36 37 38 44 45 98 99 161 165
indice               : 45 123 124 124 126 126 127 128 129 131 131 131 132
insert               : 22
insertable           : 104
instruction          : 8 74
iterable             : 33 35 48 51 66 101 104 105 135
len                  : 24
list                 : 94 114 163
list_consult         : 119
list_consultT        : 122 128 129
list_term            : 106 108
list_value           : 108 109
main_block           : 72 73
main_body            : 71
main_content         : 73
main_proc            : 1
mat                  : 67 95 118
mat_consult          : 120
mat_consultT         : 125 132
mat_term             : 111 112
mat_value            : 112 113
multiplying_operator : 84
neg                  : 25
opt_statement        : 51
param                : 56 63
parameter            : 55 59
proc_call            : 46
proc_dec             : 54
proc_name            : 55 56
proc_param           : 58 59
procedure            : 3
program              : 0
relation             : 51
shape                : 29
shape_arg            : 44
statement            : 13
step                 : 48
t_f                  : 26
term                 : 80 81 82 84
tf                   : 38
time_mes             : 89 98 101
type                 : 21
value                : 33 69 92 98 99 110 151 164

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . const_block main_proc
    (2) const_block -> . const const const const const block
    (88) const -> . TIMER ASSIGN INT SEMICOLON
    (89) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (90) const -> . dimension ASSIGN INT SEMICOLON
    (91) const -> . CUBO ASSIGN INT SEMICOLON
    (137) dimension -> . DIMFILAS
    (138) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    program                        shift and go to state 1
    const_block                    shift and go to state 2
    const                          shift and go to state 3
    dimension                      shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> const_block . main_proc
    (71) main_proc -> . MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block

    MAIN            shift and go to state 11

    main_proc                      shift and go to state 10

state 3

    (2) const_block -> const . const const const const block
    (88) const -> . TIMER ASSIGN INT SEMICOLON
    (89) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (90) const -> . dimension ASSIGN INT SEMICOLON
    (91) const -> . CUBO ASSIGN INT SEMICOLON
    (137) dimension -> . DIMFILAS
    (138) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 12
    dimension                      shift and go to state 6

state 4

    (88) const -> TIMER . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 13


state 5

    (89) const -> RANGOTIMER . ASSIGN time_mes SEMICOLON

    ASSIGN          shift and go to state 14


state 6

    (90) const -> dimension . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 15


state 7

    (91) const -> CUBO . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 16


state 8

    (137) dimension -> DIMFILAS .

    ASSIGN          reduce using rule 137 (dimension -> DIMFILAS .)


state 9

    (138) dimension -> DIMCOLUMNAS .

    ASSIGN          reduce using rule 138 (dimension -> DIMCOLUMNAS .)


state 10

    (1) program -> const_block main_proc .

    $end            reduce using rule 1 (program -> const_block main_proc .)


state 11

    (71) main_proc -> MAIN . LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block

    LPARENT         shift and go to state 17


state 12

    (2) const_block -> const const . const const const block
    (88) const -> . TIMER ASSIGN INT SEMICOLON
    (89) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (90) const -> . dimension ASSIGN INT SEMICOLON
    (91) const -> . CUBO ASSIGN INT SEMICOLON
    (137) dimension -> . DIMFILAS
    (138) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 18
    dimension                      shift and go to state 6

state 13

    (88) const -> TIMER ASSIGN . INT SEMICOLON

    INT             shift and go to state 19


state 14

    (89) const -> RANGOTIMER ASSIGN . time_mes SEMICOLON
    (139) time_mes -> . QUOTES MIL QUOTES
    (140) time_mes -> . QUOTES MIN QUOTES
    (141) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 20

state 15

    (90) const -> dimension ASSIGN . INT SEMICOLON

    INT             shift and go to state 22


state 16

    (91) const -> CUBO ASSIGN . INT SEMICOLON

    INT             shift and go to state 23


state 17

    (71) main_proc -> MAIN LPARENT . RPARENT LCORCH main_body RCORCH SEMICOLON block

    RPARENT         shift and go to state 24


state 18

    (2) const_block -> const const const . const const block
    (88) const -> . TIMER ASSIGN INT SEMICOLON
    (89) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (90) const -> . dimension ASSIGN INT SEMICOLON
    (91) const -> . CUBO ASSIGN INT SEMICOLON
    (137) dimension -> . DIMFILAS
    (138) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 25
    dimension                      shift and go to state 6

state 19

    (88) const -> TIMER ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 26


state 20

    (89) const -> RANGOTIMER ASSIGN time_mes . SEMICOLON

    SEMICOLON       shift and go to state 27


state 21

    (139) time_mes -> QUOTES . MIL QUOTES
    (140) time_mes -> QUOTES . MIN QUOTES
    (141) time_mes -> QUOTES . SEG QUOTES

    MIL             shift and go to state 28
    MIN             shift and go to state 29
    SEG             shift and go to state 30


state 22

    (90) const -> dimension ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 31


state 23

    (91) const -> CUBO ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 32


state 24

    (71) main_proc -> MAIN LPARENT RPARENT . LCORCH main_body RCORCH SEMICOLON block

    LCORCH          shift and go to state 33


state 25

    (2) const_block -> const const const const . const block
    (88) const -> . TIMER ASSIGN INT SEMICOLON
    (89) const -> . RANGOTIMER ASSIGN time_mes SEMICOLON
    (90) const -> . dimension ASSIGN INT SEMICOLON
    (91) const -> . CUBO ASSIGN INT SEMICOLON
    (137) dimension -> . DIMFILAS
    (138) dimension -> . DIMCOLUMNAS

    TIMER           shift and go to state 4
    RANGOTIMER      shift and go to state 5
    CUBO            shift and go to state 7
    DIMFILAS        shift and go to state 8
    DIMCOLUMNAS     shift and go to state 9

    const                          shift and go to state 34
    dimension                      shift and go to state 6

state 26

    (88) const -> TIMER ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)
    ID              reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 88 (const -> TIMER ASSIGN INT SEMICOLON .)


state 27

    (89) const -> RANGOTIMER ASSIGN time_mes SEMICOLON .

    TIMER           reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    RANGOTIMER      reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    CUBO            reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMFILAS        reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    PROCEDURE       reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    ID              reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)
    MAIN            reduce using rule 89 (const -> RANGOTIMER ASSIGN time_mes SEMICOLON .)


state 28

    (139) time_mes -> QUOTES MIL . QUOTES

    QUOTES          shift and go to state 35


state 29

    (140) time_mes -> QUOTES MIN . QUOTES

    QUOTES          shift and go to state 36


state 30

    (141) time_mes -> QUOTES SEG . QUOTES

    QUOTES          shift and go to state 37


state 31

    (90) const -> dimension ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)
    ID              reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 90 (const -> dimension ASSIGN INT SEMICOLON .)


state 32

    (91) const -> CUBO ASSIGN INT SEMICOLON .

    TIMER           reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)
    RANGOTIMER      reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)
    CUBO            reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMFILAS        reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)
    DIMCOLUMNAS     reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)
    PROCEDURE       reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)
    ID              reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)
    MAIN            reduce using rule 91 (const -> CUBO ASSIGN INT SEMICOLON .)


state 33

    (71) main_proc -> MAIN LPARENT RPARENT LCORCH . main_body RCORCH SEMICOLON block
    (72) main_body -> . BEGIN main_block END SEMICOLON

    BEGIN           shift and go to state 39

    main_body                      shift and go to state 38

state 34

    (2) const_block -> const const const const const . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (166) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    MAIN            reduce using rule 166 (empty -> .)
    ID              shift and go to state 47

    block                          shift and go to state 40
    procedure                      shift and go to state 41
    global                         shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 35

    (139) time_mes -> QUOTES MIL QUOTES .

    SEMICOLON       reduce using rule 139 (time_mes -> QUOTES MIL QUOTES .)
    RPARENT         reduce using rule 139 (time_mes -> QUOTES MIL QUOTES .)
    COMMA           reduce using rule 139 (time_mes -> QUOTES MIL QUOTES .)


state 36

    (140) time_mes -> QUOTES MIN QUOTES .

    SEMICOLON       reduce using rule 140 (time_mes -> QUOTES MIN QUOTES .)
    RPARENT         reduce using rule 140 (time_mes -> QUOTES MIN QUOTES .)
    COMMA           reduce using rule 140 (time_mes -> QUOTES MIN QUOTES .)


state 37

    (141) time_mes -> QUOTES SEG QUOTES .

    SEMICOLON       reduce using rule 141 (time_mes -> QUOTES SEG QUOTES .)
    RPARENT         reduce using rule 141 (time_mes -> QUOTES SEG QUOTES .)
    COMMA           reduce using rule 141 (time_mes -> QUOTES SEG QUOTES .)


state 38

    (71) main_proc -> MAIN LPARENT RPARENT LCORCH main_body . RCORCH SEMICOLON block

    RCORCH          shift and go to state 52


state 39

    (72) main_body -> BEGIN . main_block END SEMICOLON
    (73) main_block -> . main_content main_block
    (79) main_block -> . empty
    (74) main_content -> . instruction
    (75) main_content -> . compile
    (166) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (76) compile -> . COMPILE LPARENT compile_cube RPARENT SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_call SEMICOLON
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult

    END             reduce using rule 166 (empty -> .)
    COMPILE         shift and go to state 62
    IF              shift and go to state 75
    TYPE            shift and go to state 76
    LEN             shift and go to state 78
    BLINK           shift and go to state 79
    DELAY           shift and go to state 80
    CALL            shift and go to state 81
    ID              shift and go to state 82
    FOR             shift and go to state 83

    main_block                     shift and go to state 53
    main_content                   shift and go to state 54
    empty                          shift and go to state 55
    instruction                    shift and go to state 56
    compile                        shift and go to state 57
    function                       shift and go to state 58
    consult                        shift and go to state 59
    cycle                          shift and go to state 60
    statement                      shift and go to state 61
    type                           shift and go to state 63
    insert                         shift and go to state 64
    del                            shift and go to state 65
    len                            shift and go to state 66
    neg                            shift and go to state 67
    t_f                            shift and go to state 68
    blink                          shift and go to state 69
    delay                          shift and go to state 70
    shape                          shift and go to state 71
    delete                         shift and go to state 72
    call                           shift and go to state 73
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 74
    identifier                     shift and go to state 77

state 40

    (2) const_block -> const const const const const block .

    MAIN            reduce using rule 2 (const_block -> const const const const const block .)


state 41

    (3) block -> procedure . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (166) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    MAIN            reduce using rule 166 (empty -> .)
    $end            reduce using rule 166 (empty -> .)
    ID              shift and go to state 47

    procedure                      shift and go to state 41
    block                          shift and go to state 84
    global                         shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 42

    (4) block -> global . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (166) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    MAIN            reduce using rule 166 (empty -> .)
    $end            reduce using rule 166 (empty -> .)
    ID              shift and go to state 47

    global                         shift and go to state 42
    block                          shift and go to state 85
    procedure                      shift and go to state 41
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 43

    (5) block -> empty .

    MAIN            reduce using rule 5 (block -> empty .)
    $end            reduce using rule 5 (block -> empty .)


state 44

    (54) procedure -> PROCEDURE . proc_dec LCORCH body RCORCH SEMICOLON
    (55) proc_dec -> . proc_name LPARENT parameter RPARENT
    (57) proc_name -> . ID

    ID              shift and go to state 88

    proc_dec                       shift and go to state 86
    proc_name                      shift and go to state 87

state 45

    (14) global -> assignment .

    PROCEDURE       reduce using rule 14 (global -> assignment .)
    ID              reduce using rule 14 (global -> assignment .)
    MAIN            reduce using rule 14 (global -> assignment .)
    $end            reduce using rule 14 (global -> assignment .)


state 46

    (19) assignment -> identifier . ASSIGN a_content SEMICOLON
    (20) assignment -> identifier . COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON

    ASSIGN          shift and go to state 89
    COMMA           shift and go to state 90


state 47

    (159) identifier -> ID .
    (122) list_consult -> ID . list_consultT
    (125) mat_consult -> ID . mat_consultT
    (130) 3dmat_consult -> ID . 3dmat_consultT
    (123) list_consultT -> . PARENTCL indice PARENTCR
    (124) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (126) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (127) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (128) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR list_consultT
    (129) mat_consultT -> . PARENTCL indice PARENTCR list_consultT
    (131) 3dmat_consultT -> . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (132) 3dmat_consultT -> . PARENTCL indice PARENTCR mat_consultT

    ASSIGN          reduce using rule 159 (identifier -> ID .)
    COMMA           reduce using rule 159 (identifier -> ID .)
    NE              reduce using rule 159 (identifier -> ID .)
    LT              reduce using rule 159 (identifier -> ID .)
    GT              reduce using rule 159 (identifier -> ID .)
    LTE             reduce using rule 159 (identifier -> ID .)
    GTE             reduce using rule 159 (identifier -> ID .)
    COMPARE         reduce using rule 159 (identifier -> ID .)
    RPARENT         reduce using rule 159 (identifier -> ID .)
    STEP            reduce using rule 159 (identifier -> ID .)
    LCORCH          reduce using rule 159 (identifier -> ID .)
    DOT             reduce using rule 159 (identifier -> ID .)
    PARENTCL        shift and go to state 94

    list_consultT                  shift and go to state 91
    mat_consultT                   shift and go to state 92
    3dmat_consultT                 shift and go to state 93

state 48

    (160) identifier -> consult .

    ASSIGN          reduce using rule 160 (identifier -> consult .)
    COMMA           reduce using rule 160 (identifier -> consult .)
    NE              reduce using rule 160 (identifier -> consult .)
    LT              reduce using rule 160 (identifier -> consult .)
    GT              reduce using rule 160 (identifier -> consult .)
    LTE             reduce using rule 160 (identifier -> consult .)
    GTE             reduce using rule 160 (identifier -> consult .)
    COMPARE         reduce using rule 160 (identifier -> consult .)
    RPARENT         reduce using rule 160 (identifier -> consult .)
    STEP            reduce using rule 160 (identifier -> consult .)
    LCORCH          reduce using rule 160 (identifier -> consult .)


state 49

    (119) consult -> list_consult .

    ASSIGN          reduce using rule 119 (consult -> list_consult .)
    COMMA           reduce using rule 119 (consult -> list_consult .)
    SEMICOLON       reduce using rule 119 (consult -> list_consult .)
    DOT             reduce using rule 119 (consult -> list_consult .)
    NE              reduce using rule 119 (consult -> list_consult .)
    LT              reduce using rule 119 (consult -> list_consult .)
    GT              reduce using rule 119 (consult -> list_consult .)
    LTE             reduce using rule 119 (consult -> list_consult .)
    GTE             reduce using rule 119 (consult -> list_consult .)
    COMPARE         reduce using rule 119 (consult -> list_consult .)
    RPARENT         reduce using rule 119 (consult -> list_consult .)
    STEP            reduce using rule 119 (consult -> list_consult .)
    LCORCH          reduce using rule 119 (consult -> list_consult .)


state 50

    (120) consult -> mat_consult .

    ASSIGN          reduce using rule 120 (consult -> mat_consult .)
    COMMA           reduce using rule 120 (consult -> mat_consult .)
    SEMICOLON       reduce using rule 120 (consult -> mat_consult .)
    DOT             reduce using rule 120 (consult -> mat_consult .)
    NE              reduce using rule 120 (consult -> mat_consult .)
    LT              reduce using rule 120 (consult -> mat_consult .)
    GT              reduce using rule 120 (consult -> mat_consult .)
    LTE             reduce using rule 120 (consult -> mat_consult .)
    GTE             reduce using rule 120 (consult -> mat_consult .)
    COMPARE         reduce using rule 120 (consult -> mat_consult .)
    RPARENT         reduce using rule 120 (consult -> mat_consult .)
    STEP            reduce using rule 120 (consult -> mat_consult .)
    LCORCH          reduce using rule 120 (consult -> mat_consult .)


state 51

    (121) consult -> 3dmat_consult .

    ASSIGN          reduce using rule 121 (consult -> 3dmat_consult .)
    COMMA           reduce using rule 121 (consult -> 3dmat_consult .)
    SEMICOLON       reduce using rule 121 (consult -> 3dmat_consult .)
    DOT             reduce using rule 121 (consult -> 3dmat_consult .)
    NE              reduce using rule 121 (consult -> 3dmat_consult .)
    LT              reduce using rule 121 (consult -> 3dmat_consult .)
    GT              reduce using rule 121 (consult -> 3dmat_consult .)
    LTE             reduce using rule 121 (consult -> 3dmat_consult .)
    GTE             reduce using rule 121 (consult -> 3dmat_consult .)
    COMPARE         reduce using rule 121 (consult -> 3dmat_consult .)
    RPARENT         reduce using rule 121 (consult -> 3dmat_consult .)
    STEP            reduce using rule 121 (consult -> 3dmat_consult .)
    LCORCH          reduce using rule 121 (consult -> 3dmat_consult .)


state 52

    (71) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH . SEMICOLON block

    SEMICOLON       shift and go to state 95


state 53

    (72) main_body -> BEGIN main_block . END SEMICOLON

    END             shift and go to state 96


state 54

    (73) main_block -> main_content . main_block
    (73) main_block -> . main_content main_block
    (79) main_block -> . empty
    (74) main_content -> . instruction
    (75) main_content -> . compile
    (166) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (76) compile -> . COMPILE LPARENT compile_cube RPARENT SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_call SEMICOLON
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult

    END             reduce using rule 166 (empty -> .)
    COMPILE         shift and go to state 62
    IF              shift and go to state 75
    TYPE            shift and go to state 76
    LEN             shift and go to state 78
    BLINK           shift and go to state 79
    DELAY           shift and go to state 80
    CALL            shift and go to state 81
    ID              shift and go to state 82
    FOR             shift and go to state 83

    main_content                   shift and go to state 54
    main_block                     shift and go to state 97
    empty                          shift and go to state 55
    instruction                    shift and go to state 56
    compile                        shift and go to state 57
    function                       shift and go to state 58
    consult                        shift and go to state 59
    cycle                          shift and go to state 60
    statement                      shift and go to state 61
    type                           shift and go to state 63
    insert                         shift and go to state 64
    del                            shift and go to state 65
    len                            shift and go to state 66
    neg                            shift and go to state 67
    t_f                            shift and go to state 68
    blink                          shift and go to state 69
    delay                          shift and go to state 70
    shape                          shift and go to state 71
    delete                         shift and go to state 72
    call                           shift and go to state 73
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 74
    identifier                     shift and go to state 77

state 55

    (79) main_block -> empty .

    END             reduce using rule 79 (main_block -> empty .)


state 56

    (74) main_content -> instruction .

    COMPILE         reduce using rule 74 (main_content -> instruction .)
    IF              reduce using rule 74 (main_content -> instruction .)
    TYPE            reduce using rule 74 (main_content -> instruction .)
    LEN             reduce using rule 74 (main_content -> instruction .)
    BLINK           reduce using rule 74 (main_content -> instruction .)
    DELAY           reduce using rule 74 (main_content -> instruction .)
    CALL            reduce using rule 74 (main_content -> instruction .)
    ID              reduce using rule 74 (main_content -> instruction .)
    FOR             reduce using rule 74 (main_content -> instruction .)
    END             reduce using rule 74 (main_content -> instruction .)


state 57

    (75) main_content -> compile .

    COMPILE         reduce using rule 75 (main_content -> compile .)
    IF              reduce using rule 75 (main_content -> compile .)
    TYPE            reduce using rule 75 (main_content -> compile .)
    LEN             reduce using rule 75 (main_content -> compile .)
    BLINK           reduce using rule 75 (main_content -> compile .)
    DELAY           reduce using rule 75 (main_content -> compile .)
    CALL            reduce using rule 75 (main_content -> compile .)
    ID              reduce using rule 75 (main_content -> compile .)
    FOR             reduce using rule 75 (main_content -> compile .)
    END             reduce using rule 75 (main_content -> compile .)


state 58

    (10) instruction -> function .

    COMPILE         reduce using rule 10 (instruction -> function .)
    IF              reduce using rule 10 (instruction -> function .)
    TYPE            reduce using rule 10 (instruction -> function .)
    LEN             reduce using rule 10 (instruction -> function .)
    BLINK           reduce using rule 10 (instruction -> function .)
    DELAY           reduce using rule 10 (instruction -> function .)
    CALL            reduce using rule 10 (instruction -> function .)
    ID              reduce using rule 10 (instruction -> function .)
    FOR             reduce using rule 10 (instruction -> function .)
    END             reduce using rule 10 (instruction -> function .)
    RCORCH          reduce using rule 10 (instruction -> function .)


state 59

    (11) instruction -> consult . SEMICOLON
    (160) identifier -> consult .

    SEMICOLON       shift and go to state 98
    DOT             reduce using rule 160 (identifier -> consult .)
    ASSIGN          reduce using rule 160 (identifier -> consult .)
    COMMA           reduce using rule 160 (identifier -> consult .)


state 60

    (12) instruction -> cycle .

    COMPILE         reduce using rule 12 (instruction -> cycle .)
    IF              reduce using rule 12 (instruction -> cycle .)
    TYPE            reduce using rule 12 (instruction -> cycle .)
    LEN             reduce using rule 12 (instruction -> cycle .)
    BLINK           reduce using rule 12 (instruction -> cycle .)
    DELAY           reduce using rule 12 (instruction -> cycle .)
    CALL            reduce using rule 12 (instruction -> cycle .)
    ID              reduce using rule 12 (instruction -> cycle .)
    FOR             reduce using rule 12 (instruction -> cycle .)
    END             reduce using rule 12 (instruction -> cycle .)
    RCORCH          reduce using rule 12 (instruction -> cycle .)


state 61

    (13) instruction -> statement .

    COMPILE         reduce using rule 13 (instruction -> statement .)
    IF              reduce using rule 13 (instruction -> statement .)
    TYPE            reduce using rule 13 (instruction -> statement .)
    LEN             reduce using rule 13 (instruction -> statement .)
    BLINK           reduce using rule 13 (instruction -> statement .)
    DELAY           reduce using rule 13 (instruction -> statement .)
    CALL            reduce using rule 13 (instruction -> statement .)
    ID              reduce using rule 13 (instruction -> statement .)
    FOR             reduce using rule 13 (instruction -> statement .)
    END             reduce using rule 13 (instruction -> statement .)
    RCORCH          reduce using rule 13 (instruction -> statement .)


state 62

    (76) compile -> COMPILE . LPARENT compile_cube RPARENT SEMICOLON

    LPARENT         shift and go to state 99


state 63

    (21) function -> type .

    COMPILE         reduce using rule 21 (function -> type .)
    IF              reduce using rule 21 (function -> type .)
    TYPE            reduce using rule 21 (function -> type .)
    LEN             reduce using rule 21 (function -> type .)
    BLINK           reduce using rule 21 (function -> type .)
    DELAY           reduce using rule 21 (function -> type .)
    CALL            reduce using rule 21 (function -> type .)
    ID              reduce using rule 21 (function -> type .)
    FOR             reduce using rule 21 (function -> type .)
    END             reduce using rule 21 (function -> type .)
    RCORCH          reduce using rule 21 (function -> type .)


state 64

    (22) function -> insert .

    COMPILE         reduce using rule 22 (function -> insert .)
    IF              reduce using rule 22 (function -> insert .)
    TYPE            reduce using rule 22 (function -> insert .)
    LEN             reduce using rule 22 (function -> insert .)
    BLINK           reduce using rule 22 (function -> insert .)
    DELAY           reduce using rule 22 (function -> insert .)
    CALL            reduce using rule 22 (function -> insert .)
    ID              reduce using rule 22 (function -> insert .)
    FOR             reduce using rule 22 (function -> insert .)
    END             reduce using rule 22 (function -> insert .)
    RCORCH          reduce using rule 22 (function -> insert .)


state 65

    (23) function -> del .

    COMPILE         reduce using rule 23 (function -> del .)
    IF              reduce using rule 23 (function -> del .)
    TYPE            reduce using rule 23 (function -> del .)
    LEN             reduce using rule 23 (function -> del .)
    BLINK           reduce using rule 23 (function -> del .)
    DELAY           reduce using rule 23 (function -> del .)
    CALL            reduce using rule 23 (function -> del .)
    ID              reduce using rule 23 (function -> del .)
    FOR             reduce using rule 23 (function -> del .)
    END             reduce using rule 23 (function -> del .)
    RCORCH          reduce using rule 23 (function -> del .)


state 66

    (24) function -> len .

    COMPILE         reduce using rule 24 (function -> len .)
    IF              reduce using rule 24 (function -> len .)
    TYPE            reduce using rule 24 (function -> len .)
    LEN             reduce using rule 24 (function -> len .)
    BLINK           reduce using rule 24 (function -> len .)
    DELAY           reduce using rule 24 (function -> len .)
    CALL            reduce using rule 24 (function -> len .)
    ID              reduce using rule 24 (function -> len .)
    FOR             reduce using rule 24 (function -> len .)
    END             reduce using rule 24 (function -> len .)
    RCORCH          reduce using rule 24 (function -> len .)


state 67

    (25) function -> neg .

    COMPILE         reduce using rule 25 (function -> neg .)
    IF              reduce using rule 25 (function -> neg .)
    TYPE            reduce using rule 25 (function -> neg .)
    LEN             reduce using rule 25 (function -> neg .)
    BLINK           reduce using rule 25 (function -> neg .)
    DELAY           reduce using rule 25 (function -> neg .)
    CALL            reduce using rule 25 (function -> neg .)
    ID              reduce using rule 25 (function -> neg .)
    FOR             reduce using rule 25 (function -> neg .)
    END             reduce using rule 25 (function -> neg .)
    RCORCH          reduce using rule 25 (function -> neg .)


state 68

    (26) function -> t_f .

    COMPILE         reduce using rule 26 (function -> t_f .)
    IF              reduce using rule 26 (function -> t_f .)
    TYPE            reduce using rule 26 (function -> t_f .)
    LEN             reduce using rule 26 (function -> t_f .)
    BLINK           reduce using rule 26 (function -> t_f .)
    DELAY           reduce using rule 26 (function -> t_f .)
    CALL            reduce using rule 26 (function -> t_f .)
    ID              reduce using rule 26 (function -> t_f .)
    FOR             reduce using rule 26 (function -> t_f .)
    END             reduce using rule 26 (function -> t_f .)
    RCORCH          reduce using rule 26 (function -> t_f .)


state 69

    (27) function -> blink .

    COMPILE         reduce using rule 27 (function -> blink .)
    IF              reduce using rule 27 (function -> blink .)
    TYPE            reduce using rule 27 (function -> blink .)
    LEN             reduce using rule 27 (function -> blink .)
    BLINK           reduce using rule 27 (function -> blink .)
    DELAY           reduce using rule 27 (function -> blink .)
    CALL            reduce using rule 27 (function -> blink .)
    ID              reduce using rule 27 (function -> blink .)
    FOR             reduce using rule 27 (function -> blink .)
    END             reduce using rule 27 (function -> blink .)
    RCORCH          reduce using rule 27 (function -> blink .)


state 70

    (28) function -> delay .

    COMPILE         reduce using rule 28 (function -> delay .)
    IF              reduce using rule 28 (function -> delay .)
    TYPE            reduce using rule 28 (function -> delay .)
    LEN             reduce using rule 28 (function -> delay .)
    BLINK           reduce using rule 28 (function -> delay .)
    DELAY           reduce using rule 28 (function -> delay .)
    CALL            reduce using rule 28 (function -> delay .)
    ID              reduce using rule 28 (function -> delay .)
    FOR             reduce using rule 28 (function -> delay .)
    END             reduce using rule 28 (function -> delay .)
    RCORCH          reduce using rule 28 (function -> delay .)


state 71

    (29) function -> shape .

    COMPILE         reduce using rule 29 (function -> shape .)
    IF              reduce using rule 29 (function -> shape .)
    TYPE            reduce using rule 29 (function -> shape .)
    LEN             reduce using rule 29 (function -> shape .)
    BLINK           reduce using rule 29 (function -> shape .)
    DELAY           reduce using rule 29 (function -> shape .)
    CALL            reduce using rule 29 (function -> shape .)
    ID              reduce using rule 29 (function -> shape .)
    FOR             reduce using rule 29 (function -> shape .)
    END             reduce using rule 29 (function -> shape .)
    RCORCH          reduce using rule 29 (function -> shape .)


state 72

    (30) function -> delete .

    COMPILE         reduce using rule 30 (function -> delete .)
    IF              reduce using rule 30 (function -> delete .)
    TYPE            reduce using rule 30 (function -> delete .)
    LEN             reduce using rule 30 (function -> delete .)
    BLINK           reduce using rule 30 (function -> delete .)
    DELAY           reduce using rule 30 (function -> delete .)
    CALL            reduce using rule 30 (function -> delete .)
    ID              reduce using rule 30 (function -> delete .)
    FOR             reduce using rule 30 (function -> delete .)
    END             reduce using rule 30 (function -> delete .)
    RCORCH          reduce using rule 30 (function -> delete .)


state 73

    (31) function -> call .

    COMPILE         reduce using rule 31 (function -> call .)
    IF              reduce using rule 31 (function -> call .)
    TYPE            reduce using rule 31 (function -> call .)
    LEN             reduce using rule 31 (function -> call .)
    BLINK           reduce using rule 31 (function -> call .)
    DELAY           reduce using rule 31 (function -> call .)
    CALL            reduce using rule 31 (function -> call .)
    ID              reduce using rule 31 (function -> call .)
    FOR             reduce using rule 31 (function -> call .)
    END             reduce using rule 31 (function -> call .)
    RCORCH          reduce using rule 31 (function -> call .)


state 74

    (47) cycle -> for .

    COMPILE         reduce using rule 47 (cycle -> for .)
    IF              reduce using rule 47 (cycle -> for .)
    TYPE            reduce using rule 47 (cycle -> for .)
    LEN             reduce using rule 47 (cycle -> for .)
    BLINK           reduce using rule 47 (cycle -> for .)
    DELAY           reduce using rule 47 (cycle -> for .)
    CALL            reduce using rule 47 (cycle -> for .)
    ID              reduce using rule 47 (cycle -> for .)
    FOR             reduce using rule 47 (cycle -> for .)
    END             reduce using rule 47 (cycle -> for .)
    RCORCH          reduce using rule 47 (cycle -> for .)


state 75

    (51) statement -> IF . LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement

    LPARENT         shift and go to state 100


state 76

    (32) type -> TYPE . LPARENT identifier RPARENT SEMICOLON

    LPARENT         shift and go to state 101


state 77

    (34) insert -> identifier . DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> identifier . DOT DEL LPARENT iterable RPARENT SEMICOLON
    (37) neg -> identifier . DOT NEG SEMICOLON
    (38) t_f -> identifier . DOT tf SEMICOLON
    (44) shape -> identifier . DOT shape_arg SEMICOLON
    (45) delete -> identifier . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON

    DOT             shift and go to state 102


state 78

    (36) len -> LEN . LPARENT identifier RPARENT SEMICOLON

    LPARENT         shift and go to state 103


state 79

    (39) blink -> BLINK . LPARENT b_content RPARENT SEMICOLON

    LPARENT         shift and go to state 104


state 80

    (40) delay -> DELAY . LPARENT d_content RPARENT SEMICOLON

    LPARENT         shift and go to state 105


state 81

    (46) call -> CALL . proc_call SEMICOLON
    (56) proc_call -> . proc_name LPARENT param RPARENT
    (57) proc_name -> . ID

    ID              shift and go to state 88

    proc_call                      shift and go to state 106
    proc_name                      shift and go to state 107

state 82

    (122) list_consult -> ID . list_consultT
    (125) mat_consult -> ID . mat_consultT
    (130) 3dmat_consult -> ID . 3dmat_consultT
    (159) identifier -> ID .
    (123) list_consultT -> . PARENTCL indice PARENTCR
    (124) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (126) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (127) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (128) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR list_consultT
    (129) mat_consultT -> . PARENTCL indice PARENTCR list_consultT
    (131) 3dmat_consultT -> . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (132) 3dmat_consultT -> . PARENTCL indice PARENTCR mat_consultT

    DOT             reduce using rule 159 (identifier -> ID .)
    PARENTCL        shift and go to state 94

    list_consultT                  shift and go to state 91
    mat_consultT                   shift and go to state 92
    3dmat_consultT                 shift and go to state 93

state 83

    (48) for -> FOR . ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    ID              shift and go to state 108


state 84

    (3) block -> procedure block .

    MAIN            reduce using rule 3 (block -> procedure block .)
    $end            reduce using rule 3 (block -> procedure block .)


state 85

    (4) block -> global block .

    MAIN            reduce using rule 4 (block -> global block .)
    $end            reduce using rule 4 (block -> global block .)


state 86

    (54) procedure -> PROCEDURE proc_dec . LCORCH body RCORCH SEMICOLON

    LCORCH          shift and go to state 109


state 87

    (55) proc_dec -> proc_name . LPARENT parameter RPARENT

    LPARENT         shift and go to state 110


state 88

    (57) proc_name -> ID .

    LPARENT         reduce using rule 57 (proc_name -> ID .)


state 89

    (19) assignment -> identifier ASSIGN . a_content SEMICOLON
    (33) a_content -> . RANGE LPARENT iterable COMMA value RPARENT
    (92) a_content -> . value
    (93) a_content -> . arithmetic
    (94) a_content -> . list
    (95) a_content -> . mat
    (96) a_content -> . 3dmat
    (97) a_content -> . consult
    (149) value -> . FALSE
    (150) value -> . TRUE
    (80) arithmetic -> . term
    (81) arithmetic -> . adding_operator term
    (82) arithmetic -> . arithmetic adding_operator term
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (111) mat -> . PARENTCL mat_term PARENTCR
    (115) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (83) term -> . factor
    (84) term -> . term multiplying_operator factor
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 112
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    PARENTCL        shift and go to state 124
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    ID              shift and go to state 128
    INT             shift and go to state 129
    LPARENT         shift and go to state 113

    a_content                      shift and go to state 111
    value                          shift and go to state 114
    arithmetic                     shift and go to state 115
    list                           shift and go to state 116
    mat                            shift and go to state 117
    3dmat                          shift and go to state 118
    consult                        shift and go to state 119
    term                           shift and go to state 122
    adding_operator                shift and go to state 123
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    factor                         shift and go to state 125

state 90

    (20) assignment -> identifier COMMA . identifier ASSIGN a_content COMMA a_content SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    identifier                     shift and go to state 130
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 91

    (122) list_consult -> ID list_consultT .

    ASSIGN          reduce using rule 122 (list_consult -> ID list_consultT .)
    COMMA           reduce using rule 122 (list_consult -> ID list_consultT .)
    SEMICOLON       reduce using rule 122 (list_consult -> ID list_consultT .)
    DOT             reduce using rule 122 (list_consult -> ID list_consultT .)
    NE              reduce using rule 122 (list_consult -> ID list_consultT .)
    LT              reduce using rule 122 (list_consult -> ID list_consultT .)
    GT              reduce using rule 122 (list_consult -> ID list_consultT .)
    LTE             reduce using rule 122 (list_consult -> ID list_consultT .)
    GTE             reduce using rule 122 (list_consult -> ID list_consultT .)
    COMPARE         reduce using rule 122 (list_consult -> ID list_consultT .)
    RPARENT         reduce using rule 122 (list_consult -> ID list_consultT .)
    STEP            reduce using rule 122 (list_consult -> ID list_consultT .)
    LCORCH          reduce using rule 122 (list_consult -> ID list_consultT .)


state 92

    (125) mat_consult -> ID mat_consultT .

    ASSIGN          reduce using rule 125 (mat_consult -> ID mat_consultT .)
    COMMA           reduce using rule 125 (mat_consult -> ID mat_consultT .)
    SEMICOLON       reduce using rule 125 (mat_consult -> ID mat_consultT .)
    DOT             reduce using rule 125 (mat_consult -> ID mat_consultT .)
    NE              reduce using rule 125 (mat_consult -> ID mat_consultT .)
    LT              reduce using rule 125 (mat_consult -> ID mat_consultT .)
    GT              reduce using rule 125 (mat_consult -> ID mat_consultT .)
    LTE             reduce using rule 125 (mat_consult -> ID mat_consultT .)
    GTE             reduce using rule 125 (mat_consult -> ID mat_consultT .)
    COMPARE         reduce using rule 125 (mat_consult -> ID mat_consultT .)
    RPARENT         reduce using rule 125 (mat_consult -> ID mat_consultT .)
    STEP            reduce using rule 125 (mat_consult -> ID mat_consultT .)
    LCORCH          reduce using rule 125 (mat_consult -> ID mat_consultT .)


state 93

    (130) 3dmat_consult -> ID 3dmat_consultT .

    ASSIGN          reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    COMMA           reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    SEMICOLON       reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    DOT             reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    NE              reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    LT              reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    GT              reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    LTE             reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    GTE             reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    COMPARE         reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    RPARENT         reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    STEP            reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)
    LCORCH          reduce using rule 130 (3dmat_consult -> ID 3dmat_consultT .)


state 94

    (123) list_consultT -> PARENTCL . indice PARENTCR
    (124) list_consultT -> PARENTCL . indice TP indice PARENTCR
    (126) mat_consultT -> PARENTCL . indice COMMA indice PARENTCR
    (127) mat_consultT -> PARENTCL . TP COMMA indice PARENTCR
    (128) mat_consultT -> PARENTCL . TP COMMA indice PARENTCR list_consultT
    (129) mat_consultT -> PARENTCL . indice PARENTCR list_consultT
    (131) 3dmat_consultT -> PARENTCL . indice COMMA indice COMMA indice PARENTCR
    (132) 3dmat_consultT -> PARENTCL . indice PARENTCR mat_consultT
    (133) indice -> . INT
    (134) indice -> . ID

    TP              shift and go to state 132
    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 131

state 95

    (71) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON . block
    (3) block -> . procedure block
    (4) block -> . global block
    (5) block -> . empty
    (54) procedure -> . PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON
    (14) global -> . assignment
    (166) empty -> .
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    PROCEDURE       shift and go to state 44
    $end            reduce using rule 166 (empty -> .)
    ID              shift and go to state 47

    block                          shift and go to state 135
    procedure                      shift and go to state 41
    global                         shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 45
    identifier                     shift and go to state 46
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 96

    (72) main_body -> BEGIN main_block END . SEMICOLON

    SEMICOLON       shift and go to state 136


state 97

    (73) main_block -> main_content main_block .

    END             reduce using rule 73 (main_block -> main_content main_block .)


state 98

    (11) instruction -> consult SEMICOLON .

    COMPILE         reduce using rule 11 (instruction -> consult SEMICOLON .)
    IF              reduce using rule 11 (instruction -> consult SEMICOLON .)
    TYPE            reduce using rule 11 (instruction -> consult SEMICOLON .)
    LEN             reduce using rule 11 (instruction -> consult SEMICOLON .)
    BLINK           reduce using rule 11 (instruction -> consult SEMICOLON .)
    DELAY           reduce using rule 11 (instruction -> consult SEMICOLON .)
    CALL            reduce using rule 11 (instruction -> consult SEMICOLON .)
    ID              reduce using rule 11 (instruction -> consult SEMICOLON .)
    FOR             reduce using rule 11 (instruction -> consult SEMICOLON .)
    END             reduce using rule 11 (instruction -> consult SEMICOLON .)
    RCORCH          reduce using rule 11 (instruction -> consult SEMICOLON .)


state 99

    (76) compile -> COMPILE LPARENT . compile_cube RPARENT SEMICOLON
    (77) compile_cube -> . ID
    (78) compile_cube -> . 3dmat
    (115) 3dmat -> . PARENTCL 3dmat_term PARENTCR

    ID              shift and go to state 138
    PARENTCL        shift and go to state 140

    compile_cube                   shift and go to state 137
    3dmat                          shift and go to state 139

state 100

    (51) statement -> IF LPARENT . iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 143
    ID              shift and go to state 47
    PARENTCL        shift and go to state 145

    iterable                       shift and go to state 141
    identifier                     shift and go to state 142
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 101

    (32) type -> TYPE LPARENT . identifier RPARENT SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    identifier                     shift and go to state 146
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 102

    (34) insert -> identifier DOT . INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> identifier DOT . DEL LPARENT iterable RPARENT SEMICOLON
    (37) neg -> identifier DOT . NEG SEMICOLON
    (38) t_f -> identifier DOT . tf SEMICOLON
    (44) shape -> identifier DOT . shape_arg SEMICOLON
    (45) delete -> identifier DOT . DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (102) tf -> . T
    (103) tf -> . F
    (41) shape_arg -> . SHAPEF
    (42) shape_arg -> . SHAPEC
    (43) shape_arg -> . SHAPEA

    INSERT          shift and go to state 147
    DEL             shift and go to state 148
    NEG             shift and go to state 149
    DELETE          shift and go to state 152
    T               shift and go to state 153
    F               shift and go to state 154
    SHAPEF          shift and go to state 155
    SHAPEC          shift and go to state 156
    SHAPEA          shift and go to state 157

    tf                             shift and go to state 150
    shape_arg                      shift and go to state 151

state 103

    (36) len -> LEN LPARENT . identifier RPARENT SEMICOLON
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    identifier                     shift and go to state 158
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 104

    (39) blink -> BLINK LPARENT . b_content RPARENT SEMICOLON
    (98) b_content -> . identifier COMMA INT COMMA time_mes COMMA value
    (99) b_content -> . identifier COMMA value
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    ID              shift and go to state 47

    b_content                      shift and go to state 159
    identifier                     shift and go to state 160
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 105

    (40) delay -> DELAY LPARENT . d_content RPARENT SEMICOLON
    (100) d_content -> . empty
    (101) d_content -> . iterable COMMA time_mes
    (166) empty -> .
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    RPARENT         reduce using rule 166 (empty -> .)
    INT             shift and go to state 143
    ID              shift and go to state 47
    PARENTCL        shift and go to state 145

    d_content                      shift and go to state 161
    empty                          shift and go to state 162
    iterable                       shift and go to state 163
    identifier                     shift and go to state 142
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 106

    (46) call -> CALL proc_call . SEMICOLON

    SEMICOLON       shift and go to state 164


state 107

    (56) proc_call -> proc_name . LPARENT param RPARENT

    LPARENT         shift and go to state 165


state 108

    (48) for -> FOR ID . IN iterable step LCORCH alt_block RCORCH SEMICOLON

    IN              shift and go to state 166


state 109

    (54) procedure -> PROCEDURE proc_dec LCORCH . body RCORCH SEMICOLON
    (70) body -> . global_call BEGIN alt_block END SEMICOLON
    (15) global_call -> . GLOBAL global_term SEMICOLON global_call
    (16) global_call -> . empty
    (166) empty -> .

    GLOBAL          shift and go to state 169
    BEGIN           reduce using rule 166 (empty -> .)

    body                           shift and go to state 167
    global_call                    shift and go to state 168
    empty                          shift and go to state 170

state 110

    (55) proc_dec -> proc_name LPARENT . parameter RPARENT
    (58) parameter -> . proc_param
    (59) parameter -> . proc_param COMMA parameter
    (60) parameter -> . empty
    (61) proc_param -> . ID
    (166) empty -> .

    ID              shift and go to state 174
    RPARENT         reduce using rule 166 (empty -> .)

    parameter                      shift and go to state 171
    proc_param                     shift and go to state 172
    empty                          shift and go to state 173

state 111

    (19) assignment -> identifier ASSIGN a_content . SEMICOLON

    SEMICOLON       shift and go to state 175


state 112

    (33) a_content -> RANGE . LPARENT iterable COMMA value RPARENT

    LPARENT         shift and go to state 176


state 113

    (87) factor -> LPARENT . arithmetic RPARENT
    (80) arithmetic -> . term
    (81) arithmetic -> . adding_operator term
    (82) arithmetic -> . arithmetic adding_operator term
    (83) term -> . factor
    (84) term -> . term multiplying_operator factor
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    INT             shift and go to state 129
    ID              shift and go to state 178
    LPARENT         shift and go to state 113

    arithmetic                     shift and go to state 177
    term                           shift and go to state 122
    adding_operator                shift and go to state 123
    factor                         shift and go to state 125

state 114

    (92) a_content -> value .

    SEMICOLON       reduce using rule 92 (a_content -> value .)
    COMMA           reduce using rule 92 (a_content -> value .)


state 115

    (93) a_content -> arithmetic .
    (82) arithmetic -> arithmetic . adding_operator term
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS

    SEMICOLON       reduce using rule 93 (a_content -> arithmetic .)
    COMMA           reduce using rule 93 (a_content -> arithmetic .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127

    adding_operator                shift and go to state 179

state 116

    (94) a_content -> list .

    SEMICOLON       reduce using rule 94 (a_content -> list .)
    COMMA           reduce using rule 94 (a_content -> list .)


state 117

    (95) a_content -> mat .

    SEMICOLON       reduce using rule 95 (a_content -> mat .)
    COMMA           reduce using rule 95 (a_content -> mat .)


state 118

    (96) a_content -> 3dmat .

    SEMICOLON       reduce using rule 96 (a_content -> 3dmat .)
    COMMA           reduce using rule 96 (a_content -> 3dmat .)


state 119

    (97) a_content -> consult .

    SEMICOLON       reduce using rule 97 (a_content -> consult .)
    COMMA           reduce using rule 97 (a_content -> consult .)


state 120

    (149) value -> FALSE .

    SEMICOLON       reduce using rule 149 (value -> FALSE .)
    COMMA           reduce using rule 149 (value -> FALSE .)
    PARENTCR        reduce using rule 149 (value -> FALSE .)
    RPARENT         reduce using rule 149 (value -> FALSE .)


state 121

    (150) value -> TRUE .

    SEMICOLON       reduce using rule 150 (value -> TRUE .)
    COMMA           reduce using rule 150 (value -> TRUE .)
    PARENTCR        reduce using rule 150 (value -> TRUE .)
    RPARENT         reduce using rule 150 (value -> TRUE .)


state 122

    (80) arithmetic -> term .
    (84) term -> term . multiplying_operator factor
    (144) multiplying_operator -> . TIMES
    (145) multiplying_operator -> . EXP
    (146) multiplying_operator -> . DIVIDE
    (147) multiplying_operator -> . DIVENT
    (148) multiplying_operator -> . MOD

    PLUS            reduce using rule 80 (arithmetic -> term .)
    MINUS           reduce using rule 80 (arithmetic -> term .)
    SEMICOLON       reduce using rule 80 (arithmetic -> term .)
    RPARENT         reduce using rule 80 (arithmetic -> term .)
    COMMA           reduce using rule 80 (arithmetic -> term .)
    TIMES           shift and go to state 181
    EXP             shift and go to state 182
    DIVIDE          shift and go to state 183
    DIVENT          shift and go to state 184
    MOD             shift and go to state 185

    multiplying_operator           shift and go to state 180

state 123

    (81) arithmetic -> adding_operator . term
    (83) term -> . factor
    (84) term -> . term multiplying_operator factor
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 129
    ID              shift and go to state 178
    LPARENT         shift and go to state 113

    term                           shift and go to state 186
    factor                         shift and go to state 125

state 124

    (106) list -> PARENTCL . list_term PARENTCR
    (107) list -> PARENTCL . empty PARENTCR
    (111) mat -> PARENTCL . mat_term PARENTCR
    (115) 3dmat -> PARENTCL . 3dmat_term PARENTCR
    (108) list_term -> . list_value COMMA list_term
    (109) list_term -> . list_value
    (166) empty -> .
    (112) mat_term -> . mat_value COMMA mat_term
    (113) mat_term -> . mat_value
    (116) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (117) 3dmat_term -> . 3dmat_value
    (110) list_value -> . value
    (114) mat_value -> . list
    (118) 3dmat_value -> . mat
    (149) value -> . FALSE
    (150) value -> . TRUE
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (111) mat -> . PARENTCL mat_term PARENTCR

    PARENTCR        reduce using rule 166 (empty -> .)
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    PARENTCL        shift and go to state 187

    list_term                      shift and go to state 188
    empty                          shift and go to state 189
    mat_term                       shift and go to state 190
    3dmat_term                     shift and go to state 191
    list_value                     shift and go to state 192
    mat_value                      shift and go to state 193
    3dmat_value                    shift and go to state 194
    value                          shift and go to state 195
    list                           shift and go to state 196
    mat                            shift and go to state 197

state 125

    (83) term -> factor .

    TIMES           reduce using rule 83 (term -> factor .)
    EXP             reduce using rule 83 (term -> factor .)
    DIVIDE          reduce using rule 83 (term -> factor .)
    DIVENT          reduce using rule 83 (term -> factor .)
    MOD             reduce using rule 83 (term -> factor .)
    PLUS            reduce using rule 83 (term -> factor .)
    MINUS           reduce using rule 83 (term -> factor .)
    SEMICOLON       reduce using rule 83 (term -> factor .)
    RPARENT         reduce using rule 83 (term -> factor .)
    COMMA           reduce using rule 83 (term -> factor .)


state 126

    (142) adding_operator -> PLUS .

    INT             reduce using rule 142 (adding_operator -> PLUS .)
    ID              reduce using rule 142 (adding_operator -> PLUS .)
    LPARENT         reduce using rule 142 (adding_operator -> PLUS .)


state 127

    (143) adding_operator -> MINUS .

    INT             reduce using rule 143 (adding_operator -> MINUS .)
    ID              reduce using rule 143 (adding_operator -> MINUS .)
    LPARENT         reduce using rule 143 (adding_operator -> MINUS .)


state 128

    (122) list_consult -> ID . list_consultT
    (125) mat_consult -> ID . mat_consultT
    (130) 3dmat_consult -> ID . 3dmat_consultT
    (86) factor -> ID .
    (123) list_consultT -> . PARENTCL indice PARENTCR
    (124) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (126) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (127) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (128) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR list_consultT
    (129) mat_consultT -> . PARENTCL indice PARENTCR list_consultT
    (131) 3dmat_consultT -> . PARENTCL indice COMMA indice COMMA indice PARENTCR
    (132) 3dmat_consultT -> . PARENTCL indice PARENTCR mat_consultT

    TIMES           reduce using rule 86 (factor -> ID .)
    EXP             reduce using rule 86 (factor -> ID .)
    DIVIDE          reduce using rule 86 (factor -> ID .)
    DIVENT          reduce using rule 86 (factor -> ID .)
    MOD             reduce using rule 86 (factor -> ID .)
    PLUS            reduce using rule 86 (factor -> ID .)
    MINUS           reduce using rule 86 (factor -> ID .)
    SEMICOLON       reduce using rule 86 (factor -> ID .)
    COMMA           reduce using rule 86 (factor -> ID .)
    PARENTCL        shift and go to state 94

    list_consultT                  shift and go to state 91
    mat_consultT                   shift and go to state 92
    3dmat_consultT                 shift and go to state 93

state 129

    (85) factor -> INT .

    TIMES           reduce using rule 85 (factor -> INT .)
    EXP             reduce using rule 85 (factor -> INT .)
    DIVIDE          reduce using rule 85 (factor -> INT .)
    DIVENT          reduce using rule 85 (factor -> INT .)
    MOD             reduce using rule 85 (factor -> INT .)
    PLUS            reduce using rule 85 (factor -> INT .)
    MINUS           reduce using rule 85 (factor -> INT .)
    SEMICOLON       reduce using rule 85 (factor -> INT .)
    RPARENT         reduce using rule 85 (factor -> INT .)
    COMMA           reduce using rule 85 (factor -> INT .)


state 130

    (20) assignment -> identifier COMMA identifier . ASSIGN a_content COMMA a_content SEMICOLON

    ASSIGN          shift and go to state 198


state 131

    (123) list_consultT -> PARENTCL indice . PARENTCR
    (124) list_consultT -> PARENTCL indice . TP indice PARENTCR
    (126) mat_consultT -> PARENTCL indice . COMMA indice PARENTCR
    (129) mat_consultT -> PARENTCL indice . PARENTCR list_consultT
    (131) 3dmat_consultT -> PARENTCL indice . COMMA indice COMMA indice PARENTCR
    (132) 3dmat_consultT -> PARENTCL indice . PARENTCR mat_consultT

    PARENTCR        shift and go to state 199
    TP              shift and go to state 200
    COMMA           shift and go to state 201


state 132

    (127) mat_consultT -> PARENTCL TP . COMMA indice PARENTCR
    (128) mat_consultT -> PARENTCL TP . COMMA indice PARENTCR list_consultT

    COMMA           shift and go to state 202


state 133

    (133) indice -> INT .

    PARENTCR        reduce using rule 133 (indice -> INT .)
    TP              reduce using rule 133 (indice -> INT .)
    COMMA           reduce using rule 133 (indice -> INT .)


state 134

    (134) indice -> ID .

    PARENTCR        reduce using rule 134 (indice -> ID .)
    TP              reduce using rule 134 (indice -> ID .)
    COMMA           reduce using rule 134 (indice -> ID .)


state 135

    (71) main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block .

    $end            reduce using rule 71 (main_proc -> MAIN LPARENT RPARENT LCORCH main_body RCORCH SEMICOLON block .)


state 136

    (72) main_body -> BEGIN main_block END SEMICOLON .

    RCORCH          reduce using rule 72 (main_body -> BEGIN main_block END SEMICOLON .)


state 137

    (76) compile -> COMPILE LPARENT compile_cube . RPARENT SEMICOLON

    RPARENT         shift and go to state 203


state 138

    (77) compile_cube -> ID .

    RPARENT         reduce using rule 77 (compile_cube -> ID .)


state 139

    (78) compile_cube -> 3dmat .

    RPARENT         reduce using rule 78 (compile_cube -> 3dmat .)


state 140

    (115) 3dmat -> PARENTCL . 3dmat_term PARENTCR
    (116) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (117) 3dmat_term -> . 3dmat_value
    (118) 3dmat_value -> . mat
    (111) mat -> . PARENTCL mat_term PARENTCR

    PARENTCL        shift and go to state 204

    3dmat_term                     shift and go to state 191
    3dmat_value                    shift and go to state 194
    mat                            shift and go to state 197

state 141

    (51) statement -> IF LPARENT iterable . relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (153) relation -> . NE
    (154) relation -> . LT
    (155) relation -> . GT
    (156) relation -> . LTE
    (157) relation -> . GTE
    (158) relation -> . COMPARE

    NE              shift and go to state 206
    LT              shift and go to state 207
    GT              shift and go to state 208
    LTE             shift and go to state 209
    GTE             shift and go to state 210
    COMPARE         shift and go to state 211

    relation                       shift and go to state 205

state 142

    (161) iterable -> identifier .

    NE              reduce using rule 161 (iterable -> identifier .)
    LT              reduce using rule 161 (iterable -> identifier .)
    GT              reduce using rule 161 (iterable -> identifier .)
    LTE             reduce using rule 161 (iterable -> identifier .)
    GTE             reduce using rule 161 (iterable -> identifier .)
    COMPARE         reduce using rule 161 (iterable -> identifier .)
    COMMA           reduce using rule 161 (iterable -> identifier .)
    RPARENT         reduce using rule 161 (iterable -> identifier .)
    STEP            reduce using rule 161 (iterable -> identifier .)
    LCORCH          reduce using rule 161 (iterable -> identifier .)


state 143

    (162) iterable -> INT .

    NE              reduce using rule 162 (iterable -> INT .)
    LT              reduce using rule 162 (iterable -> INT .)
    GT              reduce using rule 162 (iterable -> INT .)
    LTE             reduce using rule 162 (iterable -> INT .)
    GTE             reduce using rule 162 (iterable -> INT .)
    COMPARE         reduce using rule 162 (iterable -> INT .)
    COMMA           reduce using rule 162 (iterable -> INT .)
    RPARENT         reduce using rule 162 (iterable -> INT .)
    STEP            reduce using rule 162 (iterable -> INT .)
    LCORCH          reduce using rule 162 (iterable -> INT .)


state 144

    (163) iterable -> list .

    NE              reduce using rule 163 (iterable -> list .)
    LT              reduce using rule 163 (iterable -> list .)
    GT              reduce using rule 163 (iterable -> list .)
    LTE             reduce using rule 163 (iterable -> list .)
    GTE             reduce using rule 163 (iterable -> list .)
    COMPARE         reduce using rule 163 (iterable -> list .)
    COMMA           reduce using rule 163 (iterable -> list .)
    RPARENT         reduce using rule 163 (iterable -> list .)
    STEP            reduce using rule 163 (iterable -> list .)
    LCORCH          reduce using rule 163 (iterable -> list .)


state 145

    (106) list -> PARENTCL . list_term PARENTCR
    (107) list -> PARENTCL . empty PARENTCR
    (108) list_term -> . list_value COMMA list_term
    (109) list_term -> . list_value
    (166) empty -> .
    (110) list_value -> . value
    (149) value -> . FALSE
    (150) value -> . TRUE

    PARENTCR        reduce using rule 166 (empty -> .)
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121

    list_term                      shift and go to state 188
    empty                          shift and go to state 189
    list_value                     shift and go to state 192
    value                          shift and go to state 195

state 146

    (32) type -> TYPE LPARENT identifier . RPARENT SEMICOLON

    RPARENT         shift and go to state 212


state 147

    (34) insert -> identifier DOT INSERT . LPARENT i_content RPARENT SEMICOLON

    LPARENT         shift and go to state 213


state 148

    (35) del -> identifier DOT DEL . LPARENT iterable RPARENT SEMICOLON

    LPARENT         shift and go to state 214


state 149

    (37) neg -> identifier DOT NEG . SEMICOLON

    SEMICOLON       shift and go to state 215


state 150

    (38) t_f -> identifier DOT tf . SEMICOLON

    SEMICOLON       shift and go to state 216


state 151

    (44) shape -> identifier DOT shape_arg . SEMICOLON

    SEMICOLON       shift and go to state 217


state 152

    (45) delete -> identifier DOT DELETE . LPARENT indice COMMA INT RPARENT SEMICOLON

    LPARENT         shift and go to state 218


state 153

    (102) tf -> T .

    SEMICOLON       reduce using rule 102 (tf -> T .)


state 154

    (103) tf -> F .

    SEMICOLON       reduce using rule 103 (tf -> F .)


state 155

    (41) shape_arg -> SHAPEF .

    SEMICOLON       reduce using rule 41 (shape_arg -> SHAPEF .)


state 156

    (42) shape_arg -> SHAPEC .

    SEMICOLON       reduce using rule 42 (shape_arg -> SHAPEC .)


state 157

    (43) shape_arg -> SHAPEA .

    SEMICOLON       reduce using rule 43 (shape_arg -> SHAPEA .)


state 158

    (36) len -> LEN LPARENT identifier . RPARENT SEMICOLON

    RPARENT         shift and go to state 219


state 159

    (39) blink -> BLINK LPARENT b_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 220


state 160

    (98) b_content -> identifier . COMMA INT COMMA time_mes COMMA value
    (99) b_content -> identifier . COMMA value

    COMMA           shift and go to state 221


state 161

    (40) delay -> DELAY LPARENT d_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 222


state 162

    (100) d_content -> empty .

    RPARENT         reduce using rule 100 (d_content -> empty .)


state 163

    (101) d_content -> iterable . COMMA time_mes

    COMMA           shift and go to state 223


state 164

    (46) call -> CALL proc_call SEMICOLON .

    COMPILE         reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    IF              reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    TYPE            reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    LEN             reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    BLINK           reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    DELAY           reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    CALL            reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    ID              reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    FOR             reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    END             reduce using rule 46 (call -> CALL proc_call SEMICOLON .)
    RCORCH          reduce using rule 46 (call -> CALL proc_call SEMICOLON .)


state 165

    (56) proc_call -> proc_name LPARENT . param RPARENT
    (62) param -> . call_param
    (63) param -> . call_param COMMA param
    (64) param -> . empty
    (65) call_param -> . ass_param
    (166) empty -> .
    (66) ass_param -> . iterable
    (67) ass_param -> . mat
    (68) ass_param -> . 3dmat
    (69) ass_param -> . value
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (111) mat -> . PARENTCL mat_term PARENTCR
    (115) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (149) value -> . FALSE
    (150) value -> . TRUE
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    RPARENT         reduce using rule 166 (empty -> .)
    INT             shift and go to state 143
    PARENTCL        shift and go to state 232
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    ID              shift and go to state 47

    param                          shift and go to state 224
    call_param                     shift and go to state 225
    empty                          shift and go to state 226
    ass_param                      shift and go to state 227
    iterable                       shift and go to state 228
    mat                            shift and go to state 229
    3dmat                          shift and go to state 230
    value                          shift and go to state 231
    identifier                     shift and go to state 142
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 166

    (48) for -> FOR ID IN . iterable step LCORCH alt_block RCORCH SEMICOLON
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 143
    ID              shift and go to state 47
    PARENTCL        shift and go to state 145

    iterable                       shift and go to state 233
    identifier                     shift and go to state 142
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 167

    (54) procedure -> PROCEDURE proc_dec LCORCH body . RCORCH SEMICOLON

    RCORCH          shift and go to state 234


state 168

    (70) body -> global_call . BEGIN alt_block END SEMICOLON

    BEGIN           shift and go to state 235


state 169

    (15) global_call -> GLOBAL . global_term SEMICOLON global_call
    (17) global_term -> . ID COMMA global_term
    (18) global_term -> . ID

    ID              shift and go to state 237

    global_term                    shift and go to state 236

state 170

    (16) global_call -> empty .

    BEGIN           reduce using rule 16 (global_call -> empty .)


state 171

    (55) proc_dec -> proc_name LPARENT parameter . RPARENT

    RPARENT         shift and go to state 238


state 172

    (58) parameter -> proc_param .
    (59) parameter -> proc_param . COMMA parameter

    RPARENT         reduce using rule 58 (parameter -> proc_param .)
    COMMA           shift and go to state 239


state 173

    (60) parameter -> empty .

    RPARENT         reduce using rule 60 (parameter -> empty .)


state 174

    (61) proc_param -> ID .

    COMMA           reduce using rule 61 (proc_param -> ID .)
    RPARENT         reduce using rule 61 (proc_param -> ID .)


state 175

    (19) assignment -> identifier ASSIGN a_content SEMICOLON .

    PROCEDURE       reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    ID              reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    MAIN            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    $end            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    IF              reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    TYPE            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    LEN             reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    BLINK           reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    DELAY           reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    CALL            reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    FOR             reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    END             reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)
    RCORCH          reduce using rule 19 (assignment -> identifier ASSIGN a_content SEMICOLON .)


state 176

    (33) a_content -> RANGE LPARENT . iterable COMMA value RPARENT
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 143
    ID              shift and go to state 47
    PARENTCL        shift and go to state 145

    iterable                       shift and go to state 240
    identifier                     shift and go to state 142
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 177

    (87) factor -> LPARENT arithmetic . RPARENT
    (82) arithmetic -> arithmetic . adding_operator term
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS

    RPARENT         shift and go to state 241
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127

    adding_operator                shift and go to state 179

state 178

    (86) factor -> ID .

    TIMES           reduce using rule 86 (factor -> ID .)
    EXP             reduce using rule 86 (factor -> ID .)
    DIVIDE          reduce using rule 86 (factor -> ID .)
    DIVENT          reduce using rule 86 (factor -> ID .)
    MOD             reduce using rule 86 (factor -> ID .)
    RPARENT         reduce using rule 86 (factor -> ID .)
    PLUS            reduce using rule 86 (factor -> ID .)
    MINUS           reduce using rule 86 (factor -> ID .)
    SEMICOLON       reduce using rule 86 (factor -> ID .)
    COMMA           reduce using rule 86 (factor -> ID .)


state 179

    (82) arithmetic -> arithmetic adding_operator . term
    (83) term -> . factor
    (84) term -> . term multiplying_operator factor
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 129
    ID              shift and go to state 178
    LPARENT         shift and go to state 113

    term                           shift and go to state 242
    factor                         shift and go to state 125

state 180

    (84) term -> term multiplying_operator . factor
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    INT             shift and go to state 129
    ID              shift and go to state 178
    LPARENT         shift and go to state 113

    factor                         shift and go to state 243

state 181

    (144) multiplying_operator -> TIMES .

    INT             reduce using rule 144 (multiplying_operator -> TIMES .)
    ID              reduce using rule 144 (multiplying_operator -> TIMES .)
    LPARENT         reduce using rule 144 (multiplying_operator -> TIMES .)


state 182

    (145) multiplying_operator -> EXP .

    INT             reduce using rule 145 (multiplying_operator -> EXP .)
    ID              reduce using rule 145 (multiplying_operator -> EXP .)
    LPARENT         reduce using rule 145 (multiplying_operator -> EXP .)


state 183

    (146) multiplying_operator -> DIVIDE .

    INT             reduce using rule 146 (multiplying_operator -> DIVIDE .)
    ID              reduce using rule 146 (multiplying_operator -> DIVIDE .)
    LPARENT         reduce using rule 146 (multiplying_operator -> DIVIDE .)


state 184

    (147) multiplying_operator -> DIVENT .

    INT             reduce using rule 147 (multiplying_operator -> DIVENT .)
    ID              reduce using rule 147 (multiplying_operator -> DIVENT .)
    LPARENT         reduce using rule 147 (multiplying_operator -> DIVENT .)


state 185

    (148) multiplying_operator -> MOD .

    INT             reduce using rule 148 (multiplying_operator -> MOD .)
    ID              reduce using rule 148 (multiplying_operator -> MOD .)
    LPARENT         reduce using rule 148 (multiplying_operator -> MOD .)


state 186

    (81) arithmetic -> adding_operator term .
    (84) term -> term . multiplying_operator factor
    (144) multiplying_operator -> . TIMES
    (145) multiplying_operator -> . EXP
    (146) multiplying_operator -> . DIVIDE
    (147) multiplying_operator -> . DIVENT
    (148) multiplying_operator -> . MOD

    PLUS            reduce using rule 81 (arithmetic -> adding_operator term .)
    MINUS           reduce using rule 81 (arithmetic -> adding_operator term .)
    SEMICOLON       reduce using rule 81 (arithmetic -> adding_operator term .)
    RPARENT         reduce using rule 81 (arithmetic -> adding_operator term .)
    COMMA           reduce using rule 81 (arithmetic -> adding_operator term .)
    TIMES           shift and go to state 181
    EXP             shift and go to state 182
    DIVIDE          shift and go to state 183
    DIVENT          shift and go to state 184
    MOD             shift and go to state 185

    multiplying_operator           shift and go to state 180

state 187

    (106) list -> PARENTCL . list_term PARENTCR
    (107) list -> PARENTCL . empty PARENTCR
    (111) mat -> PARENTCL . mat_term PARENTCR
    (108) list_term -> . list_value COMMA list_term
    (109) list_term -> . list_value
    (166) empty -> .
    (112) mat_term -> . mat_value COMMA mat_term
    (113) mat_term -> . mat_value
    (110) list_value -> . value
    (114) mat_value -> . list
    (149) value -> . FALSE
    (150) value -> . TRUE
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR

    PARENTCR        reduce using rule 166 (empty -> .)
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    PARENTCL        shift and go to state 145

    list_term                      shift and go to state 188
    empty                          shift and go to state 189
    mat_term                       shift and go to state 190
    list_value                     shift and go to state 192
    mat_value                      shift and go to state 193
    value                          shift and go to state 195
    list                           shift and go to state 196

state 188

    (106) list -> PARENTCL list_term . PARENTCR

    PARENTCR        shift and go to state 244


state 189

    (107) list -> PARENTCL empty . PARENTCR

    PARENTCR        shift and go to state 245


state 190

    (111) mat -> PARENTCL mat_term . PARENTCR

    PARENTCR        shift and go to state 246


state 191

    (115) 3dmat -> PARENTCL 3dmat_term . PARENTCR

    PARENTCR        shift and go to state 247


state 192

    (108) list_term -> list_value . COMMA list_term
    (109) list_term -> list_value .

    COMMA           shift and go to state 248
    PARENTCR        reduce using rule 109 (list_term -> list_value .)


state 193

    (112) mat_term -> mat_value . COMMA mat_term
    (113) mat_term -> mat_value .

    COMMA           shift and go to state 249
    PARENTCR        reduce using rule 113 (mat_term -> mat_value .)


state 194

    (116) 3dmat_term -> 3dmat_value . COMMA 3dmat_term
    (117) 3dmat_term -> 3dmat_value .

    COMMA           shift and go to state 250
    PARENTCR        reduce using rule 117 (3dmat_term -> 3dmat_value .)


state 195

    (110) list_value -> value .

    COMMA           reduce using rule 110 (list_value -> value .)
    PARENTCR        reduce using rule 110 (list_value -> value .)


state 196

    (114) mat_value -> list .

    COMMA           reduce using rule 114 (mat_value -> list .)
    PARENTCR        reduce using rule 114 (mat_value -> list .)


state 197

    (118) 3dmat_value -> mat .

    COMMA           reduce using rule 118 (3dmat_value -> mat .)
    PARENTCR        reduce using rule 118 (3dmat_value -> mat .)


state 198

    (20) assignment -> identifier COMMA identifier ASSIGN . a_content COMMA a_content SEMICOLON
    (33) a_content -> . RANGE LPARENT iterable COMMA value RPARENT
    (92) a_content -> . value
    (93) a_content -> . arithmetic
    (94) a_content -> . list
    (95) a_content -> . mat
    (96) a_content -> . 3dmat
    (97) a_content -> . consult
    (149) value -> . FALSE
    (150) value -> . TRUE
    (80) arithmetic -> . term
    (81) arithmetic -> . adding_operator term
    (82) arithmetic -> . arithmetic adding_operator term
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (111) mat -> . PARENTCL mat_term PARENTCR
    (115) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (83) term -> . factor
    (84) term -> . term multiplying_operator factor
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 112
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    PARENTCL        shift and go to state 124
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    ID              shift and go to state 128
    INT             shift and go to state 129
    LPARENT         shift and go to state 113

    a_content                      shift and go to state 251
    value                          shift and go to state 114
    arithmetic                     shift and go to state 115
    list                           shift and go to state 116
    mat                            shift and go to state 117
    3dmat                          shift and go to state 118
    consult                        shift and go to state 119
    term                           shift and go to state 122
    adding_operator                shift and go to state 123
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    factor                         shift and go to state 125

state 199

    (123) list_consultT -> PARENTCL indice PARENTCR .
    (129) mat_consultT -> PARENTCL indice PARENTCR . list_consultT
    (132) 3dmat_consultT -> PARENTCL indice PARENTCR . mat_consultT
    (123) list_consultT -> . PARENTCL indice PARENTCR
    (124) list_consultT -> . PARENTCL indice TP indice PARENTCR
    (126) mat_consultT -> . PARENTCL indice COMMA indice PARENTCR
    (127) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR
    (128) mat_consultT -> . PARENTCL TP COMMA indice PARENTCR list_consultT
    (129) mat_consultT -> . PARENTCL indice PARENTCR list_consultT

    ASSIGN          reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    NE              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LT              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    GT              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LTE             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    GTE             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    RPARENT         reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    STEP            reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    SEMICOLON       reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    DOT             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    PARENTCL        shift and go to state 252

    list_consultT                  shift and go to state 253
    mat_consultT                   shift and go to state 254

state 200

    (124) list_consultT -> PARENTCL indice TP . indice PARENTCR
    (133) indice -> . INT
    (134) indice -> . ID

    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 255

state 201

    (126) mat_consultT -> PARENTCL indice COMMA . indice PARENTCR
    (131) 3dmat_consultT -> PARENTCL indice COMMA . indice COMMA indice PARENTCR
    (133) indice -> . INT
    (134) indice -> . ID

    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 256

state 202

    (127) mat_consultT -> PARENTCL TP COMMA . indice PARENTCR
    (128) mat_consultT -> PARENTCL TP COMMA . indice PARENTCR list_consultT
    (133) indice -> . INT
    (134) indice -> . ID

    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 257

state 203

    (76) compile -> COMPILE LPARENT compile_cube RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 258


state 204

    (111) mat -> PARENTCL . mat_term PARENTCR
    (112) mat_term -> . mat_value COMMA mat_term
    (113) mat_term -> . mat_value
    (114) mat_value -> . list
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR

    PARENTCL        shift and go to state 145

    mat_term                       shift and go to state 190
    mat_value                      shift and go to state 193
    list                           shift and go to state 196

state 205

    (51) statement -> IF LPARENT iterable relation . bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (151) bif_value -> . value
    (152) bif_value -> . arithmetic
    (149) value -> . FALSE
    (150) value -> . TRUE
    (80) arithmetic -> . term
    (81) arithmetic -> . adding_operator term
    (82) arithmetic -> . arithmetic adding_operator term
    (83) term -> . factor
    (84) term -> . term multiplying_operator factor
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    INT             shift and go to state 129
    ID              shift and go to state 178
    LPARENT         shift and go to state 113

    bif_value                      shift and go to state 259
    value                          shift and go to state 260
    arithmetic                     shift and go to state 261
    term                           shift and go to state 122
    adding_operator                shift and go to state 123
    factor                         shift and go to state 125

state 206

    (153) relation -> NE .

    FALSE           reduce using rule 153 (relation -> NE .)
    TRUE            reduce using rule 153 (relation -> NE .)
    PLUS            reduce using rule 153 (relation -> NE .)
    MINUS           reduce using rule 153 (relation -> NE .)
    INT             reduce using rule 153 (relation -> NE .)
    ID              reduce using rule 153 (relation -> NE .)
    LPARENT         reduce using rule 153 (relation -> NE .)


state 207

    (154) relation -> LT .

    FALSE           reduce using rule 154 (relation -> LT .)
    TRUE            reduce using rule 154 (relation -> LT .)
    PLUS            reduce using rule 154 (relation -> LT .)
    MINUS           reduce using rule 154 (relation -> LT .)
    INT             reduce using rule 154 (relation -> LT .)
    ID              reduce using rule 154 (relation -> LT .)
    LPARENT         reduce using rule 154 (relation -> LT .)


state 208

    (155) relation -> GT .

    FALSE           reduce using rule 155 (relation -> GT .)
    TRUE            reduce using rule 155 (relation -> GT .)
    PLUS            reduce using rule 155 (relation -> GT .)
    MINUS           reduce using rule 155 (relation -> GT .)
    INT             reduce using rule 155 (relation -> GT .)
    ID              reduce using rule 155 (relation -> GT .)
    LPARENT         reduce using rule 155 (relation -> GT .)


state 209

    (156) relation -> LTE .

    FALSE           reduce using rule 156 (relation -> LTE .)
    TRUE            reduce using rule 156 (relation -> LTE .)
    PLUS            reduce using rule 156 (relation -> LTE .)
    MINUS           reduce using rule 156 (relation -> LTE .)
    INT             reduce using rule 156 (relation -> LTE .)
    ID              reduce using rule 156 (relation -> LTE .)
    LPARENT         reduce using rule 156 (relation -> LTE .)


state 210

    (157) relation -> GTE .

    FALSE           reduce using rule 157 (relation -> GTE .)
    TRUE            reduce using rule 157 (relation -> GTE .)
    PLUS            reduce using rule 157 (relation -> GTE .)
    MINUS           reduce using rule 157 (relation -> GTE .)
    INT             reduce using rule 157 (relation -> GTE .)
    ID              reduce using rule 157 (relation -> GTE .)
    LPARENT         reduce using rule 157 (relation -> GTE .)


state 211

    (158) relation -> COMPARE .

    FALSE           reduce using rule 158 (relation -> COMPARE .)
    TRUE            reduce using rule 158 (relation -> COMPARE .)
    PLUS            reduce using rule 158 (relation -> COMPARE .)
    MINUS           reduce using rule 158 (relation -> COMPARE .)
    INT             reduce using rule 158 (relation -> COMPARE .)
    ID              reduce using rule 158 (relation -> COMPARE .)
    LPARENT         reduce using rule 158 (relation -> COMPARE .)


state 212

    (32) type -> TYPE LPARENT identifier RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 262


state 213

    (34) insert -> identifier DOT INSERT LPARENT . i_content RPARENT SEMICOLON
    (104) i_content -> . iterable COMMA insertable
    (105) i_content -> . iterable COMMA INT i_ind
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 143
    ID              shift and go to state 47
    PARENTCL        shift and go to state 145

    identifier                     shift and go to state 142
    i_content                      shift and go to state 263
    iterable                       shift and go to state 264
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 214

    (35) del -> identifier DOT DEL LPARENT . iterable RPARENT SEMICOLON
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 143
    ID              shift and go to state 47
    PARENTCL        shift and go to state 145

    identifier                     shift and go to state 142
    iterable                       shift and go to state 265
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 215

    (37) neg -> identifier DOT NEG SEMICOLON .

    COMPILE         reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    IF              reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    TYPE            reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    LEN             reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    BLINK           reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    DELAY           reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    CALL            reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    ID              reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    FOR             reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    END             reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)
    RCORCH          reduce using rule 37 (neg -> identifier DOT NEG SEMICOLON .)


state 216

    (38) t_f -> identifier DOT tf SEMICOLON .

    COMPILE         reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    IF              reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    TYPE            reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    LEN             reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    BLINK           reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    DELAY           reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    CALL            reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    ID              reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    FOR             reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    END             reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)
    RCORCH          reduce using rule 38 (t_f -> identifier DOT tf SEMICOLON .)


state 217

    (44) shape -> identifier DOT shape_arg SEMICOLON .

    COMPILE         reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    IF              reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    TYPE            reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    LEN             reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    BLINK           reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    DELAY           reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    CALL            reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    ID              reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    FOR             reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    END             reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)
    RCORCH          reduce using rule 44 (shape -> identifier DOT shape_arg SEMICOLON .)


state 218

    (45) delete -> identifier DOT DELETE LPARENT . indice COMMA INT RPARENT SEMICOLON
    (133) indice -> . INT
    (134) indice -> . ID

    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 266

state 219

    (36) len -> LEN LPARENT identifier RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 267


state 220

    (39) blink -> BLINK LPARENT b_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 268


state 221

    (98) b_content -> identifier COMMA . INT COMMA time_mes COMMA value
    (99) b_content -> identifier COMMA . value
    (149) value -> . FALSE
    (150) value -> . TRUE

    INT             shift and go to state 269
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121

    value                          shift and go to state 270

state 222

    (40) delay -> DELAY LPARENT d_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 271


state 223

    (101) d_content -> iterable COMMA . time_mes
    (139) time_mes -> . QUOTES MIL QUOTES
    (140) time_mes -> . QUOTES MIN QUOTES
    (141) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 272

state 224

    (56) proc_call -> proc_name LPARENT param . RPARENT

    RPARENT         shift and go to state 273


state 225

    (62) param -> call_param .
    (63) param -> call_param . COMMA param

    RPARENT         reduce using rule 62 (param -> call_param .)
    COMMA           shift and go to state 274


state 226

    (64) param -> empty .

    RPARENT         reduce using rule 64 (param -> empty .)


state 227

    (65) call_param -> ass_param .

    COMMA           reduce using rule 65 (call_param -> ass_param .)
    RPARENT         reduce using rule 65 (call_param -> ass_param .)


state 228

    (66) ass_param -> iterable .

    COMMA           reduce using rule 66 (ass_param -> iterable .)
    RPARENT         reduce using rule 66 (ass_param -> iterable .)


state 229

    (67) ass_param -> mat .

    COMMA           reduce using rule 67 (ass_param -> mat .)
    RPARENT         reduce using rule 67 (ass_param -> mat .)


state 230

    (68) ass_param -> 3dmat .

    COMMA           reduce using rule 68 (ass_param -> 3dmat .)
    RPARENT         reduce using rule 68 (ass_param -> 3dmat .)


state 231

    (69) ass_param -> value .

    COMMA           reduce using rule 69 (ass_param -> value .)
    RPARENT         reduce using rule 69 (ass_param -> value .)


state 232

    (111) mat -> PARENTCL . mat_term PARENTCR
    (115) 3dmat -> PARENTCL . 3dmat_term PARENTCR
    (106) list -> PARENTCL . list_term PARENTCR
    (107) list -> PARENTCL . empty PARENTCR
    (112) mat_term -> . mat_value COMMA mat_term
    (113) mat_term -> . mat_value
    (116) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (117) 3dmat_term -> . 3dmat_value
    (108) list_term -> . list_value COMMA list_term
    (109) list_term -> . list_value
    (166) empty -> .
    (114) mat_value -> . list
    (118) 3dmat_value -> . mat
    (110) list_value -> . value
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (111) mat -> . PARENTCL mat_term PARENTCR
    (149) value -> . FALSE
    (150) value -> . TRUE

    PARENTCR        reduce using rule 166 (empty -> .)
    PARENTCL        shift and go to state 187
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121

    mat_term                       shift and go to state 190
    3dmat_term                     shift and go to state 191
    list_term                      shift and go to state 188
    empty                          shift and go to state 189
    mat_value                      shift and go to state 193
    3dmat_value                    shift and go to state 194
    list_value                     shift and go to state 192
    list                           shift and go to state 196
    mat                            shift and go to state 197
    value                          shift and go to state 195

state 233

    (48) for -> FOR ID IN iterable . step LCORCH alt_block RCORCH SEMICOLON
    (49) step -> . STEP INT
    (50) step -> . empty
    (166) empty -> .

    STEP            shift and go to state 276
    LCORCH          reduce using rule 166 (empty -> .)

    step                           shift and go to state 275
    empty                          shift and go to state 277

state 234

    (54) procedure -> PROCEDURE proc_dec LCORCH body RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 278


state 235

    (70) body -> global_call BEGIN . alt_block END SEMICOLON
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (166) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (159) identifier -> . ID
    (160) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_call SEMICOLON
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    END             reduce using rule 166 (empty -> .)
    IF              shift and go to state 75
    ID              shift and go to state 47
    TYPE            shift and go to state 76
    LEN             shift and go to state 78
    BLINK           shift and go to state 79
    DELAY           shift and go to state 80
    CALL            shift and go to state 81
    FOR             shift and go to state 83

    alt_block                      shift and go to state 279
    alt_content                    shift and go to state 280
    empty                          shift and go to state 281
    instruction                    shift and go to state 282
    assignment                     shift and go to state 283
    function                       shift and go to state 58
    consult                        shift and go to state 59
    cycle                          shift and go to state 60
    statement                      shift and go to state 61
    identifier                     shift and go to state 284
    type                           shift and go to state 63
    insert                         shift and go to state 64
    del                            shift and go to state 65
    len                            shift and go to state 66
    neg                            shift and go to state 67
    t_f                            shift and go to state 68
    blink                          shift and go to state 69
    delay                          shift and go to state 70
    shape                          shift and go to state 71
    delete                         shift and go to state 72
    call                           shift and go to state 73
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 74

state 236

    (15) global_call -> GLOBAL global_term . SEMICOLON global_call

    SEMICOLON       shift and go to state 285


state 237

    (17) global_term -> ID . COMMA global_term
    (18) global_term -> ID .

    COMMA           shift and go to state 286
    SEMICOLON       reduce using rule 18 (global_term -> ID .)


state 238

    (55) proc_dec -> proc_name LPARENT parameter RPARENT .

    LCORCH          reduce using rule 55 (proc_dec -> proc_name LPARENT parameter RPARENT .)


state 239

    (59) parameter -> proc_param COMMA . parameter
    (58) parameter -> . proc_param
    (59) parameter -> . proc_param COMMA parameter
    (60) parameter -> . empty
    (61) proc_param -> . ID
    (166) empty -> .

    ID              shift and go to state 174
    RPARENT         reduce using rule 166 (empty -> .)

    proc_param                     shift and go to state 172
    parameter                      shift and go to state 287
    empty                          shift and go to state 173

state 240

    (33) a_content -> RANGE LPARENT iterable . COMMA value RPARENT

    COMMA           shift and go to state 288


state 241

    (87) factor -> LPARENT arithmetic RPARENT .

    TIMES           reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    EXP             reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    DIVIDE          reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    DIVENT          reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    MOD             reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    PLUS            reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    MINUS           reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    SEMICOLON       reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    RPARENT         reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)
    COMMA           reduce using rule 87 (factor -> LPARENT arithmetic RPARENT .)


state 242

    (82) arithmetic -> arithmetic adding_operator term .
    (84) term -> term . multiplying_operator factor
    (144) multiplying_operator -> . TIMES
    (145) multiplying_operator -> . EXP
    (146) multiplying_operator -> . DIVIDE
    (147) multiplying_operator -> . DIVENT
    (148) multiplying_operator -> . MOD

    PLUS            reduce using rule 82 (arithmetic -> arithmetic adding_operator term .)
    MINUS           reduce using rule 82 (arithmetic -> arithmetic adding_operator term .)
    SEMICOLON       reduce using rule 82 (arithmetic -> arithmetic adding_operator term .)
    RPARENT         reduce using rule 82 (arithmetic -> arithmetic adding_operator term .)
    COMMA           reduce using rule 82 (arithmetic -> arithmetic adding_operator term .)
    TIMES           shift and go to state 181
    EXP             shift and go to state 182
    DIVIDE          shift and go to state 183
    DIVENT          shift and go to state 184
    MOD             shift and go to state 185

    multiplying_operator           shift and go to state 180

state 243

    (84) term -> term multiplying_operator factor .

    TIMES           reduce using rule 84 (term -> term multiplying_operator factor .)
    EXP             reduce using rule 84 (term -> term multiplying_operator factor .)
    DIVIDE          reduce using rule 84 (term -> term multiplying_operator factor .)
    DIVENT          reduce using rule 84 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 84 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 84 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 84 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 84 (term -> term multiplying_operator factor .)
    RPARENT         reduce using rule 84 (term -> term multiplying_operator factor .)
    COMMA           reduce using rule 84 (term -> term multiplying_operator factor .)


state 244

    (106) list -> PARENTCL list_term PARENTCR .

    SEMICOLON       reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    NE              reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    LT              reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    GT              reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    LTE             reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    GTE             reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    COMPARE         reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    COMMA           reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    PARENTCR        reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    RPARENT         reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    STEP            reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)
    LCORCH          reduce using rule 106 (list -> PARENTCL list_term PARENTCR .)


state 245

    (107) list -> PARENTCL empty PARENTCR .

    SEMICOLON       reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    NE              reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    LT              reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    GT              reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    LTE             reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    GTE             reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    COMPARE         reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    COMMA           reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    PARENTCR        reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    RPARENT         reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    STEP            reduce using rule 107 (list -> PARENTCL empty PARENTCR .)
    LCORCH          reduce using rule 107 (list -> PARENTCL empty PARENTCR .)


state 246

    (111) mat -> PARENTCL mat_term PARENTCR .

    SEMICOLON       reduce using rule 111 (mat -> PARENTCL mat_term PARENTCR .)
    COMMA           reduce using rule 111 (mat -> PARENTCL mat_term PARENTCR .)
    PARENTCR        reduce using rule 111 (mat -> PARENTCL mat_term PARENTCR .)
    RPARENT         reduce using rule 111 (mat -> PARENTCL mat_term PARENTCR .)


state 247

    (115) 3dmat -> PARENTCL 3dmat_term PARENTCR .

    SEMICOLON       reduce using rule 115 (3dmat -> PARENTCL 3dmat_term PARENTCR .)
    RPARENT         reduce using rule 115 (3dmat -> PARENTCL 3dmat_term PARENTCR .)
    COMMA           reduce using rule 115 (3dmat -> PARENTCL 3dmat_term PARENTCR .)


state 248

    (108) list_term -> list_value COMMA . list_term
    (108) list_term -> . list_value COMMA list_term
    (109) list_term -> . list_value
    (110) list_value -> . value
    (149) value -> . FALSE
    (150) value -> . TRUE

    FALSE           shift and go to state 120
    TRUE            shift and go to state 121

    list_value                     shift and go to state 192
    list_term                      shift and go to state 289
    value                          shift and go to state 195

state 249

    (112) mat_term -> mat_value COMMA . mat_term
    (112) mat_term -> . mat_value COMMA mat_term
    (113) mat_term -> . mat_value
    (114) mat_value -> . list
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR

    PARENTCL        shift and go to state 145

    mat_value                      shift and go to state 193
    mat_term                       shift and go to state 290
    list                           shift and go to state 196

state 250

    (116) 3dmat_term -> 3dmat_value COMMA . 3dmat_term
    (116) 3dmat_term -> . 3dmat_value COMMA 3dmat_term
    (117) 3dmat_term -> . 3dmat_value
    (118) 3dmat_value -> . mat
    (111) mat -> . PARENTCL mat_term PARENTCR

    PARENTCL        shift and go to state 204

    3dmat_value                    shift and go to state 194
    3dmat_term                     shift and go to state 291
    mat                            shift and go to state 197

state 251

    (20) assignment -> identifier COMMA identifier ASSIGN a_content . COMMA a_content SEMICOLON

    COMMA           shift and go to state 292


state 252

    (123) list_consultT -> PARENTCL . indice PARENTCR
    (124) list_consultT -> PARENTCL . indice TP indice PARENTCR
    (126) mat_consultT -> PARENTCL . indice COMMA indice PARENTCR
    (127) mat_consultT -> PARENTCL . TP COMMA indice PARENTCR
    (128) mat_consultT -> PARENTCL . TP COMMA indice PARENTCR list_consultT
    (129) mat_consultT -> PARENTCL . indice PARENTCR list_consultT
    (133) indice -> . INT
    (134) indice -> . ID

    TP              shift and go to state 132
    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 293

state 253

    (129) mat_consultT -> PARENTCL indice PARENTCR list_consultT .

    ASSIGN          reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    COMMA           reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    NE              reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    LT              reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    GT              reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    LTE             reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    GTE             reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    COMPARE         reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    RPARENT         reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    STEP            reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    LCORCH          reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    SEMICOLON       reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)
    DOT             reduce using rule 129 (mat_consultT -> PARENTCL indice PARENTCR list_consultT .)


state 254

    (132) 3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .

    ASSIGN          reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    COMMA           reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    NE              reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    LT              reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    GT              reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    LTE             reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    GTE             reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    COMPARE         reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    RPARENT         reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    STEP            reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    LCORCH          reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    SEMICOLON       reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)
    DOT             reduce using rule 132 (3dmat_consultT -> PARENTCL indice PARENTCR mat_consultT .)


state 255

    (124) list_consultT -> PARENTCL indice TP indice . PARENTCR

    PARENTCR        shift and go to state 294


state 256

    (126) mat_consultT -> PARENTCL indice COMMA indice . PARENTCR
    (131) 3dmat_consultT -> PARENTCL indice COMMA indice . COMMA indice PARENTCR

    PARENTCR        shift and go to state 296
    COMMA           shift and go to state 295


state 257

    (127) mat_consultT -> PARENTCL TP COMMA indice . PARENTCR
    (128) mat_consultT -> PARENTCL TP COMMA indice . PARENTCR list_consultT

    PARENTCR        shift and go to state 297


state 258

    (76) compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .

    COMPILE         reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    IF              reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    TYPE            reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    LEN             reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    BLINK           reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    DELAY           reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    CALL            reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    ID              reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    FOR             reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)
    END             reduce using rule 76 (compile -> COMPILE LPARENT compile_cube RPARENT SEMICOLON .)


state 259

    (51) statement -> IF LPARENT iterable relation bif_value . RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement

    RPARENT         shift and go to state 298


state 260

    (151) bif_value -> value .

    RPARENT         reduce using rule 151 (bif_value -> value .)


state 261

    (152) bif_value -> arithmetic .
    (82) arithmetic -> arithmetic . adding_operator term
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS

    RPARENT         reduce using rule 152 (bif_value -> arithmetic .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127

    adding_operator                shift and go to state 179

state 262

    (32) type -> TYPE LPARENT identifier RPARENT SEMICOLON .

    COMPILE         reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    IF              reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    TYPE            reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    LEN             reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    BLINK           reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    DELAY           reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    CALL            reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    ID              reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    FOR             reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    END             reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)
    RCORCH          reduce using rule 32 (type -> TYPE LPARENT identifier RPARENT SEMICOLON .)


state 263

    (34) insert -> identifier DOT INSERT LPARENT i_content . RPARENT SEMICOLON

    RPARENT         shift and go to state 299


state 264

    (104) i_content -> iterable . COMMA insertable
    (105) i_content -> iterable . COMMA INT i_ind

    COMMA           shift and go to state 300


state 265

    (35) del -> identifier DOT DEL LPARENT iterable . RPARENT SEMICOLON

    RPARENT         shift and go to state 301


state 266

    (45) delete -> identifier DOT DELETE LPARENT indice . COMMA INT RPARENT SEMICOLON

    COMMA           shift and go to state 302


state 267

    (36) len -> LEN LPARENT identifier RPARENT SEMICOLON .

    COMPILE         reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    IF              reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    TYPE            reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    LEN             reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    BLINK           reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    DELAY           reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    CALL            reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    ID              reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    FOR             reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    END             reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)
    RCORCH          reduce using rule 36 (len -> LEN LPARENT identifier RPARENT SEMICOLON .)


state 268

    (39) blink -> BLINK LPARENT b_content RPARENT SEMICOLON .

    COMPILE         reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    IF              reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    LEN             reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    CALL            reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    ID              reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    FOR             reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    END             reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 39 (blink -> BLINK LPARENT b_content RPARENT SEMICOLON .)


state 269

    (98) b_content -> identifier COMMA INT . COMMA time_mes COMMA value

    COMMA           shift and go to state 303


state 270

    (99) b_content -> identifier COMMA value .

    RPARENT         reduce using rule 99 (b_content -> identifier COMMA value .)


state 271

    (40) delay -> DELAY LPARENT d_content RPARENT SEMICOLON .

    COMPILE         reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    IF              reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    LEN             reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    CALL            reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    ID              reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    FOR             reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    END             reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 40 (delay -> DELAY LPARENT d_content RPARENT SEMICOLON .)


state 272

    (101) d_content -> iterable COMMA time_mes .

    RPARENT         reduce using rule 101 (d_content -> iterable COMMA time_mes .)


state 273

    (56) proc_call -> proc_name LPARENT param RPARENT .

    SEMICOLON       reduce using rule 56 (proc_call -> proc_name LPARENT param RPARENT .)


state 274

    (63) param -> call_param COMMA . param
    (62) param -> . call_param
    (63) param -> . call_param COMMA param
    (64) param -> . empty
    (65) call_param -> . ass_param
    (166) empty -> .
    (66) ass_param -> . iterable
    (67) ass_param -> . mat
    (68) ass_param -> . 3dmat
    (69) ass_param -> . value
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (111) mat -> . PARENTCL mat_term PARENTCR
    (115) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (149) value -> . FALSE
    (150) value -> . TRUE
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    RPARENT         reduce using rule 166 (empty -> .)
    INT             shift and go to state 143
    PARENTCL        shift and go to state 232
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    ID              shift and go to state 47

    call_param                     shift and go to state 225
    param                          shift and go to state 304
    empty                          shift and go to state 226
    ass_param                      shift and go to state 227
    iterable                       shift and go to state 228
    mat                            shift and go to state 229
    3dmat                          shift and go to state 230
    value                          shift and go to state 231
    identifier                     shift and go to state 142
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 275

    (48) for -> FOR ID IN iterable step . LCORCH alt_block RCORCH SEMICOLON

    LCORCH          shift and go to state 305


state 276

    (49) step -> STEP . INT

    INT             shift and go to state 306


state 277

    (50) step -> empty .

    LCORCH          reduce using rule 50 (step -> empty .)


state 278

    (54) procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .

    PROCEDURE       reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    ID              reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    MAIN            reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)
    $end            reduce using rule 54 (procedure -> PROCEDURE proc_dec LCORCH body RCORCH SEMICOLON .)


state 279

    (70) body -> global_call BEGIN alt_block . END SEMICOLON

    END             shift and go to state 307


state 280

    (6) alt_block -> alt_content . alt_block
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (166) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (159) identifier -> . ID
    (160) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_call SEMICOLON
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    END             reduce using rule 166 (empty -> .)
    RCORCH          reduce using rule 166 (empty -> .)
    IF              shift and go to state 75
    ID              shift and go to state 47
    TYPE            shift and go to state 76
    LEN             shift and go to state 78
    BLINK           shift and go to state 79
    DELAY           shift and go to state 80
    CALL            shift and go to state 81
    FOR             shift and go to state 83

    alt_content                    shift and go to state 280
    alt_block                      shift and go to state 308
    empty                          shift and go to state 281
    instruction                    shift and go to state 282
    assignment                     shift and go to state 283
    function                       shift and go to state 58
    consult                        shift and go to state 59
    cycle                          shift and go to state 60
    statement                      shift and go to state 61
    identifier                     shift and go to state 284
    type                           shift and go to state 63
    insert                         shift and go to state 64
    del                            shift and go to state 65
    len                            shift and go to state 66
    neg                            shift and go to state 67
    t_f                            shift and go to state 68
    blink                          shift and go to state 69
    delay                          shift and go to state 70
    shape                          shift and go to state 71
    delete                         shift and go to state 72
    call                           shift and go to state 73
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 74

state 281

    (7) alt_block -> empty .

    END             reduce using rule 7 (alt_block -> empty .)
    RCORCH          reduce using rule 7 (alt_block -> empty .)


state 282

    (8) alt_content -> instruction .

    IF              reduce using rule 8 (alt_content -> instruction .)
    ID              reduce using rule 8 (alt_content -> instruction .)
    TYPE            reduce using rule 8 (alt_content -> instruction .)
    LEN             reduce using rule 8 (alt_content -> instruction .)
    BLINK           reduce using rule 8 (alt_content -> instruction .)
    DELAY           reduce using rule 8 (alt_content -> instruction .)
    CALL            reduce using rule 8 (alt_content -> instruction .)
    FOR             reduce using rule 8 (alt_content -> instruction .)
    END             reduce using rule 8 (alt_content -> instruction .)
    RCORCH          reduce using rule 8 (alt_content -> instruction .)


state 283

    (9) alt_content -> assignment .

    IF              reduce using rule 9 (alt_content -> assignment .)
    ID              reduce using rule 9 (alt_content -> assignment .)
    TYPE            reduce using rule 9 (alt_content -> assignment .)
    LEN             reduce using rule 9 (alt_content -> assignment .)
    BLINK           reduce using rule 9 (alt_content -> assignment .)
    DELAY           reduce using rule 9 (alt_content -> assignment .)
    CALL            reduce using rule 9 (alt_content -> assignment .)
    FOR             reduce using rule 9 (alt_content -> assignment .)
    END             reduce using rule 9 (alt_content -> assignment .)
    RCORCH          reduce using rule 9 (alt_content -> assignment .)


state 284

    (19) assignment -> identifier . ASSIGN a_content SEMICOLON
    (20) assignment -> identifier . COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (34) insert -> identifier . DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> identifier . DOT DEL LPARENT iterable RPARENT SEMICOLON
    (37) neg -> identifier . DOT NEG SEMICOLON
    (38) t_f -> identifier . DOT tf SEMICOLON
    (44) shape -> identifier . DOT shape_arg SEMICOLON
    (45) delete -> identifier . DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON

    ASSIGN          shift and go to state 89
    COMMA           shift and go to state 90
    DOT             shift and go to state 102


state 285

    (15) global_call -> GLOBAL global_term SEMICOLON . global_call
    (15) global_call -> . GLOBAL global_term SEMICOLON global_call
    (16) global_call -> . empty
    (166) empty -> .

    GLOBAL          shift and go to state 169
    BEGIN           reduce using rule 166 (empty -> .)

    global_call                    shift and go to state 309
    empty                          shift and go to state 170

state 286

    (17) global_term -> ID COMMA . global_term
    (17) global_term -> . ID COMMA global_term
    (18) global_term -> . ID

    ID              shift and go to state 237

    global_term                    shift and go to state 310

state 287

    (59) parameter -> proc_param COMMA parameter .

    RPARENT         reduce using rule 59 (parameter -> proc_param COMMA parameter .)


state 288

    (33) a_content -> RANGE LPARENT iterable COMMA . value RPARENT
    (149) value -> . FALSE
    (150) value -> . TRUE

    FALSE           shift and go to state 120
    TRUE            shift and go to state 121

    value                          shift and go to state 311

state 289

    (108) list_term -> list_value COMMA list_term .

    PARENTCR        reduce using rule 108 (list_term -> list_value COMMA list_term .)


state 290

    (112) mat_term -> mat_value COMMA mat_term .

    PARENTCR        reduce using rule 112 (mat_term -> mat_value COMMA mat_term .)


state 291

    (116) 3dmat_term -> 3dmat_value COMMA 3dmat_term .

    PARENTCR        reduce using rule 116 (3dmat_term -> 3dmat_value COMMA 3dmat_term .)


state 292

    (20) assignment -> identifier COMMA identifier ASSIGN a_content COMMA . a_content SEMICOLON
    (33) a_content -> . RANGE LPARENT iterable COMMA value RPARENT
    (92) a_content -> . value
    (93) a_content -> . arithmetic
    (94) a_content -> . list
    (95) a_content -> . mat
    (96) a_content -> . 3dmat
    (97) a_content -> . consult
    (149) value -> . FALSE
    (150) value -> . TRUE
    (80) arithmetic -> . term
    (81) arithmetic -> . adding_operator term
    (82) arithmetic -> . arithmetic adding_operator term
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (111) mat -> . PARENTCL mat_term PARENTCR
    (115) 3dmat -> . PARENTCL 3dmat_term PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (83) term -> . factor
    (84) term -> . term multiplying_operator factor
    (142) adding_operator -> . PLUS
    (143) adding_operator -> . MINUS
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (85) factor -> . INT
    (86) factor -> . ID
    (87) factor -> . LPARENT arithmetic RPARENT

    RANGE           shift and go to state 112
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    PARENTCL        shift and go to state 124
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    ID              shift and go to state 128
    INT             shift and go to state 129
    LPARENT         shift and go to state 113

    a_content                      shift and go to state 312
    value                          shift and go to state 114
    arithmetic                     shift and go to state 115
    list                           shift and go to state 116
    mat                            shift and go to state 117
    3dmat                          shift and go to state 118
    consult                        shift and go to state 119
    term                           shift and go to state 122
    adding_operator                shift and go to state 123
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    factor                         shift and go to state 125

state 293

    (123) list_consultT -> PARENTCL indice . PARENTCR
    (124) list_consultT -> PARENTCL indice . TP indice PARENTCR
    (126) mat_consultT -> PARENTCL indice . COMMA indice PARENTCR
    (129) mat_consultT -> PARENTCL indice . PARENTCR list_consultT

    PARENTCR        shift and go to state 313
    TP              shift and go to state 200
    COMMA           shift and go to state 314


state 294

    (124) list_consultT -> PARENTCL indice TP indice PARENTCR .

    ASSIGN          reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    COMMA           reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    NE              reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    LT              reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    GT              reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    LTE             reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    GTE             reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    COMPARE         reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    RPARENT         reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    STEP            reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    LCORCH          reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    SEMICOLON       reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)
    DOT             reduce using rule 124 (list_consultT -> PARENTCL indice TP indice PARENTCR .)


state 295

    (131) 3dmat_consultT -> PARENTCL indice COMMA indice COMMA . indice PARENTCR
    (133) indice -> . INT
    (134) indice -> . ID

    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 315

state 296

    (126) mat_consultT -> PARENTCL indice COMMA indice PARENTCR .

    ASSIGN          reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    COMMA           reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    NE              reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    LT              reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    GT              reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    LTE             reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    GTE             reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    COMPARE         reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    RPARENT         reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    STEP            reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    LCORCH          reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    SEMICOLON       reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)
    DOT             reduce using rule 126 (mat_consultT -> PARENTCL indice COMMA indice PARENTCR .)


state 297

    (127) mat_consultT -> PARENTCL TP COMMA indice PARENTCR .
    (128) mat_consultT -> PARENTCL TP COMMA indice PARENTCR . list_consultT
    (123) list_consultT -> . PARENTCL indice PARENTCR
    (124) list_consultT -> . PARENTCL indice TP indice PARENTCR

    ASSIGN          reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    COMMA           reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    NE              reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    LT              reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    GT              reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    LTE             reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    GTE             reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    COMPARE         reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    RPARENT         reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    STEP            reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    LCORCH          reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    SEMICOLON       reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    DOT             reduce using rule 127 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR .)
    PARENTCL        shift and go to state 316

    list_consultT                  shift and go to state 317

state 298

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT . LCORCH alt_block RCORCH SEMICOLON opt_statement

    LCORCH          shift and go to state 318


state 299

    (34) insert -> identifier DOT INSERT LPARENT i_content RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 319


state 300

    (104) i_content -> iterable COMMA . insertable
    (105) i_content -> iterable COMMA . INT i_ind
    (164) insertable -> . value
    (165) insertable -> . identifier
    (149) value -> . FALSE
    (150) value -> . TRUE
    (159) identifier -> . ID
    (160) identifier -> . consult
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 321
    FALSE           shift and go to state 120
    TRUE            shift and go to state 121
    ID              shift and go to state 47

    insertable                     shift and go to state 320
    value                          shift and go to state 322
    identifier                     shift and go to state 323
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 301

    (35) del -> identifier DOT DEL LPARENT iterable RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 324


state 302

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA . INT RPARENT SEMICOLON

    INT             shift and go to state 325


state 303

    (98) b_content -> identifier COMMA INT COMMA . time_mes COMMA value
    (139) time_mes -> . QUOTES MIL QUOTES
    (140) time_mes -> . QUOTES MIN QUOTES
    (141) time_mes -> . QUOTES SEG QUOTES

    QUOTES          shift and go to state 21

    time_mes                       shift and go to state 326

state 304

    (63) param -> call_param COMMA param .

    RPARENT         reduce using rule 63 (param -> call_param COMMA param .)


state 305

    (48) for -> FOR ID IN iterable step LCORCH . alt_block RCORCH SEMICOLON
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (166) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (159) identifier -> . ID
    (160) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_call SEMICOLON
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    RCORCH          reduce using rule 166 (empty -> .)
    IF              shift and go to state 75
    ID              shift and go to state 47
    TYPE            shift and go to state 76
    LEN             shift and go to state 78
    BLINK           shift and go to state 79
    DELAY           shift and go to state 80
    CALL            shift and go to state 81
    FOR             shift and go to state 83

    alt_block                      shift and go to state 327
    alt_content                    shift and go to state 280
    empty                          shift and go to state 281
    instruction                    shift and go to state 282
    assignment                     shift and go to state 283
    function                       shift and go to state 58
    consult                        shift and go to state 59
    cycle                          shift and go to state 60
    statement                      shift and go to state 61
    identifier                     shift and go to state 284
    type                           shift and go to state 63
    insert                         shift and go to state 64
    del                            shift and go to state 65
    len                            shift and go to state 66
    neg                            shift and go to state 67
    t_f                            shift and go to state 68
    blink                          shift and go to state 69
    delay                          shift and go to state 70
    shape                          shift and go to state 71
    delete                         shift and go to state 72
    call                           shift and go to state 73
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 74

state 306

    (49) step -> STEP INT .

    LCORCH          reduce using rule 49 (step -> STEP INT .)


state 307

    (70) body -> global_call BEGIN alt_block END . SEMICOLON

    SEMICOLON       shift and go to state 328


state 308

    (6) alt_block -> alt_content alt_block .

    END             reduce using rule 6 (alt_block -> alt_content alt_block .)
    RCORCH          reduce using rule 6 (alt_block -> alt_content alt_block .)


state 309

    (15) global_call -> GLOBAL global_term SEMICOLON global_call .

    BEGIN           reduce using rule 15 (global_call -> GLOBAL global_term SEMICOLON global_call .)


state 310

    (17) global_term -> ID COMMA global_term .

    SEMICOLON       reduce using rule 17 (global_term -> ID COMMA global_term .)


state 311

    (33) a_content -> RANGE LPARENT iterable COMMA value . RPARENT

    RPARENT         shift and go to state 329


state 312

    (20) assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content . SEMICOLON

    SEMICOLON       shift and go to state 330


state 313

    (123) list_consultT -> PARENTCL indice PARENTCR .
    (129) mat_consultT -> PARENTCL indice PARENTCR . list_consultT
    (123) list_consultT -> . PARENTCL indice PARENTCR
    (124) list_consultT -> . PARENTCL indice TP indice PARENTCR

    ASSIGN          reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    NE              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LT              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    GT              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LTE             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    GTE             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    RPARENT         reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    STEP            reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    SEMICOLON       reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    DOT             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    PARENTCL        shift and go to state 316

    list_consultT                  shift and go to state 253

state 314

    (126) mat_consultT -> PARENTCL indice COMMA . indice PARENTCR
    (133) indice -> . INT
    (134) indice -> . ID

    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 331

state 315

    (131) 3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice . PARENTCR

    PARENTCR        shift and go to state 332


state 316

    (123) list_consultT -> PARENTCL . indice PARENTCR
    (124) list_consultT -> PARENTCL . indice TP indice PARENTCR
    (133) indice -> . INT
    (134) indice -> . ID

    INT             shift and go to state 133
    ID              shift and go to state 134

    indice                         shift and go to state 333

state 317

    (128) mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .

    ASSIGN          reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    COMMA           reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    NE              reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    LT              reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    GT              reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    LTE             reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    GTE             reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    COMPARE         reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    RPARENT         reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    STEP            reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    LCORCH          reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    SEMICOLON       reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)
    DOT             reduce using rule 128 (mat_consultT -> PARENTCL TP COMMA indice PARENTCR list_consultT .)


state 318

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH . alt_block RCORCH SEMICOLON opt_statement
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (166) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (159) identifier -> . ID
    (160) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_call SEMICOLON
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    RCORCH          reduce using rule 166 (empty -> .)
    IF              shift and go to state 75
    ID              shift and go to state 47
    TYPE            shift and go to state 76
    LEN             shift and go to state 78
    BLINK           shift and go to state 79
    DELAY           shift and go to state 80
    CALL            shift and go to state 81
    FOR             shift and go to state 83

    alt_block                      shift and go to state 334
    alt_content                    shift and go to state 280
    empty                          shift and go to state 281
    instruction                    shift and go to state 282
    assignment                     shift and go to state 283
    function                       shift and go to state 58
    consult                        shift and go to state 59
    cycle                          shift and go to state 60
    statement                      shift and go to state 61
    identifier                     shift and go to state 284
    type                           shift and go to state 63
    insert                         shift and go to state 64
    del                            shift and go to state 65
    len                            shift and go to state 66
    neg                            shift and go to state 67
    t_f                            shift and go to state 68
    blink                          shift and go to state 69
    delay                          shift and go to state 70
    shape                          shift and go to state 71
    delete                         shift and go to state 72
    call                           shift and go to state 73
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 74

state 319

    (34) insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .

    COMPILE         reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    IF              reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    TYPE            reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    LEN             reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    BLINK           reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    DELAY           reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    CALL            reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    ID              reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    FOR             reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    END             reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)
    RCORCH          reduce using rule 34 (insert -> identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON .)


state 320

    (104) i_content -> iterable COMMA insertable .

    RPARENT         reduce using rule 104 (i_content -> iterable COMMA insertable .)


state 321

    (105) i_content -> iterable COMMA INT . i_ind
    (135) i_ind -> . COMMA iterable
    (136) i_ind -> . empty
    (166) empty -> .

    COMMA           shift and go to state 335
    RPARENT         reduce using rule 166 (empty -> .)

    i_ind                          shift and go to state 336
    empty                          shift and go to state 337

state 322

    (164) insertable -> value .

    RPARENT         reduce using rule 164 (insertable -> value .)


state 323

    (165) insertable -> identifier .

    RPARENT         reduce using rule 165 (insertable -> identifier .)


state 324

    (35) del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .

    COMPILE         reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    IF              reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    TYPE            reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    LEN             reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    BLINK           reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    DELAY           reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    CALL            reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    ID              reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    FOR             reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    END             reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)
    RCORCH          reduce using rule 35 (del -> identifier DOT DEL LPARENT iterable RPARENT SEMICOLON .)


state 325

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA INT . RPARENT SEMICOLON

    RPARENT         shift and go to state 338


state 326

    (98) b_content -> identifier COMMA INT COMMA time_mes . COMMA value

    COMMA           shift and go to state 339


state 327

    (48) for -> FOR ID IN iterable step LCORCH alt_block . RCORCH SEMICOLON

    RCORCH          shift and go to state 340


state 328

    (70) body -> global_call BEGIN alt_block END SEMICOLON .

    RCORCH          reduce using rule 70 (body -> global_call BEGIN alt_block END SEMICOLON .)


state 329

    (33) a_content -> RANGE LPARENT iterable COMMA value RPARENT .

    SEMICOLON       reduce using rule 33 (a_content -> RANGE LPARENT iterable COMMA value RPARENT .)
    COMMA           reduce using rule 33 (a_content -> RANGE LPARENT iterable COMMA value RPARENT .)


state 330

    (20) assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .

    PROCEDURE       reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    ID              reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    MAIN            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    $end            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    IF              reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    TYPE            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    LEN             reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    BLINK           reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    DELAY           reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    CALL            reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    FOR             reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    END             reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)
    RCORCH          reduce using rule 20 (assignment -> identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON .)


state 331

    (126) mat_consultT -> PARENTCL indice COMMA indice . PARENTCR

    PARENTCR        shift and go to state 296


state 332

    (131) 3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .

    ASSIGN          reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    COMMA           reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    NE              reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LT              reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    GT              reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LTE             reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    GTE             reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    COMPARE         reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    RPARENT         reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    STEP            reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    LCORCH          reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    SEMICOLON       reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)
    DOT             reduce using rule 131 (3dmat_consultT -> PARENTCL indice COMMA indice COMMA indice PARENTCR .)


state 333

    (123) list_consultT -> PARENTCL indice . PARENTCR
    (124) list_consultT -> PARENTCL indice . TP indice PARENTCR

    PARENTCR        shift and go to state 341
    TP              shift and go to state 200


state 334

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block . RCORCH SEMICOLON opt_statement

    RCORCH          shift and go to state 342


state 335

    (135) i_ind -> COMMA . iterable
    (161) iterable -> . identifier
    (162) iterable -> . INT
    (163) iterable -> . list
    (159) identifier -> . ID
    (160) identifier -> . consult
    (106) list -> . PARENTCL list_term PARENTCR
    (107) list -> . PARENTCL empty PARENTCR
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT

    INT             shift and go to state 143
    ID              shift and go to state 47
    PARENTCL        shift and go to state 145

    iterable                       shift and go to state 343
    identifier                     shift and go to state 142
    list                           shift and go to state 144
    consult                        shift and go to state 48
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51

state 336

    (105) i_content -> iterable COMMA INT i_ind .

    RPARENT         reduce using rule 105 (i_content -> iterable COMMA INT i_ind .)


state 337

    (136) i_ind -> empty .

    RPARENT         reduce using rule 136 (i_ind -> empty .)


state 338

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 344


state 339

    (98) b_content -> identifier COMMA INT COMMA time_mes COMMA . value
    (149) value -> . FALSE
    (150) value -> . TRUE

    FALSE           shift and go to state 120
    TRUE            shift and go to state 121

    value                          shift and go to state 345

state 340

    (48) for -> FOR ID IN iterable step LCORCH alt_block RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 346


state 341

    (123) list_consultT -> PARENTCL indice PARENTCR .

    ASSIGN          reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    COMMA           reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    NE              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LT              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    GT              reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LTE             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    GTE             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    COMPARE         reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    RPARENT         reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    STEP            reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    LCORCH          reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    SEMICOLON       reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)
    DOT             reduce using rule 123 (list_consultT -> PARENTCL indice PARENTCR .)


state 342

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH . SEMICOLON opt_statement

    SEMICOLON       shift and go to state 347


state 343

    (135) i_ind -> COMMA iterable .

    RPARENT         reduce using rule 135 (i_ind -> COMMA iterable .)


state 344

    (45) delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .

    COMPILE         reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    IF              reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    TYPE            reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    LEN             reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    BLINK           reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    DELAY           reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    CALL            reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    ID              reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    FOR             reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    END             reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)
    RCORCH          reduce using rule 45 (delete -> identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON .)


state 345

    (98) b_content -> identifier COMMA INT COMMA time_mes COMMA value .

    RPARENT         reduce using rule 98 (b_content -> identifier COMMA INT COMMA time_mes COMMA value .)


state 346

    (48) for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .

    COMPILE         reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    IF              reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    TYPE            reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    LEN             reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    BLINK           reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    DELAY           reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    CALL            reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    ID              reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    FOR             reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    END             reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)
    RCORCH          reduce using rule 48 (for -> FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON .)


state 347

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON . opt_statement
    (52) opt_statement -> . ELSE LCORCH alt_block RCORCH SEMICOLON
    (53) opt_statement -> . empty
    (166) empty -> .

    ELSE            shift and go to state 349
    COMPILE         reduce using rule 166 (empty -> .)
    IF              reduce using rule 166 (empty -> .)
    TYPE            reduce using rule 166 (empty -> .)
    LEN             reduce using rule 166 (empty -> .)
    BLINK           reduce using rule 166 (empty -> .)
    DELAY           reduce using rule 166 (empty -> .)
    CALL            reduce using rule 166 (empty -> .)
    ID              reduce using rule 166 (empty -> .)
    FOR             reduce using rule 166 (empty -> .)
    END             reduce using rule 166 (empty -> .)
    RCORCH          reduce using rule 166 (empty -> .)

    opt_statement                  shift and go to state 348
    empty                          shift and go to state 350

state 348

    (51) statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .

    COMPILE         reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    IF              reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    TYPE            reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    LEN             reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    BLINK           reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    DELAY           reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    CALL            reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    ID              reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    FOR             reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    END             reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)
    RCORCH          reduce using rule 51 (statement -> IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement .)


state 349

    (52) opt_statement -> ELSE . LCORCH alt_block RCORCH SEMICOLON

    LCORCH          shift and go to state 351


state 350

    (53) opt_statement -> empty .

    COMPILE         reduce using rule 53 (opt_statement -> empty .)
    IF              reduce using rule 53 (opt_statement -> empty .)
    TYPE            reduce using rule 53 (opt_statement -> empty .)
    LEN             reduce using rule 53 (opt_statement -> empty .)
    BLINK           reduce using rule 53 (opt_statement -> empty .)
    DELAY           reduce using rule 53 (opt_statement -> empty .)
    CALL            reduce using rule 53 (opt_statement -> empty .)
    ID              reduce using rule 53 (opt_statement -> empty .)
    FOR             reduce using rule 53 (opt_statement -> empty .)
    END             reduce using rule 53 (opt_statement -> empty .)
    RCORCH          reduce using rule 53 (opt_statement -> empty .)


state 351

    (52) opt_statement -> ELSE LCORCH . alt_block RCORCH SEMICOLON
    (6) alt_block -> . alt_content alt_block
    (7) alt_block -> . empty
    (8) alt_content -> . instruction
    (9) alt_content -> . assignment
    (166) empty -> .
    (10) instruction -> . function
    (11) instruction -> . consult SEMICOLON
    (12) instruction -> . cycle
    (13) instruction -> . statement
    (19) assignment -> . identifier ASSIGN a_content SEMICOLON
    (20) assignment -> . identifier COMMA identifier ASSIGN a_content COMMA a_content SEMICOLON
    (21) function -> . type
    (22) function -> . insert
    (23) function -> . del
    (24) function -> . len
    (25) function -> . neg
    (26) function -> . t_f
    (27) function -> . blink
    (28) function -> . delay
    (29) function -> . shape
    (30) function -> . delete
    (31) function -> . call
    (119) consult -> . list_consult
    (120) consult -> . mat_consult
    (121) consult -> . 3dmat_consult
    (47) cycle -> . for
    (51) statement -> . IF LPARENT iterable relation bif_value RPARENT LCORCH alt_block RCORCH SEMICOLON opt_statement
    (159) identifier -> . ID
    (160) identifier -> . consult
    (32) type -> . TYPE LPARENT identifier RPARENT SEMICOLON
    (34) insert -> . identifier DOT INSERT LPARENT i_content RPARENT SEMICOLON
    (35) del -> . identifier DOT DEL LPARENT iterable RPARENT SEMICOLON
    (36) len -> . LEN LPARENT identifier RPARENT SEMICOLON
    (37) neg -> . identifier DOT NEG SEMICOLON
    (38) t_f -> . identifier DOT tf SEMICOLON
    (39) blink -> . BLINK LPARENT b_content RPARENT SEMICOLON
    (40) delay -> . DELAY LPARENT d_content RPARENT SEMICOLON
    (44) shape -> . identifier DOT shape_arg SEMICOLON
    (45) delete -> . identifier DOT DELETE LPARENT indice COMMA INT RPARENT SEMICOLON
    (46) call -> . CALL proc_call SEMICOLON
    (122) list_consult -> . ID list_consultT
    (125) mat_consult -> . ID mat_consultT
    (130) 3dmat_consult -> . ID 3dmat_consultT
    (48) for -> . FOR ID IN iterable step LCORCH alt_block RCORCH SEMICOLON

    RCORCH          reduce using rule 166 (empty -> .)
    IF              shift and go to state 75
    ID              shift and go to state 47
    TYPE            shift and go to state 76
    LEN             shift and go to state 78
    BLINK           shift and go to state 79
    DELAY           shift and go to state 80
    CALL            shift and go to state 81
    FOR             shift and go to state 83

    alt_block                      shift and go to state 352
    alt_content                    shift and go to state 280
    empty                          shift and go to state 281
    instruction                    shift and go to state 282
    assignment                     shift and go to state 283
    function                       shift and go to state 58
    consult                        shift and go to state 59
    cycle                          shift and go to state 60
    statement                      shift and go to state 61
    identifier                     shift and go to state 284
    type                           shift and go to state 63
    insert                         shift and go to state 64
    del                            shift and go to state 65
    len                            shift and go to state 66
    neg                            shift and go to state 67
    t_f                            shift and go to state 68
    blink                          shift and go to state 69
    delay                          shift and go to state 70
    shape                          shift and go to state 71
    delete                         shift and go to state 72
    call                           shift and go to state 73
    list_consult                   shift and go to state 49
    mat_consult                    shift and go to state 50
    3dmat_consult                  shift and go to state 51
    for                            shift and go to state 74

state 352

    (52) opt_statement -> ELSE LCORCH alt_block . RCORCH SEMICOLON

    RCORCH          shift and go to state 353


state 353

    (52) opt_statement -> ELSE LCORCH alt_block RCORCH . SEMICOLON

    SEMICOLON       shift and go to state 354


state 354

    (52) opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .

    COMPILE         reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    IF              reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    TYPE            reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    LEN             reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    BLINK           reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    DELAY           reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    CALL            reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    ID              reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    FOR             reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    END             reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)
    RCORCH          reduce using rule 52 (opt_statement -> ELSE LCORCH alt_block RCORCH SEMICOLON .)

