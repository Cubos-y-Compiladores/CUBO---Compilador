
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDIFWHILETYPErightASSIGNleftLTLTEGTGTEleftPLUSMINUSleftMODDIVENTTIMESDIVIDEleftEXPleftLPARENTRPARENTASSIGN BLINK BOOKED CALL COMMA CONST CUBO DELAY DELETE DIMCOLUMNAS DIMFILAS DIVENT DIVIDE DOT ELSE EXP F FALSE FOR GLOBAL GT GTE ID IF IN INSERT INT LCORCH LEN LENGHTERROR LPARENT LT LTE MAIN MIL MIN MINUS MOD NE NEG PARENTCL PARENTCR PLUS PROCEDURE QUOTES RANGE RANGOTIMER RCORCH RPARENT SEG SEMICOLON SHAPEA SHAPEC SHAPEF STEP T TIMER TIMES TP TRUE TYPE VARERROR WHILEprogram : const_blockconst_block : const const const const const block block : assignment block : function block : consultassignment :  identifier ASSIGN content SEMICOLON blockassignment :  GLOBAL ID ASSIGN content SEMICOLON blockassignment : ID COMMA ID ASSIGN value COMMA value SEMICOLON blockassignment : emptyfunction : type function : insertfunction : delfunction : lenfunction : negfunction : tfunction : ftype : TYPE LPARENT ID RPARENT SEMICOLON blockcontent : RANGE LPARENT INT COMMA value RPARENTinsert : ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block del : ID DOT DELETE LPARENT INT RPARENT SEMICOLON block len : LEN LPARENT ID RPARENT SEMICOLON block neg : complex_id DOT NEG SEMICOLON blockt : complex_id DOT T SEMICOLON blockf : complex_id DOT F SEMICOLON block arithmetic : termarithmetic : adding_operator term arithmetic : arithmetic adding_operator termterm : factorterm : term multiplying_operator factorfactor : INTfactor : IDfactor : LPARENT arithmetic RPARENTconst : TIMER ASSIGN INT SEMICOLONconst : RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLONconst : dimension ASSIGN INT SEMICOLONconst : CUBO ASSIGN INT SEMICOLONcontent : valuecontent : arithmeticcontent : PARENTCL list_term PARENTCRlist_term : value COMMA list_termlist_term : valuelist_term : consult : ID PARENTCL INT PARENTCR SEMICOLON blockconsult : ID PARENTCL INT TP INT PARENTCR SEMICOLON block dimension : DIMFILASdimension : DIMCOLUMNAStime_mes : MILtime_mes : MINtime_mes : SEGadding_operator : PLUSadding_operator : MINUSmultiplying_operator : TIMESmultiplying_operator : EXPmultiplying_operator : DIVIDEmultiplying_operator : DIVENTmultiplying_operator : MODvalue : FALSEvalue : TRUErelation : ASSIGNrelation : NErelation : LTrelation : GTrelation : LTErelation : GTEidentifier : IDidentifier : complex_idcomplex_id : ID PARENTCL INT PARENTCRcomplex_id : ID PARENTCL INT TP INT PARENTCRempty : '
    
_lr_action_items = {'TIMER':([0,3,10,15,20,21,26,27,48,],[4,4,4,4,4,-33,-35,-36,-34,]),'RANGOTIMER':([0,3,10,15,20,21,26,27,48,],[5,5,5,5,5,-33,-35,-36,-34,]),'CUBO':([0,3,10,15,20,21,26,27,48,],[7,7,7,7,7,-33,-35,-36,-34,]),'DIMFILAS':([0,3,10,15,20,21,26,27,48,],[8,8,8,8,8,-33,-35,-36,-34,]),'DIMCOLUMNAS':([0,3,10,15,20,21,26,27,48,],[9,9,9,9,9,-33,-35,-36,-34,]),'$end':([1,2,21,26,27,28,30,31,32,33,37,38,39,40,41,42,43,44,48,82,101,102,103,106,113,115,119,120,121,122,123,126,128,132,133,136,138,140,141,143,144,145,146,],[0,-1,-33,-35,-36,-69,-2,-3,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-34,-69,-69,-69,-69,-6,-69,-69,-22,-23,-24,-69,-69,-7,-43,-17,-21,-69,-69,-69,-44,-20,-8,-69,-19,]),'ASSIGN':([4,5,6,7,8,9,34,36,45,50,73,97,129,],[11,12,13,14,-45,-46,49,-65,-66,72,96,-67,-68,]),'INT':([11,13,14,49,52,59,67,69,70,72,83,85,88,89,90,91,92,93,98,99,100,],[16,18,19,60,74,60,60,-50,-51,60,107,60,60,-52,-53,-54,-55,-56,116,117,118,]),'QUOTES':([12,22,23,24,25,],[17,29,-47,-48,-49,]),'SEMICOLON':([16,18,19,29,57,60,61,62,64,65,66,68,71,77,78,79,94,95,97,104,105,108,109,110,112,129,131,135,139,142,],[21,26,27,48,82,-30,-37,-38,-57,-58,-25,-28,-31,101,102,103,-26,113,115,122,123,-32,-27,-39,-29,136,138,140,-18,145,]),'MIL':([17,],[23,]),'MIN':([17,],[24,]),'SEG':([17,],[25,]),'GLOBAL':([21,26,27,28,48,82,101,102,103,113,115,122,123,136,138,140,145,],[-33,-35,-36,35,-34,35,35,35,35,35,35,35,35,35,35,35,35,]),'ID':([21,26,27,28,35,48,49,51,55,56,59,67,69,70,72,82,85,88,89,90,91,92,93,101,102,103,113,115,122,123,136,138,140,145,],[-33,-35,-36,36,50,-34,71,73,80,81,71,71,-50,-51,71,36,71,71,-52,-53,-54,-55,-56,36,36,36,36,36,36,36,36,36,36,36,]),'TYPE':([21,26,27,28,48,82,101,102,103,113,115,122,123,136,138,140,145,],[-33,-35,-36,46,-34,46,46,46,46,46,46,46,46,46,46,46,46,]),'LEN':([21,26,27,28,48,82,101,102,103,113,115,122,123,136,138,140,145,],[-33,-35,-36,47,-34,47,47,47,47,47,47,47,47,47,47,47,47,]),'COMMA':([36,64,65,87,107,114,117,],[51,-57,-58,111,124,127,130,]),'PARENTCL':([36,49,72,],[52,63,63,]),'DOT':([36,45,97,129,],[53,54,-67,-68,]),'LPARENT':([46,47,49,58,59,67,69,70,72,75,76,85,88,89,90,91,92,93,],[55,56,59,83,59,59,-50,-51,59,99,100,59,59,-52,-53,-54,-55,-56,]),'RANGE':([49,72,],[58,58,]),'FALSE':([49,63,72,96,111,124,127,130,],[64,64,64,64,64,64,64,64,]),'TRUE':([49,63,72,96,111,124,127,130,],[65,65,65,65,65,65,65,65,]),'PLUS':([49,59,60,62,66,68,71,72,84,94,108,109,112,],[69,69,-30,69,-25,-28,-31,69,69,-26,-32,-27,-29,]),'MINUS':([49,59,60,62,66,68,71,72,84,94,108,109,112,],[70,70,-30,70,-25,-28,-31,70,70,-26,-32,-27,-29,]),'INSERT':([53,],[75,]),'DELETE':([53,],[76,]),'NEG':([54,],[77,]),'T':([54,],[78,]),'F':([54,],[79,]),'TIMES':([60,66,68,71,94,108,109,112,],[-30,89,-28,-31,89,-32,89,-29,]),'EXP':([60,66,68,71,94,108,109,112,],[-30,90,-28,-31,90,-32,90,-29,]),'DIVIDE':([60,66,68,71,94,108,109,112,],[-30,91,-28,-31,91,-32,91,-29,]),'DIVENT':([60,66,68,71,94,108,109,112,],[-30,92,-28,-31,92,-32,92,-29,]),'MOD':([60,66,68,71,94,108,109,112,],[-30,93,-28,-31,93,-32,93,-29,]),'RPARENT':([60,64,65,66,68,71,80,81,84,94,108,109,112,118,134,137,],[-30,-57,-58,-25,-28,-31,104,105,108,-26,-32,-27,-29,131,139,142,]),'PARENTCR':([63,64,65,74,86,87,111,116,125,],[-42,-57,-58,97,110,-41,-42,129,-40,]),'TP':([74,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'const_block':([0,],[2,]),'const':([0,3,10,15,20,],[3,10,15,20,28,]),'dimension':([0,3,10,15,20,],[6,6,6,6,6,]),'time_mes':([17,],[22,]),'block':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[30,106,119,120,121,126,128,132,133,141,143,144,146,]),'assignment':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'function':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'consult':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'identifier':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'empty':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[37,37,37,37,37,37,37,37,37,37,37,37,37,]),'type':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[38,38,38,38,38,38,38,38,38,38,38,38,38,]),'insert':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[39,39,39,39,39,39,39,39,39,39,39,39,39,]),'del':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[40,40,40,40,40,40,40,40,40,40,40,40,40,]),'len':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[41,41,41,41,41,41,41,41,41,41,41,41,41,]),'neg':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'t':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[43,43,43,43,43,43,43,43,43,43,43,43,43,]),'f':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[44,44,44,44,44,44,44,44,44,44,44,44,44,]),'complex_id':([28,82,101,102,103,113,115,122,123,136,138,140,145,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'content':([49,72,],[57,95,]),'value':([49,63,72,96,111,124,127,130,],[61,87,61,114,87,134,135,137,]),'arithmetic':([49,59,72,],[62,84,62,]),'term':([49,59,67,72,85,],[66,66,94,66,109,]),'adding_operator':([49,59,62,72,84,],[67,67,85,67,85,]),'factor':([49,59,67,72,85,88,],[68,68,68,68,68,112,]),'list_term':([63,111,],[86,125,]),'multiplying_operator':([66,94,109,],[88,88,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> const_block','program',1,'p_program','Parser.py',22),
  ('const_block -> const const const const const block','const_block',6,'p_constB','Parser.py',26),
  ('block -> assignment','block',1,'p_block0','Parser.py',30),
  ('block -> function','block',1,'p_block1','Parser.py',35),
  ('block -> consult','block',1,'p_block2','Parser.py',40),
  ('assignment -> identifier ASSIGN content SEMICOLON block','assignment',5,'p_simpleAssignment0','Parser.py',46),
  ('assignment -> GLOBAL ID ASSIGN content SEMICOLON block','assignment',6,'p_simpleAssignment1','Parser.py',50),
  ('assignment -> ID COMMA ID ASSIGN value COMMA value SEMICOLON block','assignment',9,'p_doubleAssignment','Parser.py',54),
  ('assignment -> empty','assignment',1,'p_assignmentEmp','Parser.py',58),
  ('function -> type','function',1,'p_function0','Parser.py',67),
  ('function -> insert','function',1,'p_function1','Parser.py',71),
  ('function -> del','function',1,'p_function2','Parser.py',75),
  ('function -> len','function',1,'p_function3','Parser.py',79),
  ('function -> neg','function',1,'p_function4','Parser.py',83),
  ('function -> t','function',1,'p_function5','Parser.py',87),
  ('function -> f','function',1,'p_function6','Parser.py',91),
  ('type -> TYPE LPARENT ID RPARENT SEMICOLON block','type',6,'p_type','Parser.py',95),
  ('content -> RANGE LPARENT INT COMMA value RPARENT','content',6,'p_range','Parser.py',99),
  ('insert -> ID DOT INSERT LPARENT INT COMMA value RPARENT SEMICOLON block','insert',10,'p_insert','Parser.py',103),
  ('del -> ID DOT DELETE LPARENT INT RPARENT SEMICOLON block','del',8,'p_del','Parser.py',107),
  ('len -> LEN LPARENT ID RPARENT SEMICOLON block','len',6,'p_len','Parser.py',111),
  ('neg -> complex_id DOT NEG SEMICOLON block','neg',5,'p_neg','Parser.py',115),
  ('t -> complex_id DOT T SEMICOLON block','t',5,'p_t','Parser.py',119),
  ('f -> complex_id DOT F SEMICOLON block','f',5,'p_f','Parser.py',123),
  ('arithmetic -> term','arithmetic',1,'p_arithmetic0','Parser.py',130),
  ('arithmetic -> adding_operator term','arithmetic',2,'p_arithmetic1','Parser.py',133),
  ('arithmetic -> arithmetic adding_operator term','arithmetic',3,'p_arithmetic2','Parser.py',137),
  ('term -> factor','term',1,'p_term0','Parser.py',146),
  ('term -> term multiplying_operator factor','term',3,'p_term1','Parser.py',150),
  ('factor -> INT','factor',1,'p_factor0','Parser.py',159),
  ('factor -> ID','factor',1,'p_factor1','Parser.py',163),
  ('factor -> LPARENT arithmetic RPARENT','factor',3,'p_factor2','Parser.py',167),
  ('const -> TIMER ASSIGN INT SEMICOLON','const',4,'p_const0','Parser.py',176),
  ('const -> RANGOTIMER ASSIGN QUOTES time_mes QUOTES SEMICOLON','const',6,'p_const1','Parser.py',180),
  ('const -> dimension ASSIGN INT SEMICOLON','const',4,'p_const2','Parser.py',184),
  ('const -> CUBO ASSIGN INT SEMICOLON','const',4,'p_const3','Parser.py',188),
  ('content -> value','content',1,'p_cont0','Parser.py',197),
  ('content -> arithmetic','content',1,'p_cont1','Parser.py',201),
  ('content -> PARENTCL list_term PARENTCR','content',3,'p_cont2','Parser.py',205),
  ('list_term -> value COMMA list_term','list_term',3,'p_listT0','Parser.py',212),
  ('list_term -> value','list_term',1,'p_listT1','Parser.py',216),
  ('list_term -> <empty>','list_term',0,'p_listTEmp','Parser.py',220),
  ('consult -> ID PARENTCL INT PARENTCR SEMICOLON block','consult',6,'p_consult0','Parser.py',225),
  ('consult -> ID PARENTCL INT TP INT PARENTCR SEMICOLON block','consult',8,'p_consult1','Parser.py',229),
  ('dimension -> DIMFILAS','dimension',1,'p_dim0','Parser.py',236),
  ('dimension -> DIMCOLUMNAS','dimension',1,'p_dim1','Parser.py',240),
  ('time_mes -> MIL','time_mes',1,'p_timeM0','Parser.py',249),
  ('time_mes -> MIN','time_mes',1,'p_timeM1','Parser.py',253),
  ('time_mes -> SEG','time_mes',1,'p_timeM2','Parser.py',257),
  ('adding_operator -> PLUS','adding_operator',1,'p_addingOp0','Parser.py',266),
  ('adding_operator -> MINUS','adding_operator',1,'p_addingOp1','Parser.py',270),
  ('multiplying_operator -> TIMES','multiplying_operator',1,'p_multiplyingOp0','Parser.py',274),
  ('multiplying_operator -> EXP','multiplying_operator',1,'p_multiplyingOp1','Parser.py',277),
  ('multiplying_operator -> DIVIDE','multiplying_operator',1,'p_multiplyingOp2','Parser.py',281),
  ('multiplying_operator -> DIVENT','multiplying_operator',1,'p_multiplyingOp3','Parser.py',285),
  ('multiplying_operator -> MOD','multiplying_operator',1,'p_multiplyingOp4','Parser.py',289),
  ('value -> FALSE','value',1,'p_value0','Parser.py',298),
  ('value -> TRUE','value',1,'p_value1','Parser.py',302),
  ('relation -> ASSIGN','relation',1,'p_relation0','Parser.py',311),
  ('relation -> NE','relation',1,'p_relation1','Parser.py',315),
  ('relation -> LT','relation',1,'p_relation2','Parser.py',319),
  ('relation -> GT','relation',1,'p_relation3','Parser.py',323),
  ('relation -> LTE','relation',1,'p_relation4','Parser.py',327),
  ('relation -> GTE','relation',1,'p_relation5','Parser.py',331),
  ('identifier -> ID','identifier',1,'p_identifier0','Parser.py',340),
  ('identifier -> complex_id','identifier',1,'p_identifier1','Parser.py',344),
  ('complex_id -> ID PARENTCL INT PARENTCR','complex_id',4,'p_cmplxId0','Parser.py',348),
  ('complex_id -> ID PARENTCL INT TP INT PARENTCR','complex_id',6,'p_cmplxId1','Parser.py',352),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',361),
]
