
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDrightASSIGNleftLTLTEGTGTEleftPLUSMINUSleftMODDIVENTTIMESDIVIDEleftEXPleftLPARENTRPARENTASSIGN BLINK BOOKED COMMA CONST DELETE DIVENT DIVIDE DOT ELSE EXP F FALSE FOR GLOBAL GT GTE ID IF INSERT INT LCORCH LEN LENGHTERROR LPARENT LT LTE MINUS MOD NE NEG PARENTCL PARENTCR PLUS PROCEDURE RANGE RCORCH RPARENT SEMICOLON T TIMES TP TRUE TYPE VARERROR WHILEprogram : statement statement : simpleAssignment functionsimpleAssignment : ID ASSIGN term SEMICOLON statementsimpleAssignment : emptyfunction : type statementfunction : emptytype : TYPE LPARENT ID RPARENT SEMICOLONterm : FALSEterm : TRUEterm : factorfactor : IDfactor : INTempty : '
    
_lr_action_items = {'ID':([0,7,10,12,20,23,],[4,4,13,19,4,-7,]),'TYPE':([0,3,5,6,7,8,11,20,22,23,],[-13,9,-4,-2,-13,-6,-5,-13,-3,-7,]),'$end':([0,1,2,3,5,6,7,8,11,20,22,23,],[-13,0,-1,-13,-4,-2,-13,-6,-5,-13,-3,-7,]),'ASSIGN':([4,],[10,]),'LPARENT':([9,],[12,]),'FALSE':([10,],[15,]),'TRUE':([10,],[16,]),'INT':([10,],[18,]),'SEMICOLON':([13,14,15,16,17,18,21,],[-11,20,-8,-9,-10,-12,23,]),'RPARENT':([19,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,7,20,],[2,11,22,]),'simpleAssignment':([0,7,20,],[3,3,3,]),'empty':([0,3,7,20,],[5,8,5,5,]),'function':([3,],[6,]),'type':([3,],[7,]),'term':([10,],[14,]),'factor':([10,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','Parser.py',21),
  ('statement -> simpleAssignment function','statement',2,'p_statement','Parser.py',25),
  ('simpleAssignment -> ID ASSIGN term SEMICOLON statement','simpleAssignment',5,'p_simpleAssignment0','Parser.py',29),
  ('simpleAssignment -> empty','simpleAssignment',1,'p_simpleAssignmentEmp','Parser.py',33),
  ('function -> type statement','function',2,'p_function0','Parser.py',37),
  ('function -> empty','function',1,'p_functionEmp','Parser.py',41),
  ('type -> TYPE LPARENT ID RPARENT SEMICOLON','type',5,'p_type','Parser.py',44),
  ('term -> FALSE','term',1,'p_term0','Parser.py',48),
  ('term -> TRUE','term',1,'p_term1','Parser.py',52),
  ('term -> factor','term',1,'p_term2','Parser.py',56),
  ('factor -> ID','factor',1,'p_factor0','Parser.py',60),
  ('factor -> INT','factor',1,'p_factor1','Parser.py',64),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',68),
]
